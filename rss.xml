<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>써드아이시스템 기술문서</title>
    <link>https://docs.3rdeyesys.com/</link>
    <description>Recent content on 써드아이시스템 기술문서</description>
    <generator>Hugo 0.128.2</generator>
    <language>ko-kr</language>
    <lastBuildDate>Tue, 13 Aug 2024 00:00:00 +0900</lastBuildDate>
    <atom:link href="https://docs.3rdeyesys.com/rss.xml" rel="self" type="application/rss+xml" /><item>
      <title>Ncloud API 인증키 생성하는 방법</title>
      <link>https://docs.3rdeyesys.com/docs/api/ncloud-api-key-create-guide/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/api/ncloud-api-key-create-guide/</guid>
      <description>개요 linkNcloud(네이버 클라우드)를 이용하다보면 여러 가지 정보를 조회하거나 서버를 생성하는 등의 작업을 위해 API를 활용하게 되는 경우가 많습니다. 이때 API를 사용하기 위해 반드시 필요한 것이 [Access Key]와 [Secret Key]등으로 구성된 [API 인증키]입니다. 여기서는 [API 인증키]를 어떻게 생성하고, 보안과 관련해서 지켜야할 원칙이나 설정은 어떤 것이 있는지 정리해보겠습니다.&#xA;계정과 권한 설정 link그러면 [API 인증키]를 어떻게 생성하는지 살펴보기 전에 [API 인증키]를 생성할 계정과 권한 설정에 관해서 먼저 정리해보겠습니다.&#xA;API 인증키 생성 계정 linkAPI 인증키 생성과 관련해서 가장 중요한 원칙은 메인 계정이 아닌 최소 권한을 가진 서브 계정(Sub Account)에서 API 인증키를 생성하는 것입니다.</description>
    </item><item>
      <title>Windows PowerShell에서 Ncloud API를 호출하는 샘플 예제</title>
      <link>https://docs.3rdeyesys.com/docs/api/ncloud-api-call-powershell-sample/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/api/ncloud-api-call-powershell-sample/</guid>
      <description>개요 link네이버 클라우드 인프라와 상품 및 솔루션 등의 활용을 도와주는 API를 Windows PowerShell에서 호출하는 샘플 예제를 정리해봅니다.&#xA;네이버 클라우드 API는 RESTful API 방식으로 제공되며, XML와 JSON 형식으로 응답합니다 우선 전체 소스코드를 살펴보고 다음으로 주요 코드를 상세하게 살펴보겠습니다.&#xA;API 호출 샘플 코드 link&#xD;function Sign-Request(&#xD;[string] $api_server,&#xD;[string] $api_url, [string] $apicall_method, [string] $ncloud_accesskey, [string] $ncloud_secretkey )&#xD;{ $unixtimestamp = [DateTimeOffset]::Now.ToUnixTimeSeconds() * 1000&#xD;$space = &amp;#34; &amp;#34;&#xD;$new_line = &amp;#34;`n&amp;#34;&#xD;$message = $apicall_method &amp;#43; $space &amp;#43;&#xD;$api_url &amp;#43; $new_line &amp;#43;&#xD;$unixtimestamp &amp;#43; $new_line &amp;#43;&#xD;$ncloud_accesskey $signature = Compute-HMACSHA256Hash $ncloud_secretkey $message&#xD;# Return request headers&#xD;return @{&#xD;&amp;#34;x-ncp-apigw-timestamp&amp;#34; = $unixtimestamp;&#xD;&amp;#34;x-ncp-iam-access-key&amp;#34; = $ncloud_accesskey;&#xD;&amp;#34;x-ncp-apigw-signature-v2&amp;#34; = $signature&#xD;}&#xD;}&#xD;function Compute-HMACSHA256Hash(&#xD;[string] $secret, # base64 encoded&#xD;[string] $content&#xD;)&#xD;{&#xD;$hmacsha = New-Object System.</description>
    </item><item>
      <title>Python으로 Ncloud API를 호출하는 샘플 예제</title>
      <link>https://docs.3rdeyesys.com/docs/api/ncloud-api-call-python-sample/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/api/ncloud-api-call-python-sample/</guid>
      <description>개요 linkNcloud (네이버 클라우드) 인프라와 상품 및 솔루션 등의 활용을 도와주는 API를 Python으로 호출하는 샘플 예제를 정리해봅니다.&#xA;Ncloud API는 RESTful API 방식으로 제공되며, XML와 JSON 형식으로 응답합니다 우선 전체 소스코드를 살펴보고 다음으로 주요 코드를 상세하게 살펴보겠습니다.&#xA;API 호출 샘플 코드 link&#xD;import sys&#xD;import os&#xD;import hashlib&#xD;import hmac&#xD;import base64&#xD;import requests&#xD;import time&#xD;# unix timestamp 설정&#xD;timestamp = int(time.time() * 1000)&#xD;timestamp = str(timestamp)&#xD;# Ncloud API Key 설정&#xD;ncloud_accesskey = &amp;#34;네이버 클라우드 AccessKey&amp;#34;&#xD;ncloud_secretkey = &amp;#34;네이버 클라우드 SecretKey&amp;#34;&#xD;# 암호화 문자열 생성을 위한 기본값 설정&#xD;apicall_method = &amp;#34;GET&amp;#34;&#xD;space = &amp;#34; &amp;#34;&#xD;new_line = &amp;#34;\n&amp;#34;&#xD;# API 서버 정보&#xD;api_server = &amp;#34;https://billingapi.</description>
    </item><item>
      <title>C#으로 Ncloud API를 호출하는 샘플 예제</title>
      <link>https://docs.3rdeyesys.com/docs/api/ncloud-api-call-csharp-sample/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/api/ncloud-api-call-csharp-sample/</guid>
      <description>개요 link네이버 클라우드 인프라와 상품 및 솔루션 등의 활용을 도와주는 API를 C#으로 호출하는 샘플 예제중에서 핵심인 인증을 위한 암호화 문자열 생성 코드를 정리해보겠습니다.&#xA;암호화 샘플 코드 link&#xD;public string unixTimeStamp;&#xD;public string ncpAccessKey = &amp;#34;네이버 클라우드 AccessKey&amp;#34;;&#xD;public string ncpSecretKey = &amp;#34;네이버 클라우드 SecretKey&amp;#34;;&#x9;public string apiCallMethod = &amp;#34;GET&amp;#34;;&#xD;public string apiServer = &amp;#34;https://billingapi.apigw.ntruss.com&amp;#34;;&#xD;public string apiUrl = &amp;#34;네이버 클라우드 API URL&amp;#34;;&#xD;// apiUrl 예시: &amp;#34;/billing/v1/product/getProductPriceList&amp;#34;;&#xD;public string MakeSignature()&#xD;{&#xD;string msgSignature;&#xD;string space = &amp;#34; &amp;#34;;&#xD;string newLine = &amp;#34;\n&amp;#34;;&#xD;// 13자리 유닉스 타임스탬프 설정&#xD;DateTime now = DateTime.</description>
    </item><item>
      <title>PHP로 Ncloud API를 호출하는 샘플 예제</title>
      <link>https://docs.3rdeyesys.com/docs/api/ncloud-api-call-php-sample/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/api/ncloud-api-call-php-sample/</guid>
      <description>개요 link네이버 클라우드 인프라와 상품 및 솔루션 등의 활용을 도와주는 API를 PHP로 호출하는 샘플 예제를 정리해봅니다.&#xA;네이버 클라우드 API는 RESTful API 방식으로 제공되며, XML와 JSON 형식으로 응답합니다 우선 전체 소스코드를 살펴보고 다음으로 주요 코드를 상세하게 살펴보겠습니다.&#xA;API 호출 샘플 코드 link&#xD;&amp;lt;?php&#xD;// 기본 데이터 설정&#xD;$unixtimestamp = round(microtime(true) * 1000);&#xD;$ncp_accesskey = &amp;#34;네이버 클라우드 AccessKey&amp;#34;;&#xD;$ncp_secretkey = &amp;#34;네이버 클라우드 SecretKey&amp;#34;;&#x9;$api_server = &amp;#34;https://billingapi.apigw.ntruss.com&amp;#34;;&#xD;// API URL 예시 : 상품별 가격 리스트 호출 api&#xD;$api_url = &amp;#34;/billing/v1/product/getProductPriceList&amp;#34;;&#xD;$api_url = $api_url.</description>
    </item><item>
      <title>Kubernetes Service 클러스터 생성 및 제어 가이드 | Windows</title>
      <link>https://docs.3rdeyesys.com/docs/containers/kubernetes-service-start-guide-windows/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/containers/kubernetes-service-start-guide-windows/</guid>
      <description>개요 linkNcloud (네이버 클라우드) VPC 환경에서 Kubernetes(쿠버네티스) 서비스를 생성하고 Windows 환경에서 제어하는 방법에 대해 소개합니다.&#xA;쿠버네티스란? link쿠버네티스(Kubernetes, K8S)는 배포, 스케일링, 그리고 컨테이너화된 애플리케이션의 관리를 자동화 해주는 오픈 소스 컨테이너 오케스트레이션 엔진으로 구글에서 처음 개발하기 시작했으나 현재는 구글이 오픈소스 프로젝트로 공개한 상태입니다.&#xA;특징 link쿠버네티스는 다음과 같은 특징이 있으며, 자세한 내용은 쿠버네티스 공식 페이지를 참고하시기 바랍니다.&#xA;쿠버네티스 공식 페이지: https://kubernetes.io/ko/docs/home/&#xA;서비스 디스커버리와 로드 밸런싱 스토리지 오케스트레이션 자동화된 롤아웃과 롤백 자동화된 빈 패킹(bin packing) 자동화된 복구(self-healing) 시크릿과 구성 관리 사전 준비 link먼저 쿠버네티스 클러스터에 사용할 전용 VPC와 Private 또는 Public Subnet 그리고, Load Balancer용 Subnet이 필요합니다.</description>
    </item><item>
      <title>Kubernetes Service 클러스터 생성 및 제어 가이드 | Linux</title>
      <link>https://docs.3rdeyesys.com/docs/containers/kubernetes-service-start-guide-linux/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/containers/kubernetes-service-start-guide-linux/</guid>
      <description>개요 linkNcloud (네이버 클라우드) VPC 환경에서 Kubernetes(쿠버네티스) 서비스를 생성하고 Linux 환경에서 제어하는 방법에 대해 소개합니다.&#xA;쿠버네티스란? link쿠버네티스(Kubernetes, K8S)는 배포, 스케일링, 그리고 컨테이너화된 애플리케이션의 관리를 자동화 해주는 오픈 소스 컨테이너 오케스트레이션 엔진으로 구글에서 처음 개발하기 시작했으나 현재는 구글이 오픈소스 프로젝트로 공개한 상태입니다.&#xA;특징 link쿠버네티스는 다음과 같은 특징이 있으며, 자세한 내용은 쿠버네티스 공식 페이지를 참고하시기 바랍니다.&#xA;쿠버네티스 공식 페이지: https://kubernetes.io/ko/docs/home/&#xA;서비스 디스커버리와 로드 밸런싱 스토리지 오케스트레이션 자동화된 롤아웃과 롤백 자동화된 빈 패킹(bin packing) 자동화된 복구(self-healing) 시크릿과 구성 관리 사전 준비 link먼저 쿠버네티스 클러스터에 사용할 전용 VPC와 Private 또는 Public Subnet 그리고, Load Balancer용 Subnet이 필요합니다.</description>
    </item><item>
      <title>MySQL DB를 Object Storage로 자동 백업하기 | CentOS</title>
      <link>https://docs.3rdeyesys.com/docs/database/mysql-mariadb/backup/mysql-auto-backup-to-object-storage-centos/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/database/mysql-mariadb/backup/mysql-auto-backup-to-object-storage-centos/</guid>
      <description>개요 link네이버 클라우드 CentOS에서 설치형 mysql DB를 매일 일정한 시간에 Object Storage로 자동으로 백업 받는 방법에 대해 정리해보았습니다.&#xA;순서는 로컬에 백업 파일 생성 후에 Object Storage로 저장하는 단계로 진행됩니다.&#xA;백업 폴더 생성 link&#xD;mkdir /data_backup&#xD;mkdir /data_backup/db&#xD;mysql DB 로컬 백업 스크립트 작성 link우선은 mysql DB를 로컬에 백업 받는 스크립트를 작성합니다.&#xA;vi /bin/db_backup.sh&#xD;#!/bin/bash&#xD;DATE=$(date &amp;#43;%Y%m%d%H%M%S)&#xD;BACKUP_DIR=/data_backup/db/&#xD;# 전체 DB를 백업할 경우&#xD;mysqldump -u root -p디비패스워드 --all-databases &amp;gt; $BACKUP_DIR&amp;#34;backup_&amp;#34;$DATE.sql&#xD;# 특정 DB를 백업할 경우&#xD;# mysqldump -u root -p디비패스워드 --databases DB명 &amp;gt; $BACKUP_DIR&amp;#34;backup_&amp;#34;$DATE.</description>
    </item><item>
      <title>MySQL DB를 Object Storage로 자동 백업하기 | Ubuntu</title>
      <link>https://docs.3rdeyesys.com/docs/database/mysql-mariadb/backup/mysql-auto-backup-to-object-storage-ubuntu/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/database/mysql-mariadb/backup/mysql-auto-backup-to-object-storage-ubuntu/</guid>
      <description>개요 link네이버 클라우드 Ubuntu에서 설치형 mysql DB를 매일 일정한 시간에 Object Storage로 자동으로 백업 받는 방법에 대해 정리해보았습니다.&#xA;순서는 로컬에 백업 파일 생성 후에 Object Storage로 저장하는 단계로 진행됩니다.&#xA;백업 폴더 생성 link&#xD;mkdir /data_backup&#xD;mkdir /data_backup/db&#xD;mysql DB 로컬 백업 스크립트 작성 link우선은 mysql DB를 로컬에 백업 받는 스크립트를 작성합니다.&#xA;vi /bin/db_backup.sh&#xD;#!/bin/bash&#xD;DATE=$(date &amp;#43;%Y%m%d%H%M%S)&#xD;BACKUP_DIR=/data_backup/db/&#xD;# 전체 DB를 백업할 경우&#xD;mysqldump -u root -p디비패스워드 --all-databases &amp;gt; $BACKUP_DIR&amp;#34;backup_&amp;#34;$DATE.sql&#xD;# 특정 DB를 백업할 경우&#xD;# mysqldump -u root -p디비패스워드 --databases DB명 &amp;gt; $BACKUP_DIR&amp;#34;backup_&amp;#34;$DATE.</description>
    </item><item>
      <title>Archive Storage CLI 사용 가이드 | Windows 환경</title>
      <link>https://docs.3rdeyesys.com/docs/storage/archive-storage/cli-guide-windows/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0900</pubDate>
      <guid>https://docs.3rdeyesys.com/docs/storage/archive-storage/cli-guide-windows/</guid>
      <description>개요 link네이버 클라우드(Ncloud) Archive Storage CLI를 Windows 환경에서 사용하는 방법에 대해 정리해보겠습니다.&#xA;CLI 정보 linkArchive Storage가 OepnStack으로 구성되어 있고, Client는 Python 기반의 Client를 사용하게 됩니다.&#xA;python-keystoneclient : 3.17.0 python-swiftclient : 3.6.0 Python 다운로드 link먼저 Python을 다운로드 합니다. 권장하는 버전은 3.6 이상입니다. 여기서는 3.9를 설치하겠습니다.&#xA;https://www.python.org/downloads/ Python 설치 linkPATH 추가 linkPython 설치 시작화면에 PATH에 python을 추가하는 옵션이 있습니다.&#xA;&amp;ldquo;Add Python 3.9 to PATH&amp;rdquo; 옵션을 선택하고 설치를 시작하면 됩니다.&#xA;PATH 문자 길이 제한 해제 linkWindows에는 기본설정에 파일경로가 최대 260자로 제한되어 있는데, 이 제한을 풀것인지 확인하는 과정입니다.</description>
    </item>
  </channel>
</rss>