<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>3RDEYESYSTEM Technical Documentations</title>
        <description>써드아이시스템(3rdeyesys) 기술문서 사이트입니다 - Ncloud 프리미엄 파트너</description>
        <link>https://docs.3rdeyesys.com/</link>
        <atom:link href="https://docs.3rdeyesys.com/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Fri, 19 May 2023 10:38:05 +0900</pubDate>
        <lastBuildDate>Fri, 19 May 2023 10:38:05 +0900</lastBuildDate>
        <generator>Jekyll v4.2.2</generator>
        
        
        <item>
            <title>로드밸런서(Application Load Balancer) 접속 로그 확인하는 방법</title>
            <description>## 개요
Ncloud (네이버 클라우드) VPC 환경의 대표적인 로드밸런서(Load Balancer)인 **애플리케이션 로드밸런서(Application Load Balancer)의 접속 로그**를 확인하는 방법에 대해 정리해보겠습니다.  

## 테스트 준비
- 서버 생성: **록키 리눅스 (Rocky Linux 8.6)**
- 로드밸런서 생성: **애플리케이션 로드밸런서(Application Load Balancer)**
- 서버와 로드밸런서 연결

## 서버 생성
테스트용 서버는 **Rocky Linux 8.6 서버**로 생성했습니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-access-log-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 Application Load Balancer의 접속 로그 확인하는 방법&quot; caption=&quot;&quot; %}

## 로드밸런서 생성
**Application Load Balancer**를 생성하고 테스트용 서버와 연결까지 마쳤습니다.

{% include callout_v2.html type=&quot;info&quot;  content=&quot;Application Load Blancer 의 생성 가이드는 아래 문서를 참고하시기 바랍니다. &lt;br /&gt;&lt;br /&gt;
- &lt;a href=&apos;/networking/ncloud_networking_load_balancer_application_lb.html&apos; target=&apos;_blank&apos;&gt;VPC 환경에서 Application Load Balancer 생성하기&lt;/a&gt;&quot; %}

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-access-log-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 Application Load Balancer의 접속 로그 확인하는 방법&quot; caption=&quot;&quot; %}

## 접속 로그 수집 활성화
로드밸런서의 접속 로그를 수집하려면 접속 로그 수집 기능을 활성화 해야 합니다. 생성된 로드밸런서를 선택하고 [**로드밸런서 설정 변경**] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-access-log-05.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 Application Load Balancer의 접속 로그 확인하는 방법&quot; caption=&quot;&quot; %}

- [**로드밸런서 설정 변경**] 팝업창에서 [**액세스 로그 수집**] 항목이 [**비활성**] 상태인 것을 확인할 수 있습니다. 여기서 [**설정**] 버튼을 클릭합니다.
{% include image.html file=&quot;networking/ncloud-networking-load-balancer-access-log-06.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 Application Load Balancer의 접속 로그 확인하는 방법&quot; caption=&quot;&quot; %}

- [**액세스 로그 수집**]을 활성화할 것인지 한번 더 확인하는 창이 뜨는데 [**확인**] 버튼을 클릭합니다.
{% include image.html file=&quot;networking/ncloud-networking-load-balancer-access-log-07.png&quot; width=&quot;485&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 Application Load Balancer의 접속 로그 확인하는 방법&quot; caption=&quot;&quot; %}

- [**로드밸런서 설정 변경**] 팝업창에서 [**액세스 로그 수집**] 항목이 [**활성**] 상태로 변경된 것을 확인할 수 있습니다.
{% include image.html file=&quot;networking/ncloud-networking-load-balancer-access-log-08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 Application Load Balancer의 접속 로그 확인하는 방법&quot; caption=&quot;&quot; %}


## 접속 테스트
웹브라우저에서 로드밸런서 주소로 접속해서 정상 작동하는지 확인했습니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-access-log-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 Application Load Balancer의 접속 로그 확인하는 방법&quot; caption=&quot;&quot; %}

## 로드밸런서 접속 로그 확인
로드밸런서 접속 로그는 Ncloud 서비스 중에서 [**Cloud Log Analytics**]에서 확인할 수 있습니다.  

[**Cloud Log Analytics**] - [**Search**] - [**로그 종류 선택**]에서 [**application_loadbalancer_access**] 필드를 선택하고 [**Log 발생시간**]을 상황에 맞에 선택한 후에 검색을 하면 아래 스샷과 같이 접속로그를 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-access-log-04.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 Application Load Balancer의 접속 로그 확인하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1. VPC 환경에서 Application Load Balancer 생성하기
	- &lt;a href=&quot;/networking/ncloud_networking_load_balancer_application_lb.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/networking/ncloud_networking_load_balancer_application_lb.html&lt;/a&gt;

2. Cloud Log Analytics 설정 가이드
	- &lt;a href=&quot;/analytics/ncloud_analytics_cloud_log_analytics_guide.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/analytics/ncloud_analytics_cloud_log_analytics_guide.html&lt;/a&gt;
</description>
            <pubDate>Fri, 19 May 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/networking/ncloud-networking-load-balancer-application-lb-access-log.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/networking/ncloud-networking-load-balancer-application-lb-access-log.html</guid>
            
            <category>vpc</category>
            
            <category>load_balancer</category>
            
            
        </item>
        
        <item>
            <title>VPC 환경에서 NAT Gateway 설정하기</title>
            <description>## 개요
NAT Gateway는 비공인 IP를 가진 다수의 서버들이 대표 공인 IP를 이용해 외부와 통신을 할 수 있도록 도와주는 네트워킹 서비스입니다.  
그리고, 일반적으로 서버에 직접 공인 IP를 부여하는 것과 달리 외부에서 서버로의 직접 접근은 허용하지 않기 때문에 높은 수준의 보안을 유지할 수 있는 것이 특징입니다.  
여기서는 VPC 환경에서 NAT Gateway를 어떻게 구성하고, NAT Gateway를 적용하기 전과 후의 외부와 통신 상태에 대해 확인해보도록 하겠습니다.

## NAT Gateway 특징
[**NAT Gateway**]는 생성 시 [**공인 NAT Gateway**]와 [**사설 NAT Gateway**]를 선택할 수 있습니다. **존당 5개까지 생성이 가능**하며, 각 NAT Gateway의 특징은 다음과 같습니다.

### 공인 NAT Gateway
- 사설 IP와 공인 IP를 둘 다 가지고 있습니다.
- 인터넷 outbound 통신을 할 때 Public IP에서 할당된 공인 IP를 사용합니다.
- VPC 내부에서 NAT Gateway를 통해 통신할 경우 할당된 사설 IP를 사용합니다.
- 할당된 공인 IP는 NAT Gateway를 삭제 시 재사용이 가능합니다.

### 사설 NAT Gateway
- 사설 IP만 가지고 있습니다.
- VPC 내부에서 NAT Gateway를 통해 통신할 경우 할당된 사설 IP를 사용합니다.

## VPC 서비스 위치
[**VPC**] 서비스는 [**Console**] - [**Networking**]에 위치해 있습니다.  

그리고, 아래 스샷에서 확인할 수 있듯이 [**VPC**]에는 [**VPC**], [**Subnet**], [**Network ACL**], [**NAT Gateway**], [**Route Table**], [**VPC Peering**], [**Virtual Private Gateway**] 등의 하부 서비스 메뉴가 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-natgw-routetb-00.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

## VPC 생성
먼저 VPC를 생성합니다. IP주소 범위는 10.0.0.0/16으로 정하겠습니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_01.jpg&quot; width=&quot;700&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

## Subnet 생성
Subnet은 아래와 같이 총 3가지를 준비하겠습니다.
- NAT Gateway 동작 테스트를 위해 서버용 Public, Private Subnet
- NAT Gateway를 배치할 **NAT Gateway 전용 Subnet** 

### Public Subnet 생성
Public Subnet의 IP 범위는 **10.0.0.0/24**로 설정하겠습니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_02.jpg&quot; width=&quot;700&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

### Private Subnet 생성
Private Subnet의 IP 범위는 **10.0.1.0/24**로 설정하겠습니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_03.jpg&quot; width=&quot;700&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

### NAT Gateway 전용 Subnet
NAT Gateway 전용 Subnet은 Subnet 생성 화면에서 아래쪽 용도 설정에서 [**NatGateway**]를 선택합니다.

{% include image.html file=&quot;networking/ncloud-networking-natgw-routetb-01.png&quot; width=&quot;685&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

## ACG 설정
테스트를 위한 ACG (Access Control Group)를 생성하고 설정합니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_04.jpg&quot; width=&quot;700&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

### Inbound 설정
Inbound 규칙에는 Public, Private Subnet과 SSH 접속을 위한 로컬PC IP를 허용하고, Ping 테스트를 위한 ICMP도 허용합니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_05.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

### Outbound 설정
Outbound 규칙은 TCP, UDP, ICMP 모두 전체 허용으로 추가합니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_06.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

## 서버 생성
테스트를 위해 Public, Private 각각의 Subnet에 1대씩 서버를 설정하고 Public 서버에는 공인 IP도 할당합니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_07.jpg&quot; width=&quot;772&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

### Public -&gt; Private 서버 접속 확인
Public Subnet에 있는 서버에서 Private Subnet에 있는 서버로 통신이 가능한 것을 확인할 수 있습니다.  
다음 단계에서 Private 서버로 SSH로 접속하기 위한 사전 확인 단계입니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_08.jpg&quot; width=&quot;670&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

### Private 서버 외부 접속 여부 확인
Public 서버에서 Private 서버로 SSH로 접속한 후에 Private 서버에서 외부로 통신이 되는 것을 확인해보면 불가능한 것을 확인할 수 있습니다.  
이후 단계에서 NAT Gateway를 설정하고 Private 서버에서 외부와 통신이 가능한지 확인해보겠습니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_09.jpg&quot; width=&quot;670&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

## Route Table 설정 확인
NAT Gateway를 위한 Route Table 설정을 추가하기 전에 현재 상태의 Route Table 설정을 확인해보겠습니다.

### Public Subnet의 Route Table 설정 확인
위에서 Public Subnet의 서버와 Private Subnet의 서버가 통신이 가능했던 것은 VPC와 Subnet이 생성될때 Route Table이 생성되면서 VPC 내부 통신을 위한 규칙 (10.0.0.0/16 LOCAL)이 기본으로 설정되기 때문입니다.  
그리고 Public의 경우 외부 통신을 위한 INTERNET GATEWAY가 추가되어 있는 것을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_10.jpg&quot; width=&quot;780&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

### Private Subnet의 Route Table 설정 확인
반면에 Private의 경우는 VPC 내부 통신을 위한 LOCAL만 설정된 것을 확인 할 수 있습니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_11.jpg&quot; width=&quot;780&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

Route Table 설정 화면에 들어가도 Target Type에 LOCAL만 선택할 수 있는 것을 확인할 수 있습니다.
{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_14.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

## NAT Gateway 생성
[**NAT Gateway**]는 별도의 메뉴가 있지 않고, [**Networking**] - [**VPC**] 서비스 내에 하부 서비스로 존재합니다. 그러면 이제 [**NAT Gateway 생성**] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_15.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

이름을 입력하고 서비스 상황에 따라 유형을 [**공인**] 또는 [**사설**]을 선택한 후, VPC와 위에서 생성했던 **전용 Subnet**을 선택하고, NAT Gateway를 생성합니다. 그리고 마지막으로 Route Table에 NATGW 설정을 추가해야 완료되는데, 관련 설정은 아래에서 확인 가능합니다.

{% include image.html file=&quot;networking/ncloud-networking-natgw-routetb-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

### Route Table 설정
앞에서 LOCAL 항목만 존재했던 Private Subnet의 Route Table 설정 화면에 가보면 Target Type에 NATGW가 추가된 것을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_18.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

목적지(Destination)에 0.0.0.0/0을 입력하고, Target Type을 NATGW를 선택하고 생성 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_19.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}

## 외부 접속 테스트
마지막으로 다시 한번 Private 서버에서 외부 통신이 가능한지 ping 테스트를 해보면, 아래 화면과 같이 정상적으로 통신이 되는 것을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncp_networking_natgw_routetb_20.jpg&quot; width=&quot;670&quot; alt=&quot;Ncloud VPC 환경에서 NAT Gateway 설정하기 가이드&quot; caption=&quot;&quot; %}


## 고려사항
{% include warning.html title=&quot;요금&quot; content=&quot;NAT Gateway는 사용하지 않고 생성만 해두어도 요금이 부과됩니다. (데이터 처리요금 별도)&quot; %}
  
생성 후 보유 시간에 따라 요금이 부과되는데 1개당 56원/시간 입니다. 그러므로 1달간 보유하고만 있다고 가정할 때 비용을 계산해보면 
**24시간 * 30일 * 56원 = 40,320원** 그러므로 사용하지 않는 NAT Gatway는 반드시 삭제하기를 추천드립니다.



## 참고 URL
1. NAT Gateway 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/networking-vpc-vpcdetailenatgw&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/networking-vpc-vpcdetailenatgw&lt;/a&gt;

2. NAT Gateway 특징과 비교
	- &lt;a href=&quot;https://m.blog.naver.com/n_cloudplatform/221173116642&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://m.blog.naver.com/n_cloudplatform/221173116642&lt;/a&gt;
</description>
            <pubDate>Tue, 16 May 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/networking/ncloud_networking_natgw_routetb.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/networking/ncloud_networking_natgw_routetb.html</guid>
            
            <category>vpc</category>
            
            <category>natgateway</category>
            
            <category>routetable</category>
            
            
        </item>
        
        <item>
            <title>Kubernetes Service 클러스터 생성 및 제어 가이드 | Linux</title>
            <description>## 개요
Ncloud (네이버 클라우드) VPC 환경에서 Kubernetes(쿠버네티스) 서비스를 생성하고 **Linux 환경에서 제어하는 방법**에 대해 소개합니다.

## 쿠버네티스란?
쿠버네티스(Kubernetes, K8S)는 배포, 스케일링, 그리고 컨테이너화된 애플리케이션의 관리를 자동화 해주는 오픈 소스 컨테이너 오케스트레이션 엔진으로 
구글에서 처음 개발하기 시작했으나 현재는 구글이 오픈소스 프로젝트로 공개한 상태입니다.

## 특징
쿠버네티스는 다음과 같은 특징이 있으며, 자세한 내용은 쿠버네티스 공식 페이지를 참고하시기 바랍니다.

&lt;a href=&quot;https://kubernetes.io/ko/docs/home/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://kubernetes.io/ko/docs/home/&lt;/a&gt;

- 서비스 디스커버리와 로드 밸런싱
- 스토리지 오케스트레이션
- 자동화된 롤아웃과 롤백
- 자동화된 빈 패킹(bin packing)
- 자동화된 복구(self-healing)
- 시크릿과 구성 관리


## 사전 준비
먼저 쿠버네티스 클러스터에 사용할 **전용 VPC와 Private 또는 Public Subnet 그리고, Load Balancer용 Subnet**이 필요합니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-36.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

{% include callout-v2.html type=&quot;warning&quot; level=&quot;3&quot; content=&quot;IP 대역(10.0.0.0/8,172.16.0.0/12,192.168.0.0/16) 내에서 /17~/26 범위의 Subnet, 로드밸런서 전용 Subnet이 필요합니다.&lt;br/&gt;&lt;br/&gt;
Docker Bridge 대역의 충돌을 방지하기 위해 172.17.0.0/16 범위 내의 Private Subnet, 로드밸런서 전용Subnet은 선택할 수 없습니다.&quot; %}

## 쿠버네티스 서비스 위치
Ncloud 쿠버네티스 서비스는 [콘솔] - [Services] - [Containers]에 위치하고 있습니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-33.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## 클러스터 생성 

VPC와 Subnet이 준비되었다면, 다음으로 [Kubernetes Sevice] - [Cluster]에서 생성하기를 클릭합니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-34.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## 클러스터 설정
생성할 클러스터의 정보를 설정해줍니다. 
**네트워크 타입은 Private과 Public 중에서 선택**할 수 있습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;Kubernetes Service를 위한 ACG는 자동으로 생성됩니다.&quot; %}
{% include callout-v2.html type=&quot;primary&quot; level=&quot;2&quot; content=&quot;현재 지원되고 있는 Kubernetes 버전은 [**1.24.0**], [**1.25.8**] 입니다.&quot;%}

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-35.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

### NAT Gateway 생성
`Private Subnet을 선택했을 경우`에는 아래와 같이 NAT Gateway 생성 안내 팝업이 나타나는데,  
NAT Gateway를 생성해야 아웃바운드 트래픽을 활성화할 수 있기 때문입니다.

{% include image.html file=&quot;compute/kubernetes/ncp_server_kubernetes_start_guide_10.jpg&quot; width=&quot;490&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

팝업에서 링크를 클릭해서 NAT Gateway 화면으로 이동해 NAT Gateway를 생성합니다.

{% include callout_v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;NAT Gateway 생성 가이드는 아래 문서를 참고하시기 바랍니다. &lt;br /&gt;&lt;br /&gt;
- &lt;a href=&apos;/networking/ncloud_networking_natgw_routetb.html&apos; target=&apos;_blank&apos;&gt;VPC 환경에서 NAT Gateway 설정하기&lt;/a&gt;&quot; %}

{% include image.html file=&quot;compute/kubernetes/ncp_server_kubernetes_start_guide_11.jpg&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## 노드풀 설정
노드풀 이름을 입력하고, 서버 이미지와 서버 타입을 선택하고 [추가] 버튼을 클릭합니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;현재 지원되고 있는 OS는 [**ubuntu 16.04**], [**ubuntu 18.04**], [**ubuntu 20.04**] 입니다.&quot;%}

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-37.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## 인증키 설정
다음으로 워커노드의 인증키를 설정 합니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-38.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## 최종 확인
설정 정보를 최종적으로 확인한 후 생성버튼을 클릭하여 클러스터를 생성합니다.

{% include callout-v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;쿠버네티스 클러스터 생성은 20분 정도 소요되므로 여유를 갖고 기다리시면 됩니다.&quot;%}

{% include image.html file=&quot;compute/kubernetes/ncp_server_kubernetes_start_guide_04.jpg&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## 생성 완료
생성이 완료되면 아래와 같이 클러스터와 노드풀의 정보를 확인할 수 있습니다.  
클러스터 정보 중에서 클러스터 **UUID는 아래쪽에서 IAM 인증 Kubeconifg 파일을 생성할 때 필요**하니 확인해두시기 바랍니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-12.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

[Server] 메뉴에 가면 노드풀 설정에 따라 생성된 서버를 확인할 수 있습니다.  
(서버 이름은 노드풀 이름으로 입력한 문자열 기준으로 생성되는데, 여기서는 test123-O-OOO 이런 식으로 생성되었습니다.)

그리고, 추가로 테스트를 위한 CentOS 서버(k8s-test)를 생성했습니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## IAM 인증 설정
클러스터를 제어하기 위해서는 네이버 클라우드 쿠버네티스 서비스에서 제공하는 IAM 인증을 설정해야 합니다.

### ncp-iam-authenticator 설치
Ncloud에서 제공하는 ncp-iam-authenticator 바이너리를 통해 iam 인증 config 파일을 생성 할 수 있습니다.

- ncp-iam-authenticator 바이너리를 다운로드 합니다.

```bash
~# curl -o ncp-iam-authenticator https://kr.object.ncloudstorage.com/nks-download/ncp-iam-authenticator/v1.0.5/linux/amd64/ncp-iam-authenticator
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-14.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


- 다운받은 바이너리에 실행 권한을 추가 합니다.

```bash
~# chmod +x ./ncp-iam-authenticator
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


- bin/ncp-iam-authenticator 파일을 생성하고  $PATH에 추가합니다.
- bash Profile에 추가 합니다.

```bash
~# mkdir -p $HOME/bin &amp;&amp; cp ./ncp-iam-authenticator $HOME/bin/ncp-iam-authenticator &amp;&amp; export PATH=$PATH:$HOME/bin
```
```bash
~# echo &apos;export PATH=$PATH:$HOME/bin&apos; &gt;&gt; ~/.bash_profile
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-16.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


- ncp-iam-authenticator가 정상 작동 하는지 테스트 합니다. 

```bash
~# ncp-iam-authenticator help
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-17.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## API 인증키 생성
네이버 클라우드 포탈 -&gt; 마이페이지 -&gt; 계정관리 -&gt; 인증키 관리 - API 인증키 관리 메뉴에서 Access Key ID와 Secret Key를 가져오셔야 하며, 아직 만들어진 Key가 없다면 새로 만드셔야 합니다.

{% include image.html file=&quot;api/ncloud_api_auth_key_create.png&quot; width=&quot;770&quot; alt=&quot;Ncloud API 인증키 생성 방법&quot; caption=&quot;&quot; %}

## Kubeconfig 파일 생성

### 환경변수 설정
API 인증키를 2가지 방법 중 하나를 이용해 환경변수에 등록합니다.  
  
- **첫번째 방법: OS 환경 변수 설정**

```bash
~# export NCLOUD_ACCESS_KEY={Ncloud API AccessKey}
~# export NCLOUD_SECRET_KEY={Ncloud API SecretKey}
~# export NCLOUD_API_GW=https://ncloud.apigw.ntruss.com
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-18.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


- **두번째 방법: 사용자 환경 홈 디렉터리에 configure 설정**

```bash
~# mkdir .ncloud 
~# cat &lt;&lt; EOF &gt; .ncloud/configure
[DEFAULT]
ncloud_access_key_id = {Ncloud API AccessKey}
ncloud_secret_access_key = {Ncloud API SecretKey}
ncloud_api_url = https://ncloud.apigw.ntruss.com
EOF
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-19.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

### Kubeconifg 파일 생성
환경변수에 등록이 되었다면 파일을 생성 할 차례입니다.  
아래 명령어로 클러스터에 대한 IAM 인증 Kubeconifg 파일을 생성합니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;클러러스터 UUID 값은 클러스터 상세보기의 [클러스터 이름 (UUID)] 에서  확인 할수 있습니다.&quot; %}

``` bash
~# ncp-iam-authenticator create-kubeconfig --region &lt;region-code&gt; --clusterUuid &lt;cluster-uuid&gt; --output &lt;FileName&gt;.yaml

## 예시
~# ncp-iam-authenticator create-kubeconfig --region KR --clusterUuid 12345678-1234-1234-1234-1234567890 --output kubeconfig.yaml
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-20.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## kubectl 설치
쿠버네티스 클러스터를 제어할 kubectl을 설치하기 위해 필요한 파일을 다운로드 받습니다.

``` bash
~# curl -LO &quot;https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl&quot;
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-21.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

다운 받은 파일을 설치합니다.

``` bash
~# sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

# 버전 확인
~# kubectl version --client --output=yaml
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-22.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}



## kubectl 실행
생성한 IAM 인증 kubeconfig 파일을 이용하여 kubectl 명령어를 테스트하여 정상 동작 하는지 확인 합니다.  
실행하면 아래와 같이 현재 동작 중인 노드 서버 리스트를 확인할 수 있습니다.

```bash
~# kubectl get node --kubeconfig kubeconfig.yaml
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-23.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

### 실행 명령어 단축
위와 같은 kubectl 명령은 뒤쪽에 kubeconfig 환경 설정 파일까지 입력해야 해서 다소 불편한데, 간단하게 줄일 수 있는 방법이 있습니다.  

우선 만들어진 kubeconfig.yaml 파일을 .kube/ 디렉토리 아래에 config로 이름을 바꾸어 이동 혹은 복사 합니다.

```bash
~# cp kubeconfig.yaml .kube/config
```

이렇게 하면 Kubectl을 사용 시 아래와 같이 --kuebeconfig 명령어 없이 사용 할 수 있습니다.

```bash
~# kubectl get node
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-24.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1. 쿠버네티스 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/k8s-k8soverview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/k8s-k8soverview&lt;/a&gt;

2. 클러스터 이용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/k8s-k8suse-cluster&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/k8s-k8suse-cluster&lt;/a&gt;

3. kubectl 설치 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/k8s-k8sstart#Kubectl%EC%84%A4%EC%B9%98&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/k8s-k8sstart#Kubectl&lt;/a&gt;

4. Windows 환경에서 쿠버네티스 제어하기
	- &lt;a href=&quot;/containers/ncloud-containers-kubernetes-service-start-guide-windows.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/containers/ncloud-containers-kubernetes-service-start-guide-windows.html&lt;/a&gt;  	
</description>
            <pubDate>Mon, 15 May 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/containers/ncloud-containers-kubernetes-service-start-guide-linux.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/containers/ncloud-containers-kubernetes-service-start-guide-linux.html</guid>
            
            <category>kubernetes</category>
            
            <category>vpc</category>
            
            
        </item>
        
        <item>
            <title>Kubernetes Service 클러스터 생성 및 제어 가이드 | Windows</title>
            <description>## 개요
Ncloud (네이버 클라우드) VPC 환경에서 Kubernetes(쿠버네티스) 서비스를 생성하고 **Windows 환경에서 제어하는 방법**에 대해 소개합니다.

## 쿠버네티스란?
쿠버네티스(Kubernetes, K8S)는 배포, 스케일링, 그리고 컨테이너화된 애플리케이션의 관리를 자동화 해주는 오픈 소스 컨테이너 오케스트레이션 엔진으로 
구글에서 처음 개발하기 시작했으나 현재는 구글이 오픈소스 프로젝트로 공개한 상태입니다.

## 특징
쿠버네티스는 다음과 같은 특징이 있으며, 자세한 내용은 쿠버네티스 공식 페이지를 참고하시기 바랍니다.

&lt;a href=&quot;https://kubernetes.io/ko/docs/home/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://kubernetes.io/ko/docs/home/&lt;/a&gt;

- 서비스 디스커버리와 로드 밸런싱
- 스토리지 오케스트레이션
- 자동화된 롤아웃과 롤백
- 자동화된 빈 패킹(bin packing)
- 자동화된 복구(self-healing)
- 시크릿과 구성 관리


## 사전 준비
먼저 쿠버네티스 클러스터에 사용할 **전용 VPC와 Private 또는 Public Subnet 그리고, Load Balancer용 Subnet**이 필요합니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-36.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

{% include callout-v2.html type=&quot;warning&quot; level=&quot;3&quot; content=&quot;IP 대역(10.0.0.0/8,172.16.0.0/12,192.168.0.0/16) 내에서 /17~/26 범위의 Subnet, 로드밸런서 전용 Subnet이 필요합니다.&lt;br/&gt;&lt;br/&gt;
Docker Bridge 대역의 충돌을 방지하기 위해 172.17.0.0/16 범위 내의 Private Subnet, 로드밸런서 전용Subnet은 선택할 수 없습니다.&quot; %}

## 쿠버네티스 서비스 위치
Ncloud 쿠버네티스 서비스는 [콘솔] - [Services] - [Containers]에 위치하고 있습니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-33.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## 클러스터 생성 

VPC와 Subnet이 준비되었다면, 다음으로 [Kubernetes Sevice] - [Cluster]에서 생성하기를 클릭합니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-34.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## 클러스터 설정
생성할 클러스터의 정보를 설정해줍니다. 
**네트워크 타입은 Private과 Public 중에서 선택**할 수 있습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;Kubernetes Service를 위한 ACG는 자동으로 생성됩니다.&quot; %}
{% include callout-v2.html type=&quot;primary&quot; level=&quot;2&quot; content=&quot;현재 지원되고 있는 Kubernetes 버전은 [**1.24.0**], [**1.25.8**] 입니다.&quot;%}

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-35.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


### NAT Gateway 생성
`Private Subnet을 선택했을 경우`에는 아래와 같이 NAT Gateway 생성 안내 팝업이 나타나는데,  
NAT Gateway를 생성해야 아웃바운드 트래픽을 활성화할 수 있기 때문입니다.

{% include image.html file=&quot;compute/kubernetes/ncp_server_kubernetes_start_guide_10.jpg&quot; width=&quot;490&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

팝업에서 링크를 클릭해서 NAT Gateway 화면으로 이동해 NAT Gateway를 생성합니다.

{% include callout_v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;NAT Gateway 생성 가이드는 아래 문서를 참고하시기 바랍니다. &lt;br /&gt;&lt;br /&gt;
- &lt;a href=&apos;/networking/ncloud_networking_natgw_routetb.html&apos; target=&apos;_blank&apos;&gt;VPC 환경에서 NAT Gateway 설정하기&lt;/a&gt;&quot; %}

{% include image.html file=&quot;compute/kubernetes/ncp_server_kubernetes_start_guide_11.jpg&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## 노드풀 설정
노드풀 이름을 입력하고, 서버 이미지와 서버 타입을 선택하고 [추가] 버튼을 클릭합니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;현재 지원되고 있는 OS는 [**ubuntu 16.04**], [**ubuntu 18.04**], [**ubuntu 20.04**] 입니다.&quot;%}

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-37.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## 인증키 설정
다음으로 워커노드의 인증키를 설정 합니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-38.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## 최종 확인
설정 정보를 최종적으로 확인한 후 생성버튼을 클릭하여 클러스터를 생성합니다.

{% include callout-v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;쿠버네티스 클러스터 생성은 20분 정도 소요되므로 여유를 갖고 기다리시면 됩니다.&quot;%}

{% include image.html file=&quot;compute/kubernetes/ncp_server_kubernetes_start_guide_04.jpg&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## 생성 완료
생성이 완료되면 아래와 같이 클러스터와 노드풀의 정보를 확인할 수 있습니다.  
클러스터 정보 중에서 클러스터 **UUID는 아래쪽에서 IAM 인증 Kubeconifg 파일을 생성할 때 필요**하니 확인해두시기 바랍니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-12.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

[Server] 메뉴에 가면 노드풀 설정에 따라 생성된 서버를 확인할 수 있습니다.  
(서버 이름은 노드풀 이름으로 입력한 문자열 기준으로 생성되는데, 여기서는 test123-O-OOO 이런 식으로 생성되었습니다.)

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## IAM 인증 설정
클러스터를 제어하기 위해서는 네이버 클라우드 쿠버네티스 서비스에서 제공하는 IAM 인증을 설정해야 합니다.

### ncp-iam-authenticator 설치
Ncloud에서 제공하는 ncp-iam-authenticator 바이너리를 통해 iam 인증 config 파일을 생성 할 수 있습니다.

- ncp-iam-authenticator 바이너리를 다운로드 합니다.

``` powershell
&gt; curl -o ncp-iam-authenticator.exe https://kr.object.ncloudstorage.com/nks-download/ncp-iam-authenticator/v1.0.5/windows/amd64/ncp-iam-authenticator.exe
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-25.png&quot; width=&quot;843&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

- ncp-iam-authenticator가 정상 작동 하는지 테스트 합니다. 

``` powershell
&gt; ncp-iam-authenticator help
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-26.png&quot; width=&quot;843&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## API 인증키 생성
네이버 클라우드 포탈 -&gt; 마이페이지 -&gt; 계정관리 -&gt; 인증키 관리 - API 인증키 관리 메뉴에서 Access Key ID와 Secret Key를 가져오셔야 하며, 아직 만들어진 Key가 없다면 새로 만드셔야 합니다.

{% include image.html file=&quot;api/ncloud_api_auth_key_create.png&quot; width=&quot;770&quot; alt=&quot;Ncloud API 인증키 생성 방법&quot; caption=&quot;&quot; %}

## Kubeconfig 파일 생성
API 인증키를 2가지 방법 중 하나를 이용해 환경변수에 등록합니다.

**1. OS 환경 변수 설정**

``` powershell
&gt; SET NCLOUD_ACCESS_KEY={Ncloud API AccessKey}
&gt; SET NCLOUD_SECRET_KEY={Ncloud API SecretKey}
&gt; SET NCLOUD_API_GW=https://ncloud.apigw.ntruss.com
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-27.png&quot; width=&quot;843&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


**2. 사용자 계정 홈 폴더에 configure 설정**  
Windows 사용자 계정 폴더에 .ncloud 폴더를 만들고 아래와 같은 내용으로 configure 파일을 생성합니다.

``` powershell
&gt; mkdir C:\Users\{User Account}\.ncloud
&gt; copy con C:\Users\{User Account}\.ncloud\configure
[DEFAULT]
ncloud_access_key_id = {Ncloud API AccessKey}
ncloud_secret_access_key = {Ncloud API SecretKey}
ncloud_api_url = https://ncloud.apigw.ntruss.com
^Z
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-28.png&quot; width=&quot;843&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

**3. Kubeconifg 파일 생성**  
환경변수에 등록이 되었다면 파일을 생성 할 차례입니다.  
아래 명령어로 클러스터에 대한 IAM 인증 Kubeconifg 파일을 생성합니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;클러러스터 UUID 값은 클러스터 상세보기의 [클러스터 이름 (UUID)] 에서  확인 할수 있습니다.&quot; %}

``` powershell
&gt; ncp-iam-authenticator create-kubeconfig --region &lt;region-code&gt; --clusterUuid &lt;cluster-uuid&gt; --output &lt;FileName&gt;.yaml

## 예시
&gt; ncp-iam-authenticator create-kubeconfig --region KR --clusterUuid 12345678-1234-1234-1234-1234567890 --output kubeconfig.yaml
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-29.png&quot; width=&quot;843&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## kubectl 설치
쿠버네티스 클러스터를 제어할 kubectl을 설치하기 위해 필요한 파일을 다운로드 받고, 버전 정보를 확인합니다.

아래 두가지 방법 중에 하나를 선택해 다운로드 받으시면 됩니다.

&lt;a href=&quot;https://dl.k8s.io/release/v1.24.0/bin/windows/amd64/kubectl.exe&quot; target=&quot;_self&quot; style=&quot;word-break:break-all;&quot;&gt;Download the latest release v1.24.0&lt;/a&gt;

``` bash
&gt; curl -LO https://dl.k8s.io/release/v1.24.0/bin/windows/amd64/kubectl.exe
```

``` powershell
&gt; kubectl version --client --output=yaml
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-30.png&quot; width=&quot;843&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## kubectl 실행
생성한 IAM 인증 kubeconfig 파일을 이용하여 kubectl 명령어를 테스트하여 정상 동작 하는지 확인 합니다.  
실행하면 아래와 같이 현재 동작 중인 노드 서버 리스트를 확인할 수 있습니다.

``` powershell
&gt; kubectl get node --kubeconfig kubeconfig.yaml
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-31.png&quot; width=&quot;843&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

### 실행 명령어 단축
위와 같은 kubectl 명령은 뒤쪽에 kubeconfig 환경 설정 파일까지 입력해야 해서 다소 불편한데, 간단하게 줄일 수 있는 방법이 있습니다.  

우선 만들어진 kubeconfig.yaml 파일을 .kube/ 디렉토리 아래에 config로 이름을 바꾸어 이동 혹은 복사 합니다.

``` powershell
&gt; copy kubeconfig.yaml .kube\config
```

이렇게 하면 Kubectl을 사용 시 아래와 같이 --kuebeconfig 명령어 없이 사용 할 수 있습니다.

``` powershell
&gt; kubectl get node
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-32.png&quot; width=&quot;843&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1. 쿠버네티스 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/k8s-k8soverview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/k8s-k8soverview&lt;/a&gt;

2. 클러스터 이용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/k8s-k8suse-cluster&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/k8s-k8suse-cluster&lt;/a&gt;

3. kubectl 설치 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/k8s-k8sstart#Kubectl%EC%84%A4%EC%B9%98&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/k8s-k8sstart#Kubectl&lt;/a&gt;

4. Linux 환경에서 쿠버네티스 제어하기
	- &lt;a href=&quot;/containers/ncloud-containers-kubernetes-service-start-guide-linux.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/containers/ncloud-containers-kubernetes-service-start-guide-linux.html&lt;/a&gt;    
</description>
            <pubDate>Mon, 15 May 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/containers/ncloud-containers-kubernetes-service-start-guide-windows.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/containers/ncloud-containers-kubernetes-service-start-guide-windows.html</guid>
            
            <category>kubernetes</category>
            
            <category>vpc</category>
            
            
        </item>
        
        <item>
            <title>AWS CLI 버전 2를 이용한 Object Storage 접속 방법</title>
            <description>## 개요
Ncloud (네이버 클라우드) Object Storage는 AWS의 스토리지 서비스 S3와 호환이 되도록 설계되어 있습니다.  
그래서 Object Storage에 접속, 관리할 때 AWS의 CLI(Command Line Interface)를 사용할 수 있는데 그 중에서 AWS CLI 버전 2의 설치와 사용방법에 대해 정리해보겠습니다.

## AWS CLI 버전 2 설치 {#awscliinstall}

{% include note.html content=&quot;AWS CLI 버전 1에서는 설치와 실행에 Python과 PIP를 이용하는 방법이 주로 사용되었지만, AWS CLI 버전 2에서는 Python 임베디드 버전이 포함되어 있어 별도로 설치할 필요가 없기에 설치 파일도 ZIP 압축 파일 형태로 제공됩니다.&quot; %}

### 설치 파일 다운로드
AWS CLI 버전 2 설치 파일을 awscliv2.zip 이름으로 다운로드 합니다.

``` bash
~# curl &quot;https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip&quot; -o &quot;awscliv2.zip&quot;
```
{% include image.html file=&quot;storage/ncloud-storage-object-storage-aws-cli-guide-01.png&quot; width=&quot;840&quot; alt=&quot;AWS CLI를 설치하고 Ncloud Object Storage에 접속하는 방법&quot; caption=&quot;&quot; %}

### 압축 풀기
unzip으로 압축을 풀겠습니다.

``` bash
~# unzip awscliv2.zip
```
{% include image.html file=&quot;storage/ncloud-storage-object-storage-aws-cli-guide-02.png&quot; width=&quot;840&quot; alt=&quot;AWS CLI를 설치하고 Ncloud Object Storage에 접속하는 방법&quot; caption=&quot;&quot; %}

### 설치
아래 명령으로 쉽게 설치할 수 있습니다.

``` bash
~# ./aws/install
```
{% include image.html file=&quot;storage/ncloud-storage-object-storage-aws-cli-guide-03.png&quot; width=&quot;840&quot; alt=&quot;AWS CLI를 설치하고 Ncloud Object Storage에 접속하는 방법&quot; caption=&quot;&quot; %}

### 버전 확인
설치가 완료된 후 버전을 확인해보면 아래와 같이 AWS CLI 버전과 임베디드된 Python 버전도 확인할 수 있습니다.

``` bash
~# aws --version
```
{% include image.html file=&quot;storage/ncloud-storage-object-storage-aws-cli-guide-04.png&quot; width=&quot;840&quot; alt=&quot;AWS CLI를 설치하고 Ncloud Object Storage에 접속하는 방법&quot; caption=&quot;&quot; %}


## API 인증키 생성
다음으로 접속에 필요한 인증키를 Ncloud (네이버 클라우드) 포탈 - 마이페이지 - 계정관리 - 인증키 관리 - API 인증키 관리 메뉴에서 Access Key ID와 Secret Key를 가져오셔야 하며, 아직 만들어진 Key가 없다면 새로 만드셔야 합니다.

{% include image.html file=&quot;api/ncloud_api_auth_key_create.png&quot; width=&quot;770&quot; alt=&quot;Ncloud API 인증키 생성 방법&quot; caption=&quot;&quot; %}

## AWS CLI 환경 설정
이제 AWS CLI로 접속하기 위해 환경설정을 해야 합니다.  
위 단계에서 확인한 Access Key ID와 Secret Key를 아래 화면에서 입력하고 나머지 2가지 항목은 입력하지 않으셔도 됩니다.
``` bash
~# aws configure

AWS Access Key ID [None]: 3frEtFjfkdsj89243nkfv89s
AWS Secret Access Key [None]: 0kr23-0vsijr2390fw:L?K23-0vcdsjr2390fchnr123[]vl/fwsh
Default region name [None]: [Enter]
Default output format [None]: [Enter]
```

{% include image.html file=&quot;storage/ncloud-storage-object-storage-aws-cli-guide-05.png&quot; width=&quot;840&quot; alt=&quot;AWS CLI를 설치하고 Ncloud Object Storage에 접속하는 방법&quot; caption=&quot;&quot; %}

## Object Storage 접속
이제 Object Storage로 접속해보겠습니다. 얼핏 명령어만 보면 AWS에 접속하는 것처럼 보입니다. 그래서 네이버 클라우드로 접속하기 위한 --endpoint-url= 로 시작하는 옵션이 반드시 필요합니다.
``` bash
# Object Storage에 존재하는 전체 버킷 리스트를 조회하는 명령어입니다.
~# aws --endpoint-url=https://kr.object.ncloudstorage.com s3 ls

# s3 ls 명령으로 Object Storage에 존재하는 aws-cli-test 버킷에 있는 오브젝트 리스트를 조회하는 예시입니다.
~# aws --endpoint-url=https://kr.object.ncloudstorage.com s3 ls s3://aws-cli-test

# 로컬에 백업된 데이터를 Object Storage에 백업-동기화하는 명령어 예시입니다.
~# aws --endpoint-url=https://kr.object.ncloudstorage.com s3 sync /data_backup/ s3://data-back-up/
```
{% include image.html file=&quot;storage/ncloud-storage-object-storage-aws-cli-guide-06.png&quot; width=&quot;840&quot; alt=&quot;AWS CLI를 설치하고 Ncloud Object Storage에 접속하는 방법&quot; caption=&quot;&quot; %}

## AWS CLI 업데이트
설치된 AWS CLI를 최신 버전으로 업데이트 하려면 아래 명령어를 사용하면 됩니다. 최신 버전이 설치된 상태에서는 아래 스샷처럼 이미 최신 버전과 동일한 버전이 설치되어 있다는 메시지가 나타납니다.

``` bash
~# ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
```

{% include image.html file=&quot;storage/ncloud-storage-object-storage-aws-cli-guide-07.png&quot; width=&quot;840&quot; alt=&quot;AWS CLI를 설치하고 Ncloud Object Storage에 접속하는 방법&quot; caption=&quot;&quot; %}

## AWS CLI 삭제
설치된 AWS CLI를 삭제하려면 아래의 단계대로 진행하시면 됩니다.

### symlink 삭제
``` bash
~# rm /usr/local/bin/aws
~# rm /usr/local/bin/aws_completer
```

### 설치 디렉토리 삭제
``` bash
~# rm -rf /usr/local/aws-cli
```

### 설정 정보 삭제 (선택 사항)
AWS CLI 환경 설정 정보는 서버 내의 모든 AWS SDK 및 AWS CLI에서 공유되므로 더 이상 사용하지 않는다면 삭제하시면 됩니다.

``` bash
~# rm -rf ~/.aws/
```

{% include image.html file=&quot;storage/ncloud-storage-object-storage-aws-cli-guide-08.png&quot; width=&quot;840&quot; alt=&quot;AWS CLI를 설치하고 Ncloud Object Storage에 접속하는 방법&quot; caption=&quot;&quot; %}

## 참고 URL

1.  AWS CLI 버전 2 가이드
	- &lt;a href=&quot;https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-chap-welcome.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-chap-welcome.html&lt;/a&gt;

2.  Ncloud Object Storage CLI 가이드
	- &lt;a href=&quot;https://cli.ncloud-docs.com/docs/guide-objectstorage&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://cli.ncloud-docs.com/docs/guide-objectstorage&lt;/a&gt;	
</description>
            <pubDate>Tue, 09 May 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/storage/ncloud_storage_object_storage_aws_cli_connect.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/storage/ncloud_storage_object_storage_aws_cli_connect.html</guid>
            
            <category>aws</category>
            
            <category>s3</category>
            
            <category>object_storage</category>
            
            <category>cli</category>
            
            <category>api</category>
            
            <category>auth</category>
            
            
        </item>
        
        <item>
            <title>Linux 스토리지 추가 생성 기본 가이드</title>
            <description>## 개요
네이버 클라우드에서 서버 생성 후에 스토리지를 추가 생성하는 경우가 있는데 이때 사용되는 스토리지는 Block Storage라고 해서 AWS의 EBS(Elastic Block Store)와 유사합니다.

## 스토리지 추가 제약 사항

- 부팅 스토리지가 SSD인 경우, 추가 스토리지로 HDD, SSD 모두 추가할 수 있습니다.
- 부팅 스토리지가 HDD인 경우, HDD, SSD 모두 추가할 수 있으나 SSD 스토리지는 최신 서버에만 추가가 가능합니다. 서버 상세정보의 &apos;SSD 스토리지 추가 여부&apos;가 적용 가능인지 확인해야 합니다.
- `Micro 타입의 서버, Bare Metal 서버는 스토리지를 추가할 수 없습니다.`


## 추가 가능한 최대 사이즈와 개수
스토리지는 **최대 2,000GB**를 지원하며, 서버 1대당 **최대 16개**의 스토리지를 이용할 수 있습니다. (단, Local Disk 서버 타입 및 2017년 1월 23일 이전에 생성된 서버에 대해서는 1,000GB까지 지원됩니다.)


## 리눅스 OS 서버 이미지별 포맷 명령어
리눅스는 OS 즉, 네이버 클라우드에서 제공하는 서버 이미지별로 추가된 스토리지를 포맷하는 명령어가 다릅니다.

{% include callout_v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; CentOS 5.x: mkfs.ext3 /dev/xvdb1 &lt;br /&gt;
&amp;#8259; CentOS 6.x: mkfs.ext4 /dev/xvdb1 &lt;br /&gt;
&amp;#8259; CentOS 7.x: mkfs.xfs /dev/xvdb1 &lt;br /&gt;
&amp;#8259; Rocky Linux: mkfs.xfs /dev/xvdb1 &lt;br /&gt;
&amp;#8259; Ubuntu Server / Desktop: mkfs.ext4 /dev/xvdb1 &lt;br /&gt;
&quot; %}

## ext4 vs XFS 명령어 비교

&lt;div&gt;
&lt;table class=&quot;simple_table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;항목&lt;/th&gt;
      &lt;th&gt;ext4&lt;/th&gt;
      &lt;th&gt;XFS&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;    
    &lt;tr&gt;&lt;td&gt;포맷&lt;/td&gt;&lt;td&gt;mkfs.ext4&lt;/td&gt;&lt;td&gt;mkfs.xfs&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;마운트&lt;/td&gt;&lt;td&gt;mount&lt;/td&gt;&lt;td&gt;mount&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;리사이즈&lt;/td&gt;&lt;td&gt;resize2fs&lt;/td&gt;&lt;td&gt;xfs_growfs&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;복구&lt;/td&gt;&lt;td&gt;e2fsck&lt;/td&gt;&lt;td&gt;xfs_repair&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;라벨 변경&lt;/td&gt;&lt;td&gt;e2label&lt;/td&gt;&lt;td&gt;xfs_admin -L&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;디버깅&lt;/td&gt;&lt;td&gt;debugfs&lt;/td&gt;&lt;td&gt;xfs_db&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;할당량 설정&lt;/td&gt;&lt;td&gt;quota&lt;/td&gt;&lt;td&gt;quota&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;  
&lt;/div&gt;

{% include tip.html content=&quot;xfs_growfs 명령어는 파일 시스템의 크기를 줄일 수는 없고 늘릴 수만 있습니다.&quot; %}

## 참고 URL
1.  Ncloud 블록 스토리지 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/blockstorage-use-vpc&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/blockstorage-use-vpc&lt;/a&gt;</description>
            <pubDate>Wed, 03 May 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_server_storage_add_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_server_storage_add_guide.html</guid>
            
            <category>linux</category>
            
            <category>storage</category>
            
            
        </item>
        
        <item>
            <title>Mysql, MariaDB 환경설정 파일 my.cnf 위치</title>
            <description>## 개요
Ncloud (네이버 클라우드)에서 Mysql MariaDB 환경설정 파일인 my.cnf 파일이 CentOS, Ubuntu, Rocky Linux OS 별로 어떤 경로에 위치하고 있는지 정리해보겠습니다.

## CentOS
우선 CentOS 부터 살펴보겠습니다.

### MySQL
MySQL은 **my.cnf** 파일이 **/etc/** 바로 밑에 위치합니다.

``` bash
/etc/my.cnf
```

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-centos-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}


### MariaDB
MariaDB에서도 **my.cnf** 파일이 **/etc/** 바로 밑에 위치하기는 하지만, 실제로 **/etc/my.cnf** 파일을 열어보면 다음과 같이 **my.cnf.d** 디렉토리에 있는 파일을 include만 하게 되어 있습니다.  
즉, **my.cnf** 파일에 설정을 추가해도 되지만 가능하면 하위의 각각의 설정 파일에 추가하는 것이 좋습니다.

``` bash
/etc/my.cnf.d/server.cnf
```

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-centos-01.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-centos-02.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

- **/etc/my.cnf.d/server.cnf** 파일을 열어 보면 다음과 같이 구성 되어 있습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-centos-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

## Ubuntu 
Ubuntu에서는 **my.cnf** 파일이 **/etc/mysql** 밑에 위치합니다.

``` bash
/etc/mysql/my.cnf
```

### MySQL
Ubuntu 20.04, MySQL 8.0에서는 아래의 3가지 파일을 주로 확인하면 되겠습니다.

``` bash
/etc/mysql/my.cnf
/etc/mysql/mysql.conf.d/mysql.cnf
/etc/mysql/mysql.conf.d/mysqld.cnf
```

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-ubuntu-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

먼저 **/etc/mysql/my.cnf** 파일을 열어 보면 다음과 같이 **conf.d** 디렉토리와 **mysql.conf.d** 디렉토리에 있는 파일을 include 하도록 되어 있습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-ubuntu-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

**/etc/mysql/** 디렉토리의 파일과 서브 디렉토리 구조를 살펴보면 다음과 같습니다. 여기서 **mysql.conf.d** 디렉토리에 있는 **mysql.cnf** 파일과 **mysqld.cnf** 파일을 살펴보겠습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-ubuntu-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

- **/etc/mysql/mysql.conf.d/mysql.cnf**  
이 파일을 열어 보면 다음과 같이 [**The MySQL database client configuration file**]이라고 되어 있습니다.  
즉, **MySQL Client 관련 설정**은 이곳에 지정하면 되겠습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-ubuntu-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

- **/etc/mysql/mysql.conf.d/mysqld.cnf**  
이 파일을 열어 보면 다음과 같이 [**The MySQL database server configuration file**]이라고 되어 있습니다.  
즉, **MySQL Server 관련 설정**은 이곳에 지정하면 되겠습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-ubuntu-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

### MariaDB
Ubuntu 20.04, MariaDB 10.3에서는 아래의 4가지 파일을 주로 확인하면 되겠습니다.

``` bash
/etc/mysql/my.cnf
/etc/mysql/mariadb.cnf
/etc/mysql/mariadb.conf.d/50-client.cnf
/etc/mysql/mariadb.conf.d/50-server.cnf
```

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-ubuntu-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

그런데, **/etc/mysql/my.cnf** 파일의 정보를 확인해보면 결국 **/etc/mysql/mariadb.cnf** 파일의 심볼릭 링크라는 것을 알 수 있습니다. 그러므로 **/etc/mysql/mariadb.cnf** 파일을 살펴보겠습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-ubuntu-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

**/etc/mysql/mariadb.cnf** 파일을 열어 보면 다음과 같이 **conf.d** 디렉토리와 **mariadb.conf.d** 디렉토리에 있는 파일을 include 하도록 되어 있습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-ubuntu-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

**/etc/mysql/** 디렉토리의 파일과 서브 디렉토리 구조를 살펴보면 다음과 같습니다.  
여기서 **mariadb.conf.d** 디렉토리에 있는 **50-client.cnf** 파일과 **50-server.cnf** 파일을 살펴보겠습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-ubuntu-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

- **/etc/mysql/mariadb.conf.d/50-client.cnf**  
이 파일을 열어 보면 다음과 같이 [**This group is read by the client library**]이라고 되어 있습니다.  
즉, **MariaDB Client 관련 설정**은 이곳에 지정하면 되겠습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-ubuntu-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

- **/etc/mysql/mariadb.conf.d/50-server.cnf**  
이 파일을 열어 보면 다음과 같이 [**These groups are read by MariaDB server**]이라고 되어 있습니다.  
즉, **MariaDB Server 관련 설정**은 이곳에 지정하면 되겠습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-ubuntu-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

## Rocky Linux

### MySQL
Rocky Linux도 MySQL은 my.cnf 파일이 /etc/ 바로 밑에 위치합니다.

``` bash
/etc/my.cnf
```

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-rocky-linux-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}


### MariaDB
Rocky Linux에서는 **mariadb-server.cnf** 파일입니다.

``` bash
/etc/my.cnf.d/mariadb-server.cnf
```

MariaDB에서도 **my.cnf** 파일이 **/etc/** 바로 밑에 위치하기는 하지만, 실제로 **/etc/my.cnf** 파일을 열어보면 다음과 같이 **my.cnf.d** 디렉토리에 있는 파일을 include만 하게 되어 있습니다.  
즉, **my.cnf** 파일에 설정을 추가해도 되지만 가능하면 하위의 각각의 설정 파일에 추가하는 것이 좋습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-rocky-linux-01.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-rocky-linux-02.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

- **/etc/my.cnf.d/mariadb-server.cnf** 파일을 열어 보면 다음과 같이 구성 되어 있습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-rocky-linux-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

## 참고 URL
1. Ncloud MySQL 서버 이미지 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/database-database-1-1&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/database-database-1-1&lt;/a&gt;

2. Ncloud MariaDB 서버 이미지 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/database-database-7-1&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/database-database-7-1&lt;/a&gt; 
</description>
            <pubDate>Fri, 28 Apr 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud_database_mysql_mariadb_config_my_cnf.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud_database_mysql_mariadb_config_my_cnf.html</guid>
            
            <category>database</category>
            
            <category>mysql</category>
            
            <category>mariadb</category>
            
            <category>centos</category>
            
            <category>ubuntu</category>
            
            <category>rocky_linux</category>
            
            
        </item>
        
        <item>
            <title>VPC 환경에서 SSL VPN 설정하고 접속하는 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드) 외부에서 내부에 구성된 네트워크로 암호화된 보안 접속 통신을 제공하는 서비스인 SSL VPN을 VPC 환경에서 설정하고, 서버에 접속하는 방법에 대해 정리해보겠습니다.

## SSL VPN이란?
- VPN은 가상 사설망(Virtual Private Network)의 약자로, 외부에서 접근할 수 없는 사설망에 내 PC나 네트워크를 연결시키는 방법을 말합니다.
- 사설망과의 연결은 가상 터널을 통해 이루어지며, 이 가상 터널을 SSL 암호화로 보호하는 것이 SSL VPN입니다.
- 가상 터널을 통해 사설망과 연결된 사용자 PC는 사설망의 라우팅 및 ACL 정책에 따라 내부 서버에 접근할 수 있습니다.

## SSL VPN 서비스 위치
Ncloud 콘솔에서 SSL VPN의 위치는 [**Services**] - [**Security**] - [**SSL VPN**]에 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## SSL VPN 생성
[SSL VPN 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

우선 접근할 서버가 속해 있는 VPC를 선택하고, 등록 가능한 접속 ID 개수에 따른 상품을 선택합니다.  
VPC 환경에서는 3, 5, 10, 20, 30, 50, 100, 200, 300, 400, 500개 상품 중에서 선택 가능합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-03.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

VPC 환경의 SSL VPN은 콘솔에서 자동으로 생성하는 것이 아니라 `생성 요청을 하면 Ncloud 담당자가 직접 생성하고 결과를 안내 받는 구조`로 되어 있습니다. 
생성 완료까지 걸리는 시간은 **약 10~20분 이내** 이며, 생성이 완료되면 SSL VPN 상태가 [운영중]으로 변경되고, 안내 메일이 도착합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-04.png&quot; width=&quot;485&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## SSL VPN 생성 완료 {#connection-url-check}
SSL VPN 생성이 완료되면 아래와 같이 [**IP POOL**]과 [**접속 URL**] 정보를 확인할 수 있는데 SSL VPN Agent 접속 시에 중요한 정보이니 잘 확인해야 합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-05.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 사용자 설정
SSL VPN에 접속할 사용자 정보를 설정합니다.  리스트에서 SSL VPN을 선택하고 [사용자 설정] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-06.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자 정보는 ID, Passowrd, Email, SMS 등을 입력하고 [추가] 버튼을 클릭합니다.  
VPC 환경은 이차인증이 필수이므로  SMS와 Email 정보를 함께 입력합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-07.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자가 추가되면 SSL VPN 정보에 사용자 계정 수(등록된 ID 수)에 숫자가 표시되는 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## Route Table 설정
네트워크 설정에서는 우선 접속할 서버가 속해 있는 VPC Subnet의 Route Table에 SSL VPN으로 접근할 수 있게 SSL VPN의 [**IP POOL**]을 등록해야 합니다.  

- **접속할 서버 정보 확인**  
아래와 같이 접속할 서버의 정보에서 VPC와 Subnet을 확인합니다. 여기서는 Private Subnet에 생성한 서버에 접속할 예정입니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[**VPC**] - [**Route Table**]에서 해당 VPC의 Private Subnet을 선택하고 [**Routes 설정**] 버튼을 클릭합니다.  
(Public Subnet에 생성한 서버에 접근해야 할 경우에는 public-table을 선택하고 설정하시면 됩니다.)

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-10.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[**Destination**]에 생성된 SSL VPN 정보에서 확인한 [**IP POOL**] 정보를 등록하고, [**Target Type**]은 SSLVPN을 선택, [**Target Name**]은 위에서 생성한 SSL VPN 이름을 선택하고 [생성] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-11.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## ACG 설정
다음으로 서버에 적용된 ACG에 SSL VPN의 [**IP POOL**]을 등록해야 합니다.  
우선 SSL VPN을 통해서 접속할 서버를 선택하고 [**ACG 수정**] 버튼을 클릭해서 적용된 ACG를 확인합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-12.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

ACG 수정 화면에서 현재 적용된 ACG 이름을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[**Server**] - [**ACG**]에서 위에서 확인한 ACG를 선택하고 [ACG 설정]을 클릭합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-14.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

ACG 규칙 설정 화면에서 위에서 확인했던 [**IP POOL**]을 접근 소스에 입력하고, 필요한 포트들을 등록합니다. 
기본이 되는 프로토콜과 포트는 리눅스 서버 접속용 TCP 22, 윈도우 서버 접속용 TCP 3389, Ping 확인용 ICMP 등입니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-15.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 다운로드
SSL VPN 접속을 위한 Agent를 다운로드 합니다.  

- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/sslvpn-download&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;SSL VPN Agent 다운로드&lt;/a&gt;

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-16.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## Agent 접속
Agent 프로그램, BIG-IP Edge Client를 설치하고 실행하면 다음과 같은 화면을 볼 수 있습니다. 
서버 선택 창에 위에서 생성했던 SSL VPN 정보에서 확인했던 [**접속 URL**] 주소를 입력하고, [다음] 버튼을 클릭합니다.

{% include tip.html content=&quot;
[접속 URL 확인하는 방법 &lt;i class=&apos;fa-solid fa-arrow-up-from-bracket&apos;&gt;&lt;/i&gt;](#connection-url-check)&lt;br /&gt;
&quot; %}

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-17.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

주소 변경 후에 [연결] 버튼을 클릭하면 로그인 화면이 나타나는데 위에서 설정했던 VPN 접속용 아이디와 Password를 입력하고 [로그온] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_20.png&quot; width=&quot;650&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

그리고 도착한 OTP 인증 번호를 입력합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-18.png&quot; width=&quot;710&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

SSL VPN에 제대로 연결이 되었는지 확인하기 위해서 cmd 창을 띄워서 ipconfig 명령어를 입력하면 아래 화면처럼 SSL VPN 주소로 설정된 어탭터에  [**IP POOL**]에 해당하는 IP가 할당된 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-19.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 서버 접속
이제 SSL VPN이 연결된 상태에서 서버에 접속해보겠습니다.  
PuTTY 를 실행하고 접속할 서버의 IP를 입력합니다.  
이때 서버 IP는 콘솔에 있는 서버 정보에서 **비공인 IP**에 표시되는 IP를 입력하면 됩니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-20.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 기타 설정
SSL VPN Agent에는 몇가지 추가 기능이 있는데 아래에서 확인해보겠습니다.

### 트래픽 그래프
Agent 창에서 [그래프 보기] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-21.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


여기서는 SSL VPN이 연결된 상태의 트래픽을 그래프로 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-22.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


다음으로 [상세 보기] 버튼을 클릭하면 접속 세부 정보, 로그, 통계, 알림, 라우팅 테이블, IP설정 등의 정보를 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-23.png&quot; width=&quot;777&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}



## 설정 변경
처음에 설정한 접속 가능 ID 개수를 변경하고 싶을 경우 SSL VPN을 선택하고 [SSL VPN 설정 변경] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-24.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

### ID 개수 변경
3, 5, 10, 20, 30, 50, 100, 200, 300, 400, 500개 상품 중에서 원하는 개수로 변경할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-25.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

### 인증 로그 수집
Ncloud SSN VPN은 이용자가 SSN VPN에 접속 인증한 로그를 수집할 수 있습니다. [**설정**] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-26.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

인증 로그 수집을 활성화 하면 [**Cloud Log Analytics**]에 로그를 전달하여 저장합니다. 해당 상품을 미사용중이면 Cloud Log Analytics 상품 이용 신청을 한 후에 사용하시면 됩니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-27.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

- Cloud Log Analytics에서 인증 로그 확인
{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-30.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 주의사항
{% include warning.html title=&quot;접속 오류&quot; content=&quot;SSL VPN이 연결된 상태에서 새로운 서버를 생성하고 접속을 시도하면 아래와 같은 오류 메시지가 뜨면서 서버 접속이 되지 않습니다.  이때는 SSL VPN의 연결을 끊었다가 다시 연결해야 새로 생성한 서버에 접속할 수 있습니다.&quot; %}

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_23.png&quot; width=&quot;700&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 삭제
삭제를 원할 경우 SSL VPN을 선택하고 상단의 [삭제] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-28.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

하지만, 바로 삭제가 되지 않고 다음과 같이 &quot;Route Table에서 Target으로 지정된 Route 정보를 모두 삭제해야 삭제가 가능합니다&quot;라는 메시지가 뜹니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_30.png&quot; width=&quot;500&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[VPC] - [Route Table]에서 해당 VPC의 Private Subnet을 선택하고 [Routes 설정] 버튼을 클릭해서 등록된 설정을 확인하고 [X] 버튼을 클릭해서 설정을 삭제합니다. 
Route Table 정보를 삭제한 후에 SSL VPN을 삭제하시면 됩니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-29.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## 참고 URL
1. Ncloud SSL VPN 개요
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/sslvpn-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/sslvpn-overview&lt;/a&gt;

2. Ncloud SSL VPN 사용 가이드 - VPC
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/sslvpn-start-vpc&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/sslvpn-start-vpc&lt;/a&gt;
</description>
            <pubDate>Thu, 27 Apr 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/security/ncloud_security_ssl_vpn_vpc_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/security/ncloud_security_ssl_vpn_vpc_guide.html</guid>
            
            <category>vpc</category>
            
            <category>ssl</category>
            
            <category>vpn</category>
            
            
        </item>
        
        <item>
            <title>Rocky Linux에서 NginX 설치, 설정하는 방법</title>
            <description>## 개요
Ncloud (네이버 클라우드) Rocky Linux (록키 리눅스) 서버에 NginX 최신 버전을 Package로 설치하고 기본 설정을 하는 방법에 대한 내용을 정리해보겠습니다.  


## 서버 환경

{% include callout_v2.html type=&quot;secondary&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; OS: Rocky Linux 8.6 &lt;br /&gt;
&amp;#8259; NginX: NginX 1.23.1 &lt;br /&gt; 
&amp;#8259; 테스트 사이트: nginx-test.com
&quot; %}

## 서버 준비
Ncloud 콘솔에서 Rocky Linux 8.6 서버를 아래와 같이 준비했습니다.

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 설치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## 패키지 업데이트
우선 패키지 업데이트를 해보겠습니다.

``` bash
~# dnf -y update
```
{% include note.html title=&quot;dnf&quot; content=&quot;Dandified YUM의 약자인 dnf는 기존의 yum 패키지 관리자가 갖고 있던 여러 단점들을 수정, 업그레이드해서 
Fedora 18 이후 버전에서 사용되고 있으며, Rocky Linux도 마찬가지로 dnf를 기본 패키지 관리자로 사용하고 있습니다. 물론 호환성을 위해서 yum 명령어도 사용할 수 있습니다.
&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## EPEL 저장소 패키지 설치
다음으로 epel-release 저장소 패키지를 설치하겠습니다.

``` bash
~# dnf -y install epel-release
```

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## NginX 버전 선택
설치할 NginX 버전 버전을 선택합니다.

### NginX 버전 리스트
우선, Ncloud Rocky Linux 8.6에서 지원하는 NginX 버전을 확인합니다.  
리스트를 살펴보면 1.14가 기본 버전인 것을 알 수 있습니다.

``` bash
~# dnf module list nginx
```

- nginx 1.14 (default)
- nginx 1.16
- nginx 1.18
- nginx 1.20
- nginx mainline

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### 버전 활성화 정보 초기화
다음으로 위에서 확인했던 nginx 버전 활성화 정보를 초기화 합니다. 현재 활성화 된 버전이 존재하느냐에 따라 나타나는 메시지가 다릅니다.

``` bash
~# dnf module reset nginx
```

- 활성화 된 버전이 없을 때
{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

- 활성화 된 버전이 있을 때
{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### mainline 버전 활성화
최신 버전인 mainline 버전을 활성화합니다.

``` bash
~# dnf module enable nginx:mainline
```

{% include callout_v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;NginX는 stable, mainline 두가지 버전이 있습니다. 
NginX의 공식 설명에 따르면 버그 수정이나 보안 패치 등은 항상 mainline 버전에 먼저 적용되기 때문에 mainline을 사용하는 것을 추천한다고 합니다. &lt;br /&gt;
stable 버전을 사용하는 주된 경우는 **third-party 모듈**을 사용하고 있어서 신규 버전에서 **호환성 문제**가 발생할 가능성이 걱정될 때라고 합니다.&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}


## NginX 설치
NginX를 설치합니다. 설치된 버전은 다음과 같습니다.

``` bash
~# dnf -y install nginx
~# nginx -v
```
- NginX: 1.23.1

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## 디렉토리 설정
다음으로 홈으로 사용할 디렉토리를 생성하고, 해당 디렉토리의 소유권을 설정하겠습니다.  
그리고, NginX가 정상 작동하는지 확인해보기 위해 설치시에 포함된 index.html을 포함한 파일들을 홈 디렉토리로 복사합니다.

``` bash
# 테스트 사이트 홈 디렉토리 생성
~# mkdir -p /ncloud/data/www/nginx-test/

# 해당 디렉토리에 nginx에 권한 부여
~# chown -R nginx:nginx /ncloud/data/www/nginx-test

# nginx 샘플 페이지를 사이트 디렉토리로 복사
~# cp /usr/share/nginx/html/*.* /ncloud/data/www/nginx-test/

# 복사된 파일들 확인
~# ls -al /ncloud/data/www/nginx-test/
```
{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}



## 환경 설정

### 설정 파일 위치
NginX 환경 설정 파일의 위치는 **/etc/nginx/** 디렉토리입니다. **tree** 명령으로 해당 디렉토리에서 **conf**와 관련된 파일 리스트와 디렉토리 구조를 확인하면 다음과 같습니다.

``` bash
~# tree -P *conf* /etc/nginx/
```

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-16.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### 기본 설정 파일
위에서 확인할 수 있는 파일들 중에서 기본 환경 설정 파일은 **/etc/nginx/nginx.conf** 입니다.  
**nginx.conf** 파일을 열어보면 아래와 같이 **server {...}**로 시작되는 사이트 설정에 관련된 부분도 있지만,  
**include /etc/nginx/conf.d/*.conf** 와 같이 **conf.d** 디렉토리에 있는 설정 파일을 모두 불러오도록 되어 있습니다.  

물론, 사이트 설정을 **nginx.conf** 파일에 직접 설정해도 되지만, 여러 개의 사이트를 설정해야 하는 경우도 생각해서 **conf.d 디렉토리**에 사이트 이름별로 환경 설정 파일을 별도로 만들어서 진행하도록 하겠습니다. 

``` bash
~# vi /etc/nginx/nginx.conf
```

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-09.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### 기본 설정 주석 처리
**server {...}** 부분을 모두 주석 처리합니다.

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### 환경 설정 파일 생성
**nginx-test.com** 이라는 도메인의 사이트 설정을 **nginx-test.conf** 설정 파일을 생성해서 저장합니다.

``` bash
~# vi /etc/nginx/conf.d/nginx-test.conf
```

``` nginx
  server {
    listen    80;
    listen    [::]:80;

    # 사이트 도메인 설정
    server_name    nginx-test.com www.nginx-test.com;

    # 홈 디렉토리, 기본 문서 설정
    root      /ncloud/data/www/nginx-test;
    index     index.html index.htm;

    # 404 error 페이지 설정
    error_page 404 /404.html;
      location = /404.html {
    }

    # 50x error 페이지 설정
    error_page 500 502 503 504 /50x.html;
      location = /50x.html {
      root    /ncloud/data/www/nginx-test;
    }

    # .htaccess 파일 접근 금지 설정
    location ~ /\.ht {
      deny    all;
    }
}
```

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}


## NginX 실행
설정을 모두 마쳤으면 NginX를 시작하고 상태를 확인합니다.

``` bash
~# systemctl enable nginx
~# systemctl start nginx
~# systemctl status nginx
```
{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## hosts 파일 수정
지금과 같이 테스트용으로 임의 설정한 도메인(**nginx-test.com**)으로 접속하게 될 경우에는 hosts 파일을 수정해야 합니다.  
`실제 도메인을 사용할 경우에는 아래 과정이 필요 없기에` [다음 단계로 바로 이동&lt;i class=&quot;fa-solid fa-turn-down&quot;&gt;&lt;/i&gt;](#https-access-test)하시면 됩니다. 

윈도우 10에서 hosts 파일은 C:\Windows\System32\drivers\etc 에 존재하는데 직접 수정할 수가 없으므로 다음과 같은 단계를 거쳐야 합니다.

1. C:\Windows\System32\drivers\etc\hosts 파일을 임의의 작업 폴더 (예: D:\Work)로 복사합니다.
2. 복사한 hosts 파일을 수정해서 123.456.789.123 nginx-test.com 처럼 접속할 IP 주소와 도메인을 추가합니다.
3. 수정한 파일을 C:\Windows\System32\drivers\etc 위치로 덮어쓰기 합니다.
4. 덮어쓰기 할 때 관리자 권한이 필요하다는 안내 메시지가 나타나면 [계속] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-14.png&quot; width=&quot;745&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-ssl-setting-guide-centos-05.png&quot; width=&quot;710&quot; alt=&quot;Ncloud CentOS 서버에 NginX SSL 인증서를 설정하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-ssl-setting-guide-centos-06.png&quot; width=&quot;710&quot; alt=&quot;Ncloud CentOS 서버에 NginX SSL 인증서를 설정하는 방법&quot; caption=&quot;&quot; %}


## 사이트 접속 {#https-access-test}
NginX가 정상 작동하면 아래와 같이 서버 접속 화면을 확인할 수 있습니다.

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1.  Rocky Linux NginX 설치 기본 가이드
	- &lt;a href=&quot;https://docs.rockylinux.org/guides/web/nginx-mainline/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.rockylinux.org/guides/web/nginx-mainline/&lt;/a&gt;

2.  Rocky Linux NginX Multi Site 설치 가이드
	- &lt;a href=&quot;https://docs.rockylinux.org/guides/web/nginx-multisite/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.rockylinux.org/guides/web/nginx-multisite/&lt;/a&gt;</description>
            <pubDate>Thu, 27 Apr 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud-compute-lemp-nginx-install-setting-rocky-linux-guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud-compute-lemp-nginx-install-setting-rocky-linux-guide.html</guid>
            
            <category>rocky_linux</category>
            
            <category>lemp</category>
            
            <category>nginx</category>
            
            <category>install</category>
            
            
        </item>
        
        <item>
            <title>Classic 환경에서 SSL VPN 설정하고 접속하는 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드) 외부에서 내부에 구성된 네트워크로 암호화된 보안 접속 통신을 제공하는 서비스인 SSL VPN을 Classic 환경에서 설정하고, 서버에 접속하는 방법에 대해 정리해보겠습니다.

## SSL VPN이란?
- VPN은 가상 사설망(Virtual Private Network)의 약자로, 외부에서 접근할 수 없는 사설망에 내 PC나 네트워크를 연결시키는 방법을 말합니다.
- 사설망과의 연결은 가상 터널을 통해 이루어지며, 이 가상 터널을 SSL 암호화로 보호하는 것이 SSL VPN입니다.
- 가상 터널을 통해 사설망과 연결된 사용자 PC는 사설망의 라우팅 및 ACL 정책에 따라 내부 서버에 접근할 수 있습니다.


## SSL VPN 생성
[SSL VPN 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_01.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

우선 등록 가능한 접속 ID 개수에 따른 상품을 선택합니다. Classic 환경에서는 3개, 5개, 10개 상품만 선택 가능합니다. 
다음으로 인증 방식은 ID/PW 만으로 접속하는 일차인증과 OTP까지 사용하는 이차 인증 중에서 원하는 방식을 선택합니다. 
그리고 이차인증을 선택했을 경우에는 SMS와 Email 어떤 것을 이용할 것인지도 선택하게 됩니다.

{% include callout_v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; 인증방식과 OTP 전송 방식은 SSL VPN 생성 시에 한번 선택하면 변경할 수 없으니 주의해야 합니다. &lt;br /&gt;
&amp;#8259; 만약 변경 하고 싶을 경우에는 SSL VPN을 새로 생성해야 합니다. &lt;br /&gt;
&amp;#8259; Classic 환경에서는 이차인증을 선택하면 별도의 이용요금이 부과됩니다.
&quot; %}


{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_02.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

다음으로 개인정보 수집 및 이용에 동의해야 합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_03.png&quot; width=&quot;700&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

SSL VPN이 생성되면 다음과 같이 리스트에 서 확인 가능하며 여기서 [**SSL VPN IP POOL**]은 뒤쪽에서 네트워크 접근 제한을 설정할 때 필요한 중요한 정보입니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_04.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 사용자 설정
SSL VPN에 접속할 사용자 정보를 설정합니다.  리스트에서 SSL VPN을 선택하고 [사용자 설정] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_05.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자 정보는 ID, Passowrd, Email, SMS 등을 입력하고 [추가] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_06.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자가 추가되면 SSL VPN 정보에 사용자 계정 수(등록된 ID 수)에 숫자가 표시되는 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_07.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## ACG 설정
SSL VPN을 사용하려면 서버에 적용된 ACG에 [**SSL VPN IP POOL**]을 등록해야 합니다.  
우선 SSL VPN을 통해서 접속할 서버를 선택하고 적용된 ACG를 확인합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_08.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[Server] - [ACG]에서 위에서 확인한 ACG를 선택하고 [ACG 설정]을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_09.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

ACG 규칙 설정 화면에서 위에서 확인했던 [**SSL VPN IP POOL**]을 접근 소스에 입력하고, 필요한 포트들을 등록합니다. 
기본이 되는 프로토콜과 포트는 리눅스 서버 접속용 TCP 22, 윈도우 서버 접속용 TCP 3389, Ping 확인용 ICMP 등입니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_10.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 다운로드
SSL VPN 접속을 위한 Agent를 다운로드 합니다.  

- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/security-5-1-windowsdownload&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;윈도우 용 다운로드&lt;/a&gt;
- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/security-5-1-macdownload&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;맥 용 다운로드&lt;/a&gt;

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_11.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## Agent 접속
Agent 프로그램, BIG-IP Edge Client를 설치하고 실행하면 다음과 같은 화면을 볼 수 있습니다.  
Agent에는 Classic 환경 SSL VPN 서버(Ncloud-kr-01)가 기본으로 설정되어 있는데, 혹시 빠져 있다면 [서버 변경] 버튼을 클릭해서 **https://sslvpn-kr-01.ncloud.com**을 입력하고 연결 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_12.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

위에서 설정했던 VPN 접속용 아이디와 Password를 입력하고 [로그온] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_13.png&quot; width=&quot;650&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

OTP 접속도 설정했다면 도착한 인증 번호를 입력합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_14.png&quot; width=&quot;650&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

SSL VPN에 제대로 연결이 되었는지 확인하기 위해서 cmd 창을 띄워서 ipconfig 명령어를 입력하면 아래 화면처럼 SSL VPN 주소로 설정된 어탭터에  [**SSL VPN IP POOL**]에 해당하는 IP가 할당된 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_15.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 서버 접속
이제 SSL VPN이 연결된 상태에서 서버에 접속해보겠습니다.  
PuTTY 를 실행하고 접속할 서버의 IP를 입력합니다.  
이때 서버 IP는 콘솔에 있는 서버 정보에서 **비공인 IP**에 표시되는 IP를 입력하면 됩니다.

{% include important.html title=&quot;IP 입력&quot; content=&quot;이때 혹시나 포트 포워딩이나 공인 IP를 설정하고 그 IP를 입력하는 일이 없도록 주의해야 합니다.&quot; %}


{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_16.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 기타 설정
SSL VPN Agent에는 몇가지 추가 기능이 있는데 아래에서 확인해보겠습니다.

### 트래픽 그래프
Agent 창에서 [그래프 보기] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_17.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

여기서는 SSL VPN이 연결된 상태의 트래픽을 그래프로 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_18.png&quot; width=&quot;560&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

다음으로 [상세 보기] 버튼을 클릭하면 접속 세부 정보, 로그, 통계, 알림, 라우팅 테이블, IP설정 등의 정보를 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_19.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 스펙 변경
처음에 설정한 접속 가능 ID 개수를 변경하고 싶을 경우 SSL VPN을 선택하고 [스펙 변경] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_20.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

3개, 5개, 10개 상품 중에서 원하는 개수로 변경할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_21.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 주의사항
{% include warning.html title=&quot;접속 오류&quot; content=&quot;SSL VPN이 연결된 상태에서 새로운 서버를 생성하고 접속을 시도하면 아래와 같은 오류 메시지가 뜨면서 서버 접속이 되지 않습니다.  이때는 SSL VPN의 연결을 끊었다가 다시 연결해야 새로 생성한 서버에 접속할 수 있습니다.&quot; %}

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_23.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 삭제
삭제를 원할 경우 SSL VPN을 선택하고 상단의 [삭제] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_22.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## 참고 URL
1. Ncloud SSL VPN 개요
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/sslvpn-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/sslvpn-overview&lt;/a&gt;

2. Ncloud SSL VPN 사용 가이드 - Classic
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/sslvpn-start-classic&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/sslvpn-start-classic&lt;/a&gt;
</description>
            <pubDate>Tue, 25 Apr 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/security/ncloud_security_ssl_vpn_classic_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/security/ncloud_security_ssl_vpn_classic_guide.html</guid>
            
            <category>classic</category>
            
            <category>ssl</category>
            
            <category>vpn</category>
            
            
        </item>
        
    </channel>
</rss>
