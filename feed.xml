<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>3RDEYESYSTEM Technical Documentations</title>
        <description>써드아이시스템(3rdeyesys) 기술문서 사이트입니다 - Ncloud 프리미엄 파트너</description>
        <link>https://docs.3rdeyesys.com/</link>
        <atom:link href="https://docs.3rdeyesys.com/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Mon, 14 Aug 2023 17:33:04 +0900</pubDate>
        <lastBuildDate>Mon, 14 Aug 2023 17:33:04 +0900</lastBuildDate>
        <generator>Jekyll v4.2.2</generator>
        
        
        <item>
            <title>Ncloud API Key 접근 제한 설정하는 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드)를 이용하다보면 여러 가지 정보를 조회하거나 서버를 생성하는 등의 작업을 위해 API를 활용하게 되는 경우가 많습니다. 그런데 이때 사용하는 **API Key를 접근 제한 없이 사용하게 되면 외부에 유출되거나 했을 때 심각한 보안 문제를 일으키게 되므로** 사전에 API Key에 대한 권한을 설정하거나 접근 제한을 설정해서 사용하는 것이 권장됩니다.  

여기서는 API Key를 최소 권한으로 생성하고, 접근 경로들 제한 하는 등의 방법들을 정리해보겠습니다.

## 서브 계정 생성
API Key 보안과 관련해서 가장 중요한 원칙은 메인 계정이 아닌 최소 권한을 가진 서브 계정(Sub Account)에서 API Key를 생성하는 것입니다.  

{% include warning.html title=&quot;&quot; content=&quot;
메인 계정은 최대 권한을 가지기 때문에 메인 계정으로 생성한 API도 메인 계정과 동일한 최대 권한을 가지게 됩니다. 그러므로 메인 계정으로 API Key를 생성하게 되면 이 Key가 유출되었을 때 심각한 문제가 생기기 때문에 반드시 서브 계정에서 API Key를 생성해야 합니다.
&quot; %}

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
서브 계정(Sub Account)을 생성하는 방법은 아래 문서를 참고하시기 바랍니다.&lt;br /&gt;&lt;br /&gt;
&amp;#8259; &lt;a href=&apos;/management/ncloud_management_sub_account_guide.html&apos; target=&apos;_blank&apos;&gt;Ncloud 서브 계정 (Sub Account) 생성 가이드&lt;/a&gt;
&quot; %}

&lt;br /&gt;
- 테스트를 위해 아래와 같이 서브 계정을 준비하고, 계정을 클릭해서 서브 계정 세부 정보 화면으로 이동합니다.
{% include image.html file=&quot;management/ncloud-management-sub-account-07.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## 계정 권한 설정
서브 계정의 권한은 최소로 설정해야 합니다.  
예를 들어 Object Storage만 접근하는지, VPC Server 관련된 기능만 사용할 것인지, VPC Server 관련된 기능 중에서도 조회 기능만 사용할 것인지, Server 생성 등을 포함한 모든 기능을 사용할 것인지 등의 사용에 필요한 권한을 모두 정리해서 최소한의 권한으로 설정하는 것이 안전합니다.  

우선, 서브 계정 세부 정보 화면에서 아래쪽에 있는 [**정책**] 탭에 있는 [**개별 권한 추가**] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-08.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

정책 추가 화면에서는 네이버 클라우드에서 기본으로 제공하는 [관리형 정책]과 사용자가 직접 정의하는 [사용자 정의 정책]이 있습니다.  
우선 [관리형 정책]에서 필요한 정책을 선택하고 [추가] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-24.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- 정책이 워낙 많기 때문에 가능하면 위쪽의 검색 기능을 이용해서 정책을 찾는 것을 추천합니다.  
여기서는 테스트를 위해 Function으로 검색해서 [NCP_VPC_CLOUD_FUNCTIONS_MANAGER (VPC 기반 Cloud Functions 서비스 내 모든 기능을 이용할 수 있는 권한)]을 선택했습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-api-gateway-access-control-guide-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) Sub Account(서브 계정)를 이용해 API Key 접근 제한 설정하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;management/ncloud-management-sub-account-api-gateway-access-control-guide-02.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) Sub Account(서브 계정)를 이용해 API Key 접근 제한 설정하는 방법&quot; caption=&quot;&quot; %}

## API Gateway 접근 권한 설정
우선, [서브 계정 세부 정보] 화면에서 [수정] 메뉴 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-api-gateway-access-control-guide-03.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) Sub Account(서브 계정)를 이용해 API Key 접근 제한 설정하는 방법&quot; caption=&quot;&quot; %}

- [**서브 계정 정보**] 수정 화면에서 [**접근 권한**]에 있는 [**API Gateway 접근**]을 체크합니다. 그리고, 되도록이면 [**지정된 Source에서만 접근 가능**] 옵션을 선택하고, 지정된 IP 등을 추가하는 것을 권장합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-12.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- 위 화면에서 [**추가**] 버튼을 클릭하면 아래와 같이 [**접근 가능 Source 지정**] 팝업이 나타나는데, IP를 입력하거나 VPC Server를 선택하면 됩니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-13.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- [**VPC Server**]의 경우 IP 주소가 아닌 아래 화면처럼 VPC Server 리스트에서 직접 선택해야 접근 가능합니다.
{% include image.html file=&quot;management/ncloud-management-sub-account-api-gateway-access-control-guide-04.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) Sub Account(서브 계정)를 이용해 API Key 접근 제한 설정하는 방법&quot; caption=&quot;&quot; %}

### API Access Key 추가
위에서 [**API Gateway 접근**] 권한을 추가하면 계정 정보 화면에 아래와 같이 [**Access Key**] 탭이 나타나고 [**추가**] 버튼을 클릭하면 [**Access Key**]와 [**Secret Key**]를 생성할 수 있습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-14.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}


## 접근 제한 테스트
그러면 위에서 설정했던 접근 제한 설정이 제대로 작동하는지 테스트 해보겠습니다.

### IP 제한
위에서 설정한 [**접근 가능 Source 지정**] 항목에 IP를 설정하지 않거나, 지정되지 않은 IP에서 접근할 경우 아래의 예시와 같은 오류 메시지가 반환됩니다.

- 호출 API: getProductList

``` xml
&lt;Message&gt;
  &lt;error&gt;
      &lt;errorCode&gt;230&lt;/errorCode&gt;
      &lt;message&gt;Forbidden&lt;/message&gt;
      &lt;details&gt;IP not allowed for authentication.&lt;/details&gt;
  &lt;/error&gt;
&lt;/Message&gt;
```

### 계정 권한 제한
계정에 올바른 권한이 설정되지 않았을 경우 아래와 같은 오류 메시지가 반환됩니다.

- 호출 API: createServerInstances

``` xml
&lt;responseError&gt;
  &lt;returnCode&gt;802&lt;/returnCode&gt;
  &lt;returnMessage&gt;You do not have authority about action : [VPCServer:Change/createServerInstance].&lt;/returnMessage&gt;
&lt;/responseError&gt;
```

- 호출 API: getDemandCostList

``` xml
&lt;responseError&gt;
  &lt;returnCode&gt;2210&lt;/returnCode&gt;
  &lt;returnMessage&gt;You do not have authority about action : [NCP_FINANCE_MANAGER].&lt;/returnMessage&gt;
&lt;/responseError&gt;
```


## 주요 API 최소 권한

&lt;div&gt;
  &lt;table class=&quot;simple_table&quot;&gt;
    &lt;thead&gt;
      &lt;tr&gt;        
        &lt;th&gt;API&lt;/th&gt;
        &lt;th&gt;설명&lt;/th&gt;
        &lt;th&gt;Classic/VPC&lt;/th&gt;
        &lt;th&gt;최소 권한&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;      
        &lt;tr&gt;
          &lt;td&gt;getProductList&lt;/td&gt;
          &lt;td&gt;Ncloud 상품 리스트 조회&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;없음&lt;/td&gt;
        &lt;/tr&gt; 
         &lt;tr&gt;
          &lt;td&gt;getDemandCostList&lt;/td&gt;
          &lt;td&gt;청구 비용 리스트 조회&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;NCP_FINANCE_MANAGER&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td rowspan=&quot;2&quot;&gt;getServerInstanceList&lt;/td&gt;
          &lt;td rowspan=&quot;2&quot;&gt;서버 인스턴스(VM) 리스트 조회&lt;/td&gt;  
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_SERVER_VIEWER&lt;/td&gt;        
        &lt;/tr&gt;  
        &lt;tr&gt;          
          &lt;td&gt;Classic&lt;/td&gt;
          &lt;td&gt;NCP_SERVER_&lt;strong&gt;OBSERVER&lt;/strong&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td rowspan=&quot;2&quot;&gt;createServerInstances&lt;/td&gt;
          &lt;td rowspan=&quot;2&quot;&gt;서버 인스턴스(VM) 생성&lt;/td&gt;
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_SERVER_MANAGER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;Classic&lt;/td&gt;
          &lt;td&gt;NCP_SERVER_MANAGER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td rowspan=&quot;2&quot;&gt;Get Action List&lt;/td&gt;
          &lt;td rowspan=&quot;2&quot;&gt;CloudFunction 액션 리스트 조회&lt;/td&gt;
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_CLOUD_FUNCTIONS_VIEWER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;Classic&lt;/td&gt;
          &lt;td&gt;NCP_CLOUD_FUNCTIONS_&lt;strong&gt;MANAGER&lt;/strong&gt;&lt;/td&gt;
        &lt;/tr&gt;    
        &lt;tr&gt;
          &lt;td rowspan=&quot;2&quot;&gt;Post Action&lt;/td&gt;
          &lt;td rowspan=&quot;2&quot;&gt;CloudFunction 액션 실행&lt;/td&gt;
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_CLOUD_FUNCTIONS_MANAGER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;Classic&lt;/td&gt;
          &lt;td&gt;NCP_CLOUD_FUNCTIONS_MANAGER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;ListBuckets&lt;/td&gt;
          &lt;td&gt;ObjectStorage 버킷 리스트 조회&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;NCP_OBJECT_STORAGE_VIEWER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;createAutoScalingGroup&lt;/td&gt;
          &lt;td&gt;Auto Scaling Group 생성&lt;/td&gt;
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_AUTOSCALING_MANAGER&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;SMS API&lt;/td&gt;
          &lt;td&gt;Simple &amp; Easy Notification Service 내&lt;br /&gt;SMS 발신번호 등록 기능을 제외한&lt;br /&gt;모든 기능&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;NCP_SENS_MANAGER&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;geoLocation&lt;/td&gt;
          &lt;td&gt;지정한 IP의 위치 정보 조회&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;NCP_GEOLOCATION_MANAGER&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/div&gt;

## 참고 URL
1.  Ncloud Sub Account 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/ko/subaccount-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/ko/subaccount-overview&lt;/a&gt;

2.  Ncloud API 사용 가이드
	- &lt;a href=&quot;https://api.ncloud-docs.com/docs/api-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://api.ncloud-docs.com/docs/api-overview&lt;/a&gt;  


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}
</description>
            <pubDate>Mon, 14 Aug 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/management/ncloud-management-sub-account-api-gateway-access-control-guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/management/ncloud-management-sub-account-api-gateway-access-control-guide.html</guid>
            
            <category>account</category>
            
            <category>api</category>
            
            
        </item>
        
        <item>
            <title>Ncloud 서브 계정 (Sub Account) 생성 가이드</title>
            <description>## 개요
Sub Account(서브 계정)는 네이버 클라우드의 서비스 자원을 여러 사용자가 동시에 이용, 관리해야 할 때 필요한 만큼만 권한을 부여해서 사용할 수 있게 해주는 서비스입니다.  
Sub Account를 사용하면 사내 담당부서나 담당자별로 지정된 자원에만 접근하도록 하거나, 협력사에게 일부 접근권한을 부여해야 할 때 효과적입니다.

## 특징
네이버 클라우드의 Sub Account는 다음과 같은 특징이 있습니다.

- 별도의 로그인 페이지를 이용하여 접속
- 대시보드에서 서브 계정 수, 그룹 수, 정책 수, 접속 페이지 설정을 확인할 수 있음
- 그룹, 정책, 역할을 생성해 상세한 권한 설정을 할 수 있음
- Access Key를 별도로 생성해서 사용할 수 있음


## 주요 권한

- 네이버 클라우드 메인 계정과 동일한 접근 권한  
	**NCP_ADMINISTRATOR** 정책을 부여하시면 메인 계정과 동일하게 네이버클라우드플랫폼 내 포털, 콘솔을 접근할 수 있습니다

- 네이버 클라우드 콘솔 내 모든 상품/서비스 접근 권한  
	**NCP_INFRA_MANAGER** 정책을 부여하시면 메인 계정과 동일하게 콘솔 내 모든 상품/서비스에 접근할 수 있습니다.

- 네이버 클라우드 콘솔 내 각 상품/서비스별 접근 권한  
	**NCP_상품/서비스명_MANAGER/VIEWER** 정책을 부여하시면 해당 상품/서비스에 접근할 수 있습니다.

- 네이버 클라우드 포털 내 마이페이지 &quot;이용관리&quot; 메뉴 접근 권한  
	**NCP_FINANCE_MANAGER** 정책을 부여하시면 포털 마이페이지 내 &quot;서비스 이용내역/현황, 프로모션 내역, 청구 내역 추세&quot; 메뉴에 접근할 수 있습니다.


## Sub Account 서비스
[**Sub Account**] 서비스는 [**콘솔**] - [**Services**] - [**Management &amp; Governance**] - [**Sub Account**]에 위치하고 있습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-26.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

좀 더 쉽게 찾는 방법은 [**콘솔**] - [**Services**]에서 [**검색**] 기능을 이용하면 됩니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-27.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## 서브 계정 생성
[**Sub Account**] - [**Sub Accounts**]에서 [**서브 계정 생성**] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncp_manage_sub_account_01.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

서브 계정 생성 화면에서는 로그인 아이디, 이름, 이메일 주소를 우선 입력합니다.  

다음으로 접근 유형으로 [Console 접근]과 [API 접근]을 모두 허용할 것인지, 하나만 허용할 것인지 선택하고, 
Conosole 접근의 경우에 지정한 IP대역에서만 접근하게 할 것인지, 모두 허용할 것인지도 선택합니다.  

휴대폰 문자인증 또는 이메일 인증 등의 2차 인증을 적용할 것인지도 선택합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

### 비밀번호 설정

마지막으로 로그인 비밀번호는 [**자동 생성**] 또는 [**직접 입력**] 중에서 선택할 수 있으며, 해당 서브 계정으로 로그인 시에 비밀번호를 변경하도록 할 것인지 선택할 수 있습니다.

#### 자동 생성
{% include image.html file=&quot;management/ncloud-management-sub-account-03.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- `자동 생성된 비밀번호는 이 화면에서만 확인 가능하므로 반드시 별도 저장해야 합니다.`
{% include image.html file=&quot;management/ncloud-management-sub-account-05.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

#### 직접 입력
직접 입력하는 비밀번호는 영문자, 숫자, 특수 문자를 조합하여 8자~16자 이내로 입력하면 됩니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-04.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;management/ncloud-management-sub-account-06.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}


## 계정 정책 추가
생성된 서브 계정을 클릭하면 서브 계정 상세 설정 화면으로 이동합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-07.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

서브 계정 상세 화면에서는 정책, 그룹, Access Key 등을 추가하고 관리할 수 있습니다.  우선 아래쪽에 있는 [**정책**] 탭에서 [**개별 권한 추가**] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-08.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

정책 추가 화면에서는 네이버 클라우드에서 기본으로 제공하는 [관리형 정책]과 사용자가 직접 정의하는 [사용자 정의 정책]이 있습니다.  
우선 [관리형 정책]에서 필요한 정책을 선택하고 [추가] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-24.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

정책이 워낙 많기 때문에 가능하면 위쪽의 검색 기능을 이용해서 정책을 찾는 것을 추천합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-25.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

여기서는 네이버 클라우드의 플랫폼 내 모든 상품을 이용할 수 있는 권한인 [**NCP_INFRA_MANAGER**] 선택했고, 아래와 같이 추가된 것을 확인할 수 있습니다. 

{% include image.html file=&quot;management/ncloud-management-sub-account-09.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## 접속 환경 설정
네이버 클라우드 서브 계정은 별도의 로그인 페이지가 존재하는데, 
[**Sub Account**] - [**Dashboard**]에서 서브 계정으로 접속하기 위한 페이지 주소를 입력할 수 있습니다.  

우선 서브 계정 로그인 페이지 접속 접속키를 입력합니다. 입력한 접속키를 바탕으로 로그인 페이지 URL이 결정됩니다.  

추천되는 접속키의 형태는 다음과 같습니다.
- 회사명 + &amp;alpha; (ex: mycompany, samplecomsub)
- 서비스명 + &amp;alpha; (ex: mygame, testservicesub)
- 회사명 + 서비스명 + &amp;alpha; (ex: mycompanygame, mycomsamplegamesub)

{% include callout-v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;접속키는 영어 소문자와 숫자를 이용해서 3~20자로 구성해야 합니다.&quot; %}

{% include image.html file=&quot;management/ncloud-management-sub-account-20.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

서브 계정 로그인 페이지 URL은 [**주소 복사**] 버튼을 클릭하면 복사할 수 있습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-21.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

다음으로 [**미사용 세션 만료 설정**]에서 [**변경**] 버튼을 클릭하면 로그인된 서브 계정이 아무 활동없이 미사용일 경우 지정한 시간 기준으로 자동 로그아웃이 되도록 설정할 수 있습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-22.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

[**비밀번호 만료 설정**]에서 [**변경**] 버튼을 클릭해서 비밀번호 만료를 활성화할 경우 지정된 만료일을 초과했을 때 비밀번호를 변경해야만 접속 할 수 있습니다. 
활성화 하지 않았을 경우에는 90일이 지난 후에 비밀번호 변경 안내 팝업만 나타납니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-23.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## 접속 - 로그인
위에서 설정한 접속 페이지 [ **https://www.ncloud.com/nsa/\*\*\*\*\*\***] 에 접속하면 아래와 같이 서브 계정 로그인 화면을 확인할 수 있습니다.  

{% include image.html file=&quot;management/ncloud-management-sub-account-10.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}


## API Key 설정
서브 계정에서 API Access Key를 사용해야 할 경우 먼저 API GateWay 접근 권한을 부여하고, 서브 계정 상세 화면 [Access Key]탭에서 [추가] 버튼을 클릭해 생성할 수 있습니다. 

### API Gateway 접근 권한 설정
우선, 서브 계정 리스트에서 해당 계정을 클릭해서 [**서브 계정 세부 정보**] 화면으로 이동합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-07.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- [**서브 계정 세부 정보**] 화면에서 [**수정**] 메뉴 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-11.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- [**서브 계정 정보**] 수정 화면에서 [**접근 권한**]에 있는 [**API Gateway 접근**]을 체크합니다. 그리고, 되도록이면 [**지정된 Source에서만 접근 가능**] 옵션을 선택하고, 지정된 IP 등을 추가하는 것을 권장합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-12.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- 위 화면에서 [**추가**] 버튼을 클릭하면 아래와 같이 [**접근 가능 Source 지정**] 팝업이 나타나는데, IP를 입력하거나 VPC Server를 선택하면 됩니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-13.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

### API Access Key 추가
위에서 [**API Gateway 접근**] 권한을 추가하면 계정 정보 화면에 아래와 같이 [**Access Key**] 탭이 나타나고 [**추가**] 버튼을 클릭하면 [**Access Key**]와 [**Secret Key**]를 생성할 수 있습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-14.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## 계정 그룹 설정
여러 개의 서브 계정을 묶어서 하나의 그룹으로 구성하면 해당 그룹의 서브 계정에 동일한 정책을 동시에 적용할 수 있습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-15.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## 사용자 정의 정책 생성
서브 계정 정책에는 네이버 클라우드에서 기본으로 제공하는 [관리형 정책] 외에도 사용자가 직접 설정하는 [사용자 정의 정책]도 사용할 수 있습니다. 
[Sub Account] - [Plicies]에서 [정책 생성] 버튼을 클릭합니다. 

{% include image.html file=&quot;management/ncloud-management-sub-account-28.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

### VPC 환경에서 정책 생성
정책 이름을 입력하고, VPC를 선택 후, 어떤 서비스 상품에 적용할 것인지 선택합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-16.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

다음으로 Actions 항목에서는 읽기 권한인 View 또는 수정 권한인 Change를 선택하면 아래쪽에 리소스별로 상세한 권한 설정을 할 수 있는 화면이 나타납니다. 
모든 설정을 마치고, 아래쪽 [적용대상 추가] 버튼을 클릭하면 됩니다. 

{% include image.html file=&quot;management/ncloud-management-sub-account-17.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

### Classic 환경에서 정책 생성
Classic 환경에서는 리소스별 상세 권한은 설정할 수 없고, View 또는 Change를 선택한 후에 [적용대상 추가] 버튼을 클릭하면 모든 권한이 추가됩니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-18.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

아래와 같이 선택한 서비스 상품에 대해 모든 리전, 모든 리소스에 선택한 권한이 지정됩니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-19.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}


## 참고 URL
1.  Sub Account 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/ko/subaccount-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/ko/subaccount-overview&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}
</description>
            <pubDate>Mon, 07 Aug 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/management/ncloud_management_sub_account_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/management/ncloud_management_sub_account_guide.html</guid>
            
            <category>account</category>
            
            <category>api</category>
            
            
        </item>
        
        <item>
            <title>Object Storage 버킷 접근 로그 확인하는 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드) Object Storage에 존재하는 오브젝트, 즉 파일을 호출, 접근한 기록이나 오브젝트를 업로드한 로그를 확인하는 방법을 정리해보겠습니다.


## 버킷 생성
우선, 테스트에 사용할 버킷과 로그를 저장할 버킷을 생성하고, 테스트용 버킷에는 파일 몇개를 업로드 해두었습니다.

- object-bucket-test: 테스트용 버킷
- object-bucket-test-log: 로그를 저장할 버킷

{% include image.html file=&quot;storage/ncloud-storage-object-storage-log-management-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드)의 Object Storage 버킷 이용, 접근 로그를 확인하는 방법&quot; caption=&quot;&quot; %}

## 로그 설정
로그를 설정하는 방법은 버킷을 선택하고, 옆에 있는 [ &lt;i class=&quot;fa-solid fa-ellipsis-vertical&quot;&gt;&lt;/i&gt; ] 아이콘을 클릭하면 나타나는 메뉴에서 [**로그 관리**]를 선택합니다.

{% include image.html file=&quot;storage/ncloud-storage-object-storage-log-management-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드)의 Object Storage 버킷 이용, 접근 로그를 확인하는 방법&quot; caption=&quot;&quot; %}

### 로그 관리 설정
[**로그 관리**] 설정 팝업에서 로그를 저장할 버킷을 선택하고, 로그 파일의 Prefix를 입력한 후 [**+ 추가**] 버튼을 클릭합니다.

{% include image.html file=&quot;storage/ncloud-storage-object-storage-log-management-03.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드)의 Object Storage 버킷 이용, 접근 로그를 확인하는 방법&quot; caption=&quot;&quot; %}

- 설정 항목이 추가 되었으면 [**확인**] 버튼을 클릭해서 설정을 저장합니다.

{% include image.html file=&quot;storage/ncloud-storage-object-storage-log-management-04.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드)의 Object Storage 버킷 이용, 접근 로그를 확인하는 방법&quot; caption=&quot;&quot; %}

## 로그 생성 규칙

{% include callout-v2.html type=&quot;warning&quot; level=&quot;3&quot; content=&quot;
&amp;#8259; 접근 로그 관리를 설정하면 매시간 15~55분에 이전 1시간 동안의 로그가 생성됩니다. &lt;br /&gt;
&amp;#8259; 예시: 17시 00분 00초~17시 59분 59초의 로그는 18시 15~55분에 생성
&quot; %}

## 로그 생성
위에서 확인한 로그 생성 규칙처럼 일정한 시간이 지난 후에 아래와 같이 로그가 생성된 것을 확인할 수 있습니다.

{% include image.html file=&quot;storage/ncloud-storage-object-storage-log-management-05.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드)의 Object Storage 버킷 이용, 접근 로그를 확인하는 방법&quot; caption=&quot;&quot; %}

## 로그 예시
생성된 로그를 다운로드 받아서 확인해보면 아래와 같은 JSON 형식으로 구성된 것을 확인할 수 있습니다.  
(로그 내용이 길이서 중요한 부분만 표시하고 나머지는 생략했습니다.)

``` json
{
    &quot;container_id&quot;: &quot;5d3******e-9****-***2-a***0-54******f9b&quot;, 
    &quot;container_name&quot;: &quot;object-bucket-test&quot;, 
    &quot;container_region&quot;: &quot;KR&quot;, 
    &quot;format&quot;: 1, 
    &quot;headers&quot;: { &quot;Accept-Encoding&quot;: [&quot;gzip, deflate, br&quot;] }, 
    &quot;https&quot;: 
    {
        &quot;cipher_suite&quot;: &quot;TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384&quot;, 
        &quot;protocol&quot;: &quot;TLSv1.2&quot;
    }, 
    &quot;object_name&quot;: &quot;3rdeyesys-1.png&quot;,   
    &quot;remote_address&quot;: &quot;123.123.123.123&quot;, 
    &quot;stat&quot;: {    }, 
    &quot;status&quot;: 200, 
    &quot;user_agent&quot;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML) Chrome/115.0.0.0&quot;
}
```

{% include image.html file=&quot;storage/ncloud-storage-object-storage-log-management-06.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드)의 Object Storage 버킷 이용, 접근 로그를 확인하는 방법&quot; caption=&quot;&quot; %}


## 로그 통합 저장
또한, 여러 버킷의 접근 로그를 하나의 버킷에 통합해서 저장할 수도 있습니다.  

아래와 같이 또 다른 버킷에서 [**로그 관리**] 설정을 추가하면서 로그를 저장할 버킷은 위에서 설정했던 버킷과 동일한 버킷으로 지정했습니다.

{% include image.html file=&quot;storage/ncloud-storage-object-storage-log-management-07.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드)의 Object Storage 버킷 이용, 접근 로그를 확인하는 방법&quot; caption=&quot;&quot; %}

- 그리고 일정 시간이 지난 후에 확인해보면 아래와 같이 2개의 다른 버킷의 접근 로그가 저장된 것을 확인할 수 있습니다.

{% include image.html file=&quot;storage/ncloud-storage-object-storage-log-management-08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드)의 Object Storage 버킷 이용, 접근 로그를 확인하는 방법&quot; caption=&quot;&quot; %}

## 로그 설정 삭제
접근 로그를 더 이상 기록하고 싶지 않을 경우에는 아래와 같이 로그 관리 설정에서 [**삭제**] 버튼을 클릭해서 설정을 모두 지우시면 됩니다.

{% include image.html file=&quot;storage/ncloud-storage-object-storage-log-management-09.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드)의 Object Storage 버킷 이용, 접근 로그를 확인하는 방법&quot; caption=&quot;&quot; %}

## 일본 리전
일본 리전의 경우 다른 리전과 몇가지 내용들이 다르게 설정, 저장됩니다.

- 로그가 기록되는데에는 10분 ~ 수시간까지 소요될 수 있습니다.
- 로그에 저장되는 항목 개수가 다른 리전보다 적습니다.



## 참고 URL
1.  Ncloud Object Storage 버킷 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/objectstorage-use-bucket&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/objectstorage-use-bucket&lt;/a&gt;

2.  Ncloud Object Storage 버킷 로그 관리 상세 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/objectstorage-use-bucket#%EB%A1%9C%EA%B7%B8-%EA%B4%80%EB%A6%AC&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/objectstorage-use-bucket#%EB%A1%9C%EA%B7%B8-%EA%B4%80%EB%A6%AC&lt;/a&gt;	


	</description>
            <pubDate>Wed, 02 Aug 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/storage/ncloud-storage-object-storage-log-management-guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/storage/ncloud-storage-object-storage-log-management-guide.html</guid>
            
            <category>storage</category>
            
            <category>log</category>
            
            
        </item>
        
        <item>
            <title>Ncloud VPC 환경에서 서버 생성하는 방법</title>
            <description>## 개요
Ncloud (네이버 클라우드) VPC환경에서 서버를 생성하는 순서를 정리해보겠습니다.  
얼마전 업데이트에서 서버 생성 콘솔 화면에 큰 변화가 생겼기에 그 내용까지 함께 포함했습니다.

## 서버 생성 순서
VPC 환경에서 서버를 생성하려면 Subnet 설정 등 사전에 미리 설정해야 하는 것과 서버 생성 후에 설정해야 하는 것들이 있는데, 순서대로 정리하고 아래쪽에서 차례대로 살펴보겠습니다.

1. VPC 설정
2. Subnet 설정
3. 서버 생성  
  3-1. 서버 인증키 설정
4. ACG (방화벽) 설정


## VPC 설정
VPC (Virtual Private Cloud) 즉, 클라우드 상에서 논리적으로 격리된 고객 전용 네트워크 공간을 먼저 생성하고 해당 공간에 서버를 생성하게 됩니다.  
VPC는 고객의 계정마다 **최대 3개**를 생성할 수 있으며, 각 VPC는 최대 넷마스크 0.0.255.255/16 (IP 65,536개) 크기의 네트워크 주소 공간을 제공합니다.

### VPC 서비스 위치
[**VPC**] 서비스는 [**Console**] - [**Services**] - [**Networking**]에 위치해 있습니다.

그리고, 아래 스샷에서 확인할 수 있듯이 [**VPC**]에는 [**VPC Management**], [**Subnet Management**], [**Network ACL**], [**NAT Gateway**], [**Route Table**], [**VPC Peering**], [**Virtual Private Gateway**] 등의 하부 서비스 메뉴가 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-vpc-subnet-create-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 VPC, Subnet 생성&quot; caption=&quot;&quot; %}


## VPC 생성
[**VPC**] - [**VPC Management**] [**VPC 생성**] 버튼을 클릭합니다. 

{% include image.html file=&quot;networking/ncloud-networking-vpc-subnet-create-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 VPC, Subnet 생성&quot; caption=&quot;&quot; %}

- VPC 생성 화면에서 [**VPC 이름**]과 [**IP 주소 범위**]를 입력합니다.

{% include image.html file=&quot;networking/ncloud-networking-vpc-subnet-create-03.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 VPC, Subnet 생성&quot; caption=&quot;&quot; %}

{% include callout-v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;
VPC의 IP 주소 범위는, private 대역(10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) 내에서 /16~/28 범위여야 합니다.&lt;br /&gt;
- 예시: 10.0.0.0/16, 172.16.0.0/16, 192.168.0.0/16
&quot; %}

## Subnet 생성
[**VPC**] - [**Subnet Management**]에서 [**Subnet 생성**] 버튼을 클릭합니다. 

{% include image.html file=&quot;networking/ncloud-networking-vpc-subnet-create-04.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 VPC, Subnet 생성&quot; caption=&quot;&quot; %}

- [**Subnet 이름**]을 적절하게 입력하고, 위에서 생성했던 [**VPC**]를 선택하고, Subnet에서 사용할 [**IP 주소 범위**]를 입력합니다.
- [**Internet Gateway 전용여부**]는 외부와 인터넷 연결이 필요할 경우에는 [**Public**], 내부 서버끼리만 통신할 경우에는 [**Private**]을 선택합니다.
- [**용도**]는 일반 서버일 경우에는 [**일반**]을 선택하면 됩니다.

{% include image.html file=&quot;networking/ncloud-networking-vpc-subnet-create-05.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 VPC, Subnet 생성&quot; caption=&quot;&quot; %}

{% include callout-v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;
Subnet의 IP 주소 범위는, private 대역(10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) 내에서 /16~/28 범위여야 합니다.&lt;br /&gt;
- 예시: 10.0.1.0/24, 172.16.10.0/24, 192.168.101.0/24
&quot; %}

## 서버 생성
[**VPC**]와 [**Subnet**] 설정을 마쳤으니 이제 서버(Server)를 설정해보겠습니다.

### Server 서비스 위치
[Server] 서비스는 [Console] - [Services] - [Compute]에 위치해 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- [**Server**] - [**Server**]에서 [**서버 생성**] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-02.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

### 서버 생성 콘솔 선택
Ncloud 서버 생성 콘솔화면은 신규 기능이 업데이트 되면서 2가지를 선택할 수 있습니다. 여기서는 [**신규 콘솔 화면**]으로 진행하겠습니다.

- 기존 콘솔 화면: **XEN, RHV** 하이퍼바이저 기반의 서버(g1,g2)를 생성할 수 있습니다.
- 신규 콘솔 화면: **XEN, RHV** 하이퍼바이저 기반의 서버(g1,g2)뿐만 아니라 **KVM** 기반 및 다양한 성능을 제공하는 기본 스토리지로 서버(**g3**)를 생성할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-03.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

### 서버 이미지 선택
[**서버 이미지 선택**] 단계에서는 Ncloud에서 제공하는 다양한 서버 이미지를 선택할 수 있고, [**최신 서버 이미지**]와 [**내 서버 이미지**]를 따로 볼 수 있는 기능도 제공하고 있습니다. 여기서는 [**최신 서버 이미지**]에서 제공하는 서버 이미지로 서버를 생성해보겠습니다.  
또한 하이퍼바이저 기준으로 [**XEN**]과 [**KVM**] 2가지 타입이 제공되는데 여기서는 [**XEN**] 타입의 서버로 테스트 해보겠습니다. [**XEN**]과 [**KVM**]에 대한 설명은 아래쪽에서 별도로 살펴보겠습니다. ([XEN 과 KVM 비교&lt;i class=&quot;fa-solid fa-turn-down&quot;&gt;&lt;/i&gt;](#xen-vs-kvm))

{% tabs server-image-choice %}

{% tab server-image-choice 최신 서버 이미지 %}

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-04.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}
{% endtab %}

{% tab server-image-choice NCP 서버 이미지 %}

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-23.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

{% endtab %}
{% endtabs %}

### 서버 설정 (전체 화면)
서버 설정 단계에서는 위에서 생성한 [**VPC**]와 [**Subnet**]을 선택하고  [**서버 스펙**]과 [**요금제**], [**Network Interface**], [**공인 IP 할당 여부**] 등을 선택하게 됩니다. 각 항목별 상세한 설명은 아래쪽에서 다시 정리해보겠습니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-05.png&quot; width=&quot;845&quot; height=&quot;811&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

### 서버 설정 (상세 설명)
그러면 이제부터 서버 설정 항목별로 상세하게 살펴보겠습니다.

- [**VPC**], [**Subnet**] 선택  
위에서 생성했던 [**VPC**]와 [**Subnet**] 선택합니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-06.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- [**서버 스펙**]  
[**서버 스펙**]은 [**High-CPU**], [**CPU-Intensive**], [**Standard**], [**High-Memory**] 등의 타입 중에서 원하는 타입을 선택하고, 각 타입별로 서비스에 적절한 vCPU와 Memory를 선택하시면 됩니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-07.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- [**요금제 선택**], [**서버 개수**], [**서버 이름**]  
요금제는 [**월요금제**]와 [**시간 요금제**] 중에서 선택하시고, 한번에 생성할 서버 개수와 서버 이름을 입력합니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-08.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- [**Network Interface**] 사설 IP 할당  
사설 IP 할당은 자동 할당과 수동 할당 방법 중에서 선택하시면 됩니다.

{% tabs private-ip-assign %}

{% tab private-ip-assign 사설 IP 자동 할당 %}
&lt;br /&gt;
[**Network Interface**]에 할당되는 사설 IP는 아래와 같이 IP 입력 칸에 아무것도 입력하지 않으면 자동할당 됩니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-09.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-10.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}
{% endtab %}

{% tab private-ip-assign 사설 IP 수동 할당 %}
&lt;br /&gt;
IP 입력 칸에 선택된 [**Subnet**] 범위 내의 원하는 IP를 입력해서 수동으로 할당할 수도 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-11.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-12.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

{% endtab %}
{% endtabs %}

- [**공인 IP 할당**]  
Public Subnet을 선택했고 서버에 공인 IP가 필요할 경우에는 [**새로운 공인 IP 할당**]을 선택하시면 됩니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;
&amp;#8259; 공인 IP는 요금이 과금되므로, 사용하지 않을 때는 반납하기를 권장합니다. (월 이용료: 4,032원 ) &lt;br /&gt;
&amp;#8259; 서버 생성시 공인 IP를 함께 생성하려면 Subnet 타입은 Public Subnet, 서버 개수는 1개여야 합니다.
&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-13.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- [**물리 배치 그룹**] 설정
물리 배치 그룹 설정은 서버들을 하나의 그룹으로 묶어서 해당 그룹에 속한 서버들을 클러스터에 배치할 때 어떻게 할 것인지 결정할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-14.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- [**물리 배치 그룹**]을 사용하게 되면 배치 그룹명과 배치 종류를 선택할 수 있습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;[**Anti-Affinity (분산 배치)**]의 경우 같은 배치 그룹에 소속된 서버들은 가급적 서로 다른 클러스터에 배치됩니다. 다만 그 결과가 엄격히 보장되지 않는 Best effort 방식입니다.&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-15.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- [**반납 보호**]  
반납 보호를 설정하면 실수로 서버를 반납하여, 서버가 삭제되는 사고를 방지할 수 있습니다.
{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-16.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-17.png&quot; width=&quot;485&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- [**Script 선택**]  
서버가 켜질 때 자동으로 실행되어야 하는 스크립트가 있다면 [**Server**] - [**Init Script**] 메뉴에서 미리 Script를 등록한 후에 적용할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-18.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}


## 스토리지 설정
하이퍼바이저 [**XEN**] 타입의 서버는 서버 생성이 완료된 이후에 추가 스토리지를 설정할 수 있으므로 이번 단계는 그냥 넘어가겠습니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-19.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

## 인증키 설정
인증키 이름을 입력하고, [**인증키 생성 및 저장**] 버튼을 클릭해서 인증키를 로컬 PC에 다운로드 받아서 안전한 곳에 보관해야 합니다. 기존에 사용하고 있던 인증키가 있을 경우에는 [**보유하고 있는 인증키 이용**]을 선택하면 됩니다.

{% include warning.html title=&quot;인증키&quot; content=&quot;인증키는 해당 서버의 **관리자 비밀번호**를 확인하는데 사용되므로 **안전한 곳에 잘 보관**해야 합니다.&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-20.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- 아래와 같이 로컬 PC에 인증키 (PEM) 파일을 저장합니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-24.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

## 네트워크 접근 설정
네트워크 접근은 [**ACG**]로 설정하게 되는데, `ACG(Access Control Group)는 서버 간 네트워크 접근 제어 및 관리를 할 수 있는 IP/Port 기반 필터링 방화벽 서비스`로, 서버에 별도의 복잡한 방화벽 구축없이 간단하게 서버에 대한 네트워크 접근 제어를 할 수 있습니다.  
[**VPC**]를 생성하면 자동으로 생성되는 **기본 ACG**를 선택하거나 별도로 생성한 ACG가 있을 경우 해당 ACG를 선택하면 됩니다. **적용할 ACG는 최대 3개**까지 선택할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-21.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

## 서버 생성 완료
모든 단계를 마치고 나면 아래와 같이 서버가 생성된 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-22.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

## 서버 접속
이제 생성된 서버에 관리자(root) 계정으로 접속해보겠습니다.

### 방화벽 (ACG) 설정
우선 서버 접속을 위한 방화벽 (ACG)을 설정하겠습니다.

- 테스트로 생성했던 서버를 선택하고 [ACG 수정] 버튼을 클릭해서 적용된 ACG를 확인합니다.
{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-34.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- ACG 수정 화면에서 현재 적용된 ACG 이름을 확인할 수 있습니다.
{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-35.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- [Server] - [ACG]에서 위에서 확인한 ACG를 선택하고 [ACG 설정]을 클릭합니다.
{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-36.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- ACG 규칙 설정 화면 [**Inbound**] 탭에서 [**myIp**] 버튼을 클릭해서 현재 접속한 PC나 회사 IP를 입력하고, 허용 포트에는 SSH 접속을 위한 `22포트를 추가`합니다.
{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-37.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

### 관리자 비밀번호 확인
다음으로, 서버 접속에 필요한 관리자 비밀번호를 확인하려면, 서버를 선택하고 [**서버 관리 및 설정 변경**] 메뉴에서 [**관리자 비밀번호 확인**] 메뉴를 선택합니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-25.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- 메뉴를 선택하면 다음과 같은 [**관리자 비밀번호 확인**] 팝업이 나타납니다.
  
{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-26.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- 팝업에서 [**마우스로 파일을 끌고 오거나 여기를 클릭하세요**] 부분을 클릭하면 파일 선택 창이 나타나는데, 위에서 저장했던 pem 인증키 파일을 선택합니다.
  
{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-27.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- 인증키 파일이 선택된 상태에서 아래쪽에 있는 [**비밀번호 확인**] 버튼을 클릭합니다.
  
{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-28.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- 그러면 아래와 같이 관리자 계정(root)에 대한 비밀번호를 확인할 수 있습니다. 아래쪽에서 서버에 접속할때 사용하기 위해 비밀번호를 복사합니다.
  
{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-29.png&quot; width=&quot;485&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

### 서버 IP 주소 확인
다음으로 서버 정보 화면에서 서버의 [**공인 IP 주소**]를 확인하고, 복사합니다. (SSL VPN 등을 사용하는 경우에는 사설 IP 주소를 사용하면 됩니다.)

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-30.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

### 서버 접속 
대표적인 서버 접속 클라이언트인 Putty를 실행하고, 서버의 IP주소를 입력합니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-31.png&quot; width=&quot;452&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- 처음 연결하는 서버의 경우 아래와 같이 SSH 프로토콜에서 필요한 FingerPrint를 저장할 것인지 묻는데, [**Accept**] (또는 예)를 클릭합니다.
{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-32.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- 마지막으로 관리자 계정인 [**root**]와 위에서 확인했던 [**관리자 비밀번호**]를 입력하면 서버에 접속됩니다.
{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-33.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}


## XEN vs KVM {#xen-vs-kvm}
Ncloud (네이버 클라우드)에서 제공하는 하이퍼바이저의 종류는 XEN, KVM이 있으며, 각각의 특징은 다음과 같습니다.

&lt;div&gt;
&lt;table class=&quot;simple_table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;하이퍼바이저&lt;/th&gt;
      &lt;th&gt;서버 세대&lt;/th&gt;
      &lt;th&gt;서버 타입&lt;/th&gt;
      &lt;th&gt;서버 이미지&lt;/th&gt;
      &lt;th&gt;스토리지 타입&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;    
    &lt;tr&gt;
      &lt;td&gt;XEN&lt;/td&gt;
      &lt;td&gt;g1, g2&lt;/td&gt;
      &lt;td&gt;Micro, Standard, CPU-Intensive, High-CPU, High-Memory&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;HDD, SDD&lt;/td&gt;
    &lt;/tr&gt; 
    &lt;tr&gt;
      &lt;td&gt;KVM&lt;/td&gt;
      &lt;td&gt;g3&lt;/td&gt;
      &lt;td&gt;Micro
        &lt;br /&gt;(Standard, CPU-Intensive, High-CPU, High-Memory 는 출시 예정)
      &lt;/td&gt;
      &lt;td&gt;KVM 기반 서버 이미지&lt;/td&gt;
      &lt;td&gt;FB1, CB1&lt;/td&gt;
    &lt;/tr&gt;    
  &lt;/tbody&gt;
&lt;/table&gt;  
&lt;/div&gt;

### 스토리지 특징

&lt;div&gt;
&lt;table class=&quot;simple_table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;하이퍼바이저&lt;/th&gt;      
      &lt;th&gt;스토리지 타입&lt;/th&gt;
      &lt;th&gt;미디어 타입&lt;/th&gt;
      &lt;th&gt;최소 크기&lt;/th&gt;
      &lt;th&gt;최대 크기&lt;/th&gt;
      &lt;th&gt;추가 가능 개수&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;    
    &lt;tr&gt;
      &lt;td rowspan=&quot;2&quot;&gt;XEN&lt;/td&gt;
      &lt;td&gt;HDD&lt;/td&gt;
      &lt;td&gt;HDD&lt;/td&gt;
      &lt;td&gt;10GB&lt;/td&gt;
      &lt;td&gt;2TB&lt;/td&gt;
      &lt;td&gt;15개&lt;/td&gt;
    &lt;/tr&gt;  
    &lt;tr&gt;     
      &lt;td&gt;SSD&lt;/td&gt;
      &lt;td&gt;SSD&lt;/td&gt;
      &lt;td&gt;10GB&lt;/td&gt;
      &lt;td&gt;2TB&lt;/td&gt;
      &lt;td&gt;15개&lt;/td&gt;
    &lt;/tr&gt; 
    &lt;tr&gt;
      &lt;td rowspan=&quot;2&quot;&gt;KVM&lt;/td&gt;
      &lt;td&gt;FB1&lt;/td&gt;
      &lt;td&gt;HDD&lt;/td&gt;
      &lt;td&gt;100GB&lt;/td&gt;
      &lt;td&gt;16TB&lt;/td&gt;
      &lt;td&gt;20개&lt;/td&gt;
    &lt;/tr&gt;  
    &lt;tr&gt;     
      &lt;td&gt;CB1&lt;/td&gt;
      &lt;td&gt;SSD&lt;/td&gt;
      &lt;td&gt;10GB&lt;/td&gt;
      &lt;td&gt;16TB&lt;/td&gt;
      &lt;td&gt;20개&lt;/td&gt;
    &lt;/tr&gt;        
  &lt;/tbody&gt;
&lt;/table&gt;  
&lt;/div&gt;

## 참고 URL
1.  Ncloud VPC 서버 생성 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/server-create-new-vpc&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/server-create-new-vpc&lt;/a&gt;

2.  Ncloud 하이퍼바이저 개요
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/hypervisor-info&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/hypervisor-info&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}</description>
            <pubDate>Fri, 28 Jul 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_server_vpc_create.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_server_vpc_create.html</guid>
            
            <category>vpc</category>
            
            
        </item>
        
        <item>
            <title>VPC 환경에서 SSL VPN 설정하고 접속하는 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드) 외부에서 내부에 구성된 네트워크로 암호화된 보안 접속 통신을 제공하는 서비스인 SSL VPN을 VPC 환경에서 설정하고, 서버에 접속하는 방법에 대해 정리해보겠습니다.

## SSL VPN이란?
- VPN은 가상 사설망(Virtual Private Network)의 약자로, 외부에서 접근할 수 없는 사설망에 내 PC나 네트워크를 연결시키는 방법을 말합니다.
- 사설망과의 연결은 가상 터널을 통해 이루어지며, 이 가상 터널을 SSL 암호화로 보호하는 것이 SSL VPN입니다.
- 가상 터널을 통해 사설망과 연결된 사용자 PC는 사설망의 라우팅 및 ACL 정책에 따라 내부 서버에 접근할 수 있습니다.

## SSL VPN 서비스 위치
Ncloud 콘솔에서 SSL VPN의 위치는 [**Services**] - [**Security**] - [**SSL VPN**]에 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## SSL VPN 생성
[**SSL VPN 생성**] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

우선 접근할 서버가 속해 있는 VPC를 선택하고, 등록 가능한 접속 ID 개수에 따른 상품을 선택합니다.  
VPC 환경에서는 3, 5, 10, 20, 30, 50, 100, 200, 300, 400, 500개 상품 중에서 선택 가능합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-03.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

VPC 환경의 SSL VPN은 콘솔에서 자동으로 생성하는 것이 아니라 `생성 요청을 하면 Ncloud 담당자가 직접 생성하고 결과를 안내 받는 구조`로 되어 있습니다. 
생성 완료까지 걸리는 시간은 **약 10~20분 이내** 이며, 생성이 완료되면 SSL VPN 상태가 [운영중]으로 변경되고, 안내 메일이 도착합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-04.png&quot; width=&quot;485&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## SSL VPN 생성 완료 {#connection-url-check}
SSL VPN 생성이 완료되면 아래와 같이 [**IP POOL**]과 [**접속 URL**] 정보를 확인할 수 있는데 SSL VPN Agent 접속 시에 중요한 정보이니 잘 확인해야 합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-05.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 사용자 설정
SSL VPN에 접속할 사용자 정보를 설정합니다.  리스트에서 SSL VPN을 선택하고 [사용자 설정] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-06.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자 정보는 ID, Passowrd, Email, SMS 등을 입력하고 [**추가**] 버튼을 클릭합니다.  
VPC 환경은 이차인증이 필수이므로  SMS와 Email 정보를 함께 입력합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-07.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자가 추가되면 SSL VPN 정보에 사용자 계정 수(등록된 ID 수)에 숫자가 표시되는 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## Route Table 설정
네트워크 설정에서는 우선 접속할 서버가 속해 있는 VPC Subnet의 Route Table에 SSL VPN으로 접근할 수 있게 SSL VPN의 [**IP POOL**]을 등록해야 합니다.  

- **접속할 서버 정보 확인**  
아래와 같이 접속할 서버의 정보에서 VPC와 Subnet을 확인합니다. 여기서는 Private Subnet에 생성한 서버에 접속할 예정입니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

### VPC 서비스 위치
[**VPC**] 서비스는 [**Console**] - [**Services**] - [**Networking**]에 위치해 있습니다.  
그리고, 아래와 같이 [**VPC Management**], [**Subnet Management**], [**Route Table**] 메뉴를 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-vpc-subnet-create-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 VPC, Subnet 생성&quot; caption=&quot;&quot; %}

[**VPC**] - [**Route Table**]에서 해당 VPC의 Private Subnet을 선택하고 [**Routes 설정**] 버튼을 클릭합니다.  
(Public Subnet에 생성한 서버에 접근해야 할 경우에는 public-table을 선택하고 설정하시면 됩니다.)

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-10.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[**Destination**]에 생성된 SSL VPN 정보에서 확인한 [**IP POOL**] 정보를 등록하고, [**Target Type**]은 SSLVPN을 선택, [**Target Name**]은 위에서 생성한 SSL VPN 이름을 선택하고 [생성] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-11.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## ACG 설정
다음으로 서버에 적용된 ACG에 SSL VPN의 [**IP POOL**]을 등록해야 합니다.  
우선 SSL VPN을 통해서 접속할 서버를 선택하고 [**ACG 수정**] 버튼을 클릭해서 적용된 ACG를 확인합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-12.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

ACG 수정 화면에서 현재 적용된 ACG 이름을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[**Server**] - [**ACG**]에서 위에서 확인한 ACG를 선택하고 [ACG 설정]을 클릭합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-14.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

ACG 규칙 설정 화면에서 위에서 확인했던 [**IP POOL**]을 접근 소스에 입력하고, 필요한 포트들을 등록합니다. 
기본이 되는 프로토콜과 포트는 리눅스 서버 접속용 TCP 22, 윈도우 서버 접속용 TCP 3389, Ping 확인용 ICMP 등입니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-15.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 다운로드
SSL VPN 접속을 위한 Agent를 다운로드 합니다.  

- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/sslvpn-download&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;SSL VPN Agent 다운로드&lt;/a&gt;

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-16.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## Agent 접속
Agent 프로그램, BIG-IP Edge Client를 설치하고 실행하면 다음과 같은 화면을 볼 수 있습니다. 
서버 선택 창에 위에서 생성했던 SSL VPN 정보에서 확인했던 [**접속 URL**] 주소를 입력하고, [다음] 버튼을 클릭합니다.

{% include tip.html content=&quot;
[접속 URL 확인하는 방법 &lt;i class=&apos;fa-solid fa-arrow-up-from-bracket&apos;&gt;&lt;/i&gt;](#connection-url-check)&lt;br /&gt;
&quot; %}

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-17.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

주소 변경 후에 [연결] 버튼을 클릭하면 로그인 화면이 나타나는데 위에서 설정했던 VPN 접속용 아이디와 Password를 입력하고 [로그온] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_20.png&quot; width=&quot;650&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

그리고 도착한 OTP 인증 번호를 입력합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-18.png&quot; width=&quot;710&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

SSL VPN에 제대로 연결이 되었는지 확인하기 위해서 cmd 창을 띄워서 ipconfig 명령어를 입력하면 아래 화면처럼 SSL VPN 주소로 설정된 어탭터에  [**IP POOL**]에 해당하는 IP가 할당된 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-19.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 서버 접속
이제 SSL VPN이 연결된 상태에서 서버에 접속해보겠습니다.  
PuTTY 를 실행하고 접속할 서버의 IP를 입력합니다.  
이때 서버 IP는 콘솔에 있는 서버 정보에서 **비공인 IP**에 표시되는 IP를 입력하면 됩니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-20.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 기타 설정
SSL VPN Agent에는 몇가지 추가 기능이 있는데 아래에서 확인해보겠습니다.

### 트래픽 그래프
Agent 창에서 [그래프 보기] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-21.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


여기서는 SSL VPN이 연결된 상태의 트래픽을 그래프로 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-22.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


다음으로 [상세 보기] 버튼을 클릭하면 접속 세부 정보, 로그, 통계, 알림, 라우팅 테이블, IP설정 등의 정보를 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-23.png&quot; width=&quot;777&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}



## 설정 변경
처음에 설정한 접속 가능 ID 개수를 변경하고 싶을 경우 SSL VPN을 선택하고 [SSL VPN 설정 변경] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-24.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

### ID 개수 변경
3, 5, 10, 20, 30, 50, 100, 200, 300, 400, 500개 상품 중에서 원하는 개수로 변경할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-25.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

### 인증 로그 수집
Ncloud SSN VPN은 이용자가 SSN VPN에 접속 인증한 로그를 수집할 수 있습니다. [**설정**] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-26.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

인증 로그 수집을 활성화 하면 [**Cloud Log Analytics**]에 로그를 전달하여 저장합니다. 해당 상품을 미사용중이면 Cloud Log Analytics 상품 이용 신청을 한 후에 사용하시면 됩니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-27.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

- Cloud Log Analytics에서 인증 로그 확인
{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-30.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 주의사항
{% include warning.html title=&quot;접속 오류&quot; content=&quot;SSL VPN이 연결된 상태에서 새로운 서버를 생성하고 접속을 시도하면 아래와 같은 오류 메시지가 뜨면서 서버 접속이 되지 않습니다.  이때는 SSL VPN의 연결을 끊었다가 다시 연결해야 새로 생성한 서버에 접속할 수 있습니다.&quot; %}

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_23.png&quot; width=&quot;700&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 삭제
삭제를 원할 경우 SSL VPN을 선택하고 상단의 [삭제] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-28.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

하지만, 바로 삭제가 되지 않고 다음과 같이 &quot;Route Table에서 Target으로 지정된 Route 정보를 모두 삭제해야 삭제가 가능합니다&quot;라는 메시지가 뜹니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_30.png&quot; width=&quot;500&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[VPC] - [Route Table]에서 해당 VPC의 Private Subnet을 선택하고 [Routes 설정] 버튼을 클릭해서 등록된 설정을 확인하고 [X] 버튼을 클릭해서 설정을 삭제합니다. 
Route Table 정보를 삭제한 후에 SSL VPN을 삭제하시면 됩니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-29.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## 참고 URL
1. Ncloud SSL VPN 개요
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/sslvpn-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/sslvpn-overview&lt;/a&gt;

2. Ncloud SSL VPN 사용 가이드 - VPC
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/sslvpn-start-vpc&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/sslvpn-start-vpc&lt;/a&gt;
</description>
            <pubDate>Wed, 26 Jul 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/security/ncloud_security_ssl_vpn_vpc_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/security/ncloud_security_ssl_vpn_vpc_guide.html</guid>
            
            <category>vpc</category>
            
            <category>ssl</category>
            
            <category>vpn</category>
            
            
        </item>
        
        <item>
            <title>Rocky Linux에서 Apache SSL 인증서 설정하는 방법</title>
            <description>## 개요
Ncloud (네이버 클라우드) Rocky Linux (록키 리눅스) 서버에 Apache 웹서버를 설치하고, HTTPS 접속을 위한 SSL 인증서 설정하고, HTTP로 접속 시에 HTTPS로 리다이렉트하는 방법까지 정리해보겠습니다. 

## 테스트 환경
테스트에 사용할 서버 환경은 다음과 같습니다.

{% include callout_v2.html type=&quot;secondary&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; OS: Rocky Linux 8.6 &lt;br /&gt;
&amp;#8259; 웹서버: Apache 2.4 &lt;br /&gt; 
&amp;#8259; 테스트 사이트:  rocky-https-test.com
&quot; %}

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-00.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

## 패키지 업데이트
우선 패키지 관련한 보안-버그 수정 사항만 최소한으로 업데이트를 해보겠습니다.

``` bash
~# dnf -y upgrade-minimal
```
{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
[**dnf upgrade-minimal**]과 [**dnf update-minimal**]의 차이점에 대해 [**man dnf**] 명령어로 매뉴얼을 살펴보면 Rocky Linux에서 패키지 업데이트를 위한 기본 명령어는 [**dnf upgrade-minimal**]이며, [**dnf update-minimal**]는 더 이상 사용되지 않는 별칭이라고 합니다.
&quot; %}

``` bash
~# man dnf
#--- 중략 ---#
Upgrade-Minimal Command
       Command: upgrade-minimal
       Aliases: up-min
       Deprecated aliases: update-minimal
```

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}


## Apache 웹서버 설치

- **Apache 버전 확인**  
[**Rocky Linux 8.6**]에서 기본으로 지원하는 Apache 버전을 확인해보면 [**Apache 2.4**]인 것을 확인할 수 있습니다.

``` bash
~# dnf module list httpd
```

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

- **Apache 2.4 설치**  

``` bash
~# dnf -y install httpd
```

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

- **Apache 실행, 상태 확인**  
설치를 마쳤으면 Apache를 실행하고 상태를 확인합니다.

``` bash
~# systemctl start httpd
~# systemctl status httpd
```

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

## 테스트용 웹사이트 생성
테스트에 필요한 웹사이트 홈 디렉토리와 웹페이지를 생성합니다.

``` bash
~# mkdir -p  /ncloud/data/www/rocky-https-test.com/
~# vim /ncloud/data/www/rocky-https-test.com/index.html
```
``` html
&lt;!doctype html&gt;
&lt;html lang=&quot;kr&quot;&gt;
 &lt;head&gt;
  &lt;meta charset=&quot;UTF-8&quot;&gt;
  &lt;title&gt;Rocky Linux HTTPS Test Site&lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;
    &lt;h1&gt;Rocky Linux HTTPS Test Site&lt;/h1&gt;
 &lt;/body&gt;
&lt;/html&gt;
```
{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

## Apache 환경 설정 파일 생성
rocky-https-test.com 웹사이트에 대한 Apache 환경 설정 파일을 생성하고, HTTP 접속에 필요한 80 포트용 설정을 추가합니다.

``` bash
~# vim /etc/httpd/conf.d/rocky-https-test.com.conf
```

``` apache
&lt;VirtualHost *:80&gt;
    ServerName rocky-https-test.com
    DocumentRoot /ncloud/data/www/rocky-https-test.com
    DirectoryIndex index.htm index.html

    CustomLog &quot;/var/log/httpd/rocky-https-test.com-access_log&quot; combined
    ErrorLog  &quot;/var/log/httpd/rocky-https-test.com-error_log&quot;

    &lt;Directory /ncloud/data/www/rocky-https-test.com&gt;
        Options None
        AllowOverride None
        Require all granted
    &lt;/Directory&gt;
&lt;/VirtualHost&gt;
```
{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

- 설정 파일을 저장한 후에 Apache 데몬을 재시작합니다.

``` bash
~# systemctl restart httpd
```

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

## hosts 파일 수정
지금과 같이 테스트용으로 임의 설정한 도메인(**rocky-https-test.com**)으로 접속하게 될 경우에는 hosts 파일을 수정해야 합니다.  
`실제 도메인을 사용할 경우에는 아래 과정이 필요 없기에` [다음 단계로 바로 이동&lt;i class=&quot;fa-solid fa-turn-down&quot;&gt;&lt;/i&gt;](#acg-setting)하시면 됩니다. 

윈도우 10에서 hosts 파일은 C:\Windows\System32\drivers\etc 에 존재하는데 직접 수정할 수가 없으므로 다음과 같은 단계를 거쳐야 합니다.

1. C:\Windows\System32\drivers\etc\hosts 파일을 임의의 작업 폴더 (예: D:\Work)로 복사합니다.
2. 복사한 hosts 파일을 수정해서 123.456.789.123 rocky-https-test.com 처럼 접속할 IP 주소와 도메인을 추가합니다.
3. 수정한 파일을 C:\Windows\System32\drivers\etc 위치로 덮어쓰기 합니다.
4. 덮어쓰기 할 때 관리자 권한이 필요하다는 안내 메시지가 나타나면 [계속] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-ssl-setting-guide-centos-05.png&quot; width=&quot;710&quot; alt=&quot;Ncloud CentOS 서버에 NginX SSL 인증서를 설정하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-ssl-setting-guide-centos-06.png&quot; width=&quot;710&quot; alt=&quot;Ncloud CentOS 서버에 NginX SSL 인증서를 설정하는 방법&quot; caption=&quot;&quot; %}

## ACG (방화벽) 설정 {#acg-setting}
테스트로 생성했던 서버를 선택하고 [ACG 수정] 버튼을 클릭해서 적용된 ACG를 확인합니다.

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-23.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

- ACG 수정 화면에서 현재 적용된 ACG 이름을 확인할 수 있습니다.

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-24.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

- [Server] - [ACG]에서 위에서 확인한 ACG를 선택하고 [ACG 설정]을 클릭합니다.

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-25.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

### 내부 테스트용 ACG 설정
내부 테스트용 설정은 ACG 규칙 설정 화면에서 [**Inbound**] 탭에서 [**myIp**] 버튼을 클릭해서 현재 접속한 PC나 회사 IP를 입력하고, HTTP용 80포트와 HTTPS용 443포트를 추가합니다.

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

### 라이브 서비스용 ACG 설정
라이브 서비스용 설정은 접근 소스에는 [**0.0.0.0/0**]을 입력하고, 마찬가지로 HTTP용 80포트와 HTTPS용 443포트를 추가합니다.

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-10.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

## HTTP 접속 테스트
ACG 설정을 마쳤으면 웹브라우저에 테스트용 사이트의 주소 [**http://rocky-https-test.com**]으로 접속을 해보면 문제 없이 잘 접속되는 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-11.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

## SSL 인증서 설정

### mod_ssl 설치

``` bash
~# dnf -y install mod_ssl
```
{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

- 우선 인증서 저장용 디렉토리를 생성합니다.

``` bash
~# mkdir -p /root/ssl/
```

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-13.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

### SSL 테스트 인증서 생성
여기서는 테스트용 인증서를 생성해서 사용하게 되는데, 정식 서비스의 경우 SSL 인증서 발급 기관에서 정식 인증서를 발급 받아 사용하게 됩니다.  
정식 인증서를 사용하는 경우에는 테스트 인증서 생성 단계는 건너띄고 다음 단계로 이동하시면 되겠습니다.

``` bash
~# openssl req -newkey rsa:2048 \
-nodes -keyout /root/ssl/rocky-https-test.com.key \
-x509 -days 365 -out /root/ssl/rocky-https-test.com.crt
```
{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-14.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

- 인증서 파일이 제대로 생성되었는지 확인합니다.

``` bash
~# ls -al /root/ssl/
```
{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

### HTTPS용 환경 설정 추가
앞에서 생성했던 환경 설정 파일 [**rocky-https-test.com.conf**]에 HTTPS용 설정을 추가합니다.

``` bash
~# vim /etc/httpd/conf.d/rocky-https-test.com.conf
```
``` apache
&lt;VirtualHost *:443&gt;
    ServerName rocky-https-test.com
    DocumentRoot /ncloud/data/www/rocky-https-test.com
    DirectoryIndex index.htm index.html

    CustomLog &quot;/var/log/httpd/rocky-https-test.com-ssl-access_log&quot; combined
    ErrorLog  &quot;/var/log/httpd/rocky-https-test.com-ssl-error_log&quot;

    SSLEngine on
    SSLProtocol -all +TLSv1.2 +TLSv1.3 
    SSLHonorCipherOrder on
    SSLCipherSuite PROFILE=SYSTEM

    SSLCertificateFile /root/ssl/rocky-https-test.com.crt
    SSLCertificateKeyFile /root/ssl/rocky-https-test.com.key

    &lt;Directory /ncloud/data/www/rocky-https-test.com&gt;
        Options None
        AllowOverride None
        Require all granted
    &lt;/Directory&gt;
&lt;/VirtualHost&gt;
```
{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-16.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

{% include callout-v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;
- **SSLProtocol**: SSL Protocol에 대한 설정은 [TLS v1.2], [TLS v1.3] 만 허용하고, 나머지 Protocol은 모두 거부하도록 설정했습니다. &lt;br /&gt;
- **정식 인증서**에서는 [SSLCertificateFile], [SSLCertificateKeyFile] 외에도 [SSLCertificateChainFile], [SSLCACertificateFile] 등의 키 설정이 필요하게 되는데, 자세한 내용은 인증서 발급 대행사에서 인증서를 발급 받을 때 포함되어 있는 가이드 문서를 참고하시면 됩니다.
&quot; %}
&lt;br /&gt;
- 설정 파일을 저장한 후에 Apache 데몬을 재시작합니다.

``` bash
~# systemctl restart httpd
```

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

## HTTPS 접속 테스트
설정을 마쳤으면 웹브라우저에서 HTTPS로 [https://rocky-https-test.com]에 접속을 해보면 문제 없이 잘 접속되는 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-17.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

### 인증서 확인
HTTPS로 테스트 사이트에 접속 후에 인증서를 확인해보면 위에서 테스트로 생성했던 정보가 제대로 설정되어 있는 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-21.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-22.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

## HTTP 접속 시 HTTPS로 리다이렉트
이제 HTTPS 설정까지 마쳤으니 HTTP로 접속하는 경우에 HTTPS로 리다이렉트 시키는 설정을 적용해보겠습니다.  

### 방법 - 1
첫번째 방법은 [**Redirect**] 옵션을 이용하는 방법입니다.  
앞에서 설정한 HTTP용 환경 설정에서 [**ServerName**]을 제외한 다른 항목들은 모두 삭제하거나 주석처리한 후에 리다이렉트 설정을 추가합니다.

``` bash
~# vim /etc/httpd/conf.d/rocky-https-test.com.conf
```
``` apache
&lt;VirtualHost *:80&gt;
    ServerName rocky-https-test.com

    Redirect permanent / https://rocky-https-test.com/
    # 또는
    # Redirect 301 / https://rocky-https-test.com/
&lt;/VirtualHost&gt;    
```
{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-18.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

### 리다이렉트 여부 확인
웹브라우저에서 [**F12**] 키로 개발자 모드로 변경한 후에 [**http://rocky-https-test.com/**]로 접속을 해보면 아래 스샷처럼 HTTP 301 상태코드를 반환하면서 [**https://rocky-https-test.com/**]로 리다이렉트된 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-19.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

### 방법 - 2
두번째 방법은 [**RewirteRule**] 옵션을 이용하는 방법입니다.  
첫번째 방법이 더 간편하기는 하지만, 리다이렉트 시킬 때 HTTP 상태코드 뿐만 아니라 HTTP Header 값 등 다양한 설정이 필요한 경우에는 [**RewirteRule**]을 이용하는 두번째 방법을 사용해야 합니다.  

``` apache
&lt;VirtualHost *:80&gt;
    ServerName rocky-https-test.com

    RewriteEngine On
    RewriteCond %{HTTPS} !on
    RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
&lt;/VirtualHost&gt; 
```
{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-20.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}



## 참고 URL
1.  Rocky Linux Apache Multiple Site 설정 가이드
	- &lt;a href=&quot;https://docs.rockylinux.org/guides/web/apache-sites-enabled/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.rockylinux.org/guides/web/apache-sites-enabled/&lt;/a&gt;

2.  Rocky Linux Apache with &apos;mod_ssl&apos; 가이드
	- &lt;a href=&quot;https://docs.rockylinux.org/guides/web/mod_SSL_apache/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.rockylinux.org/guides/web/mod_SSL_apache/&lt;/a&gt;</description>
            <pubDate>Thu, 13 Jul 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud-compute-lamp-apache-ssl-setting-rocky-linux-guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud-compute-lamp-apache-ssl-setting-rocky-linux-guide.html</guid>
            
            <category>rocky_linux</category>
            
            <category>lamp</category>
            
            <category>apache</category>
            
            <category>install</category>
            
            
        </item>
        
        <item>
            <title>http 접속 시에 https로 강제 리다이렉트 시키는 방법 - Apache/CentOS</title>
            <description>## 개요
웹사이트 SSL 인증서를 설치하고 https 접속을 유도할 때 http로 접속하면 https로 강제로 리다이렉트 시키는 방법을 사용하는 경우가 많습니다. 웹페이지 소스에서 http 접속 여부를 판단해서 redirect 시키는 방법 등 여러가지 있을 수 있는데 여기서는 Apache 설정으로 쉽게 할 수 있는 방법을 소개합니다.  

SSL 인증서가 설치되어 있다는 가정하에 우선 Linux CentOS에서 설정하는 방법을 확인해보겠습니다.

## 테스트 환경
테스트에 사용한 서버 환경은 다음과 같습니다.

{% include callout_v2.html type=&quot;secondary&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; OS: CentOS 7.8 &lt;br /&gt;
&amp;#8259; 웹서버: Apache 2.4 
&quot; %}

## Apache conf 파일 수정
**/etc/httpd/conf/httpd.conf** 또는 별도로 설정한 **/etc/httpd/conf.d/사이트도메인.conf** 등의 Vritual host에 다음 코드를 추가하고 Apache를 재시작하면 됩니다.

## 방법1 : Redirect 옵션
첫번째 방법은 [**Redirect**] 옵션을 이용하는 방법입니다.  
HTTP 환경 설정에서 [**ServerName**]을 제외한 다른 항목들은 모두 삭제하거나 주석처리한 후에 리다이렉트 설정을 추가합니다.

``` apache
&lt;VirtualHost *:80&gt;
    ServerName 사이트_도메인

    Redirect permanent / https://사이트_도메인/    
&lt;/VirtualHost&gt; 
```

- `301` 리다이렉트: **Redirect** `permanent` / https://사이트_도메인/
- `302` 리다이렉트: **Redirect** / https://사이트_도메인/
- `301` 리다이렉트: **Redirect** `301` / https://사이트_도메인/
- `302` 리다이렉트: **Redirect** `302` / https://사이트_도메인/
- `307` 리다이렉트: **Redirect** `307` / https://사이트_도메인/
- `308` 리다이렉트: **Redirect** `308` / https://사이트_도메인/

## 방법2 : RewirteRule 옵션
두번째 방법은 [**RewirteRule**] 옵션을 이용하는 방법입니다.  
첫번째 방법이 더 간편하기는 하지만, 리다이렉트 시킬 때 HTTP 상태코드 뿐만 아니라 HTTP Header 값 등 다양한 설정이 필요한 경우에는 [**RewirteRule**]을 이용하는 두번째 방법을 사용해야 합니다.  

``` apache
&lt;VirtualHost *:80&gt;
    ServerName 사이트_도메인

    RewriteEngine On
    RewriteCond %{HTTPS} !on
    RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
&lt;/VirtualHost&gt; 
```

위 설정 중에서 [R=301,L] 이 부분에 원하는 상태코드를 입력하면 됩니다. 
- `301` 리다이렉트: RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=`301`,L]
- `302` 리다이렉트: RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=`302`,L]
- `307` 리다이렉트: RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=`307`,L]
- `308` 리다이렉트: RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=`308`,L]

## Apache 재시작
``` bash
~# systemctl restart httpd
```
이렇게 재시작하고 http로 접속을 해보면 https로 전환되는 것을 확인할 수 있습니다.


## SSL 모듈 설치
혹시 Apache에 mod_ssl 가 설치되어 있지 않다면 설치하셔야 합니다.

``` bash
~# yum -y install mod_ssl
```

``` bash
========================================================================
 Package   Arch       Version                 Repository   Size
========================================================================
Installing:
 mod_ssl    x86_64   1:2.4.6-97.el7.centos   updates    114 k

Transaction Summary
========================================================================
Install  1 Package

Total download size: 114 k
Installed size: 224 k

Downloading packages:
mod_ssl-2.4.6-97.el7.centos.x86_64.rpm                    | 114 kB  00:00:00
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : 1:mod_ssl-2.4.6-97.el7.centos.x86_64        1/1
  Verifying  : 1:mod_ssl-2.4.6-97.el7.centos.x86_64        1/1

Installed:
  mod_ssl.x86_64 1:2.4.6-97.el7.centos

Complete!
```

## 참고 URL
1.  http 접속 시에 https로 강제 리다이렉트 시키는 방법 - Apache/Rocky Linux
	- &lt;a href=&quot;/compute/ncloud-compute-server-http-to-https-rocky-linux.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud-compute-server-http-to-https-rocky-linux.html&lt;/a&gt;

2.  http 접속 시에 https로 강제 리다이렉트 시키는 방법 - Apache/Ubuntu
	- &lt;a href=&quot;/compute/ncloud_compute_server_http_to_https_ubuntu.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud_compute_server_http_to_https_ubuntu.html&lt;/a&gt;</description>
            <pubDate>Wed, 12 Jul 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_server_http_to_https_centos.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_server_http_to_https_centos.html</guid>
            
            <category>apache</category>
            
            <category>centos</category>
            
            
        </item>
        
        <item>
            <title>http 접속 시에 https로 강제 리다이렉트 시키는 방법 - Apache/Ubuntu</title>
            <description>## 개요
웹사이트 SSL 인증서를 설치하고 https 접속을 유도할 때 http로 접속하면 https로 강제로 리다이렉트 시키는 방법을 사용하는 경우가 많습니다.  
웹페이지 소스에서 http 접속 여부를 판단해서 redirect 시키는 방법 등 여러가지 있을 수 있는데 여기서는 Apache 설정으로 쉽게 할 수 있는 방법을 소개합니다.  

SSL 인증서가 설치되어 있다는 가정하에 우선 Linux Ubuntu에서 설정하는 방법을 확인해보겠습니다.

## 테스트 환경
테스트에 사용한 서버 환경은 다음과 같습니다.

{% include callout_v2.html type=&quot;secondary&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; OS: Ubuntu 20.04 &lt;br /&gt;
&amp;#8259; 웹서버: Apache 2.4 
&quot; %}


## SSL 엔진 모듈 활성화
먼저, SSL 엔진 모듈을 활성화 해야 HTTPS 접속을 할 수 있습니다.

``` bash
~# a2enmod ssl
~# systemctl restart apache2
```

## Apache conf 파일 수정
**/etc/apache2/sites-enabled/000-default.conf** 파일의 Vritual host에 다음 코드를 추가하고 Apache를 재시작하면 됩니다.

## 방법1 : Redirect 옵션
첫번째 방법은 [**Redirect**] 옵션을 이용하는 방법입니다.  
HTTP 환경 설정에서 [**ServerName**]을 제외한 다른 항목들은 모두 삭제하거나 주석처리한 후에 리다이렉트 설정을 추가합니다.

``` apache
&lt;VirtualHost *:80&gt;
    ServerName 사이트_도메인

    Redirect permanent / https://사이트_도메인/    
&lt;/VirtualHost&gt; 
```

- `301` 리다이렉트: **Redirect** `permanent` / https://사이트_도메인/
- `302` 리다이렉트: **Redirect** / https://사이트_도메인/
- `301` 리다이렉트: **Redirect** `301` / https://사이트_도메인/
- `302` 리다이렉트: **Redirect** `302` / https://사이트_도메인/
- `307` 리다이렉트: **Redirect** `307` / https://사이트_도메인/
- `308` 리다이렉트: **Redirect** `308` / https://사이트_도메인/

## 방법2 : RewirteRule 옵션
두번째 방법은 [**RewirteRule**] 옵션을 이용하는 방법입니다.  
첫번째 방법이 더 간편하기는 하지만, 리다이렉트 시킬 때 HTTP 상태코드 뿐만 아니라 HTTP Header 값 등 다양한 설정이 필요한 경우에는 [**RewirteRule**]을 이용하는 두번째 방법을 사용해야 합니다.  

### Rewrite 모듈 설치
우선, RewirteRule 옵션을 사용하려면 Rewrite 모듈을 활성화 해야합니다.

``` bash
~# a2enmod rewrite
~# systemctl restart apache2
```

``` apache
&lt;VirtualHost *:80&gt;
	ServerName 사이트_도메인

	RewriteEngine On
	RewriteCond %{HTTPS} !on
	RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
&lt;/VirtualHost&gt;
```

위 설정 중에서 [R=301,L] 이 부분에 원하는 상태코드를 입력하면 됩니다. 
- `301` 리다이렉트: RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=`301`,L]
- `302` 리다이렉트: RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=`302`,L]
- `307` 리다이렉트: RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=`307`,L]
- `308` 리다이렉트: RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=`308`,L]


## Apache 재시작
``` bash
~# systemctl restart apache2
```
이렇게 재시작하고 http로 접속을 해보면 https로 전환되는 것을 확인할 수 있습니다.

## 참고 URL
1.  http 접속 시에 https로 강제 리다이렉트 시키는 방법 - Apache/Rocky Linux
	- &lt;a href=&quot;/compute/ncloud-compute-server-http-to-https-rocky-linux.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud-compute-server-http-to-https-rocky-linux.html&lt;/a&gt;

2.  http 접속 시에 https로 강제 리다이렉트 시키는 방법 - Apache/CentOS
	- &lt;a href=&quot;/compute/ncloud_compute_server_http_to_https_centos.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud_compute_server_http_to_https_centos.html&lt;/a&gt;</description>
            <pubDate>Wed, 12 Jul 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_server_http_to_https_ubuntu.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_server_http_to_https_ubuntu.html</guid>
            
            <category>apache</category>
            
            <category>ubuntu</category>
            
            
        </item>
        
        <item>
            <title>http 접속 시에 https로 강제 리다이렉트 시키는 방법 - Apache/Rocky Linux</title>
            <description>## 개요
Ncloud (네이버 클라우드) Rocky Linux (록키 리눅스) 서버 Apache 웹서버에서 http 접속 시에 https로 강제 리다이렉트 시키는 방법은 크게 2가지가 있는데 각각에 대해 정리해보겠습니다.

## 테스트 환경
테스트에 사용한 서버 환경은 다음과 같습니다.

{% include callout_v2.html type=&quot;secondary&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; OS: Rocky Linux 8.6 &lt;br /&gt;
&amp;#8259; 웹서버: Apache 2.4 &lt;br /&gt; 
&amp;#8259; 테스트 사이트:  rocky-https-test.com
&quot; %}

## 방법1 : Redirect 옵션
첫번째 방법은 [**Redirect**] 옵션을 이용하는 방법입니다.  
HTTP 환경 설정에서 [**ServerName**]을 제외한 다른 항목들은 모두 삭제하거나 주석처리한 후에 리다이렉트 설정을 추가합니다.

``` apache
&lt;VirtualHost *:80&gt;
    ServerName 사이트_도메인

    Redirect permanent / https://사이트_도메인/    
&lt;/VirtualHost&gt;    
```
{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-18.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

- `301` 리다이렉트: **Redirect** `permanent` / https://사이트_도메인/
- `302` 리다이렉트: **Redirect** / https://사이트_도메인/
- `301` 리다이렉트: **Redirect** `301` / https://사이트_도메인/
- `302` 리다이렉트: **Redirect** `302` / https://사이트_도메인/
- `307` 리다이렉트: **Redirect** `307` / https://사이트_도메인/
- `308` 리다이렉트: **Redirect** `308` / https://사이트_도메인/

## 방법2 : RewirteRule 옵션
두번째 방법은 [**RewirteRule**] 옵션을 이용하는 방법입니다.  
첫번째 방법이 더 간편하기는 하지만, 리다이렉트 시킬 때 HTTP 상태코드 뿐만 아니라 HTTP Header 값 등 다양한 설정이 필요한 경우에는 [**RewirteRule**]을 이용하는 두번째 방법을 사용해야 합니다.  

``` apache
&lt;VirtualHost *:80&gt;
    ServerName 사이트_도메인

    RewriteEngine On
    RewriteCond %{HTTPS} !on
    RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
&lt;/VirtualHost&gt; 
```
{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-20.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}

위 설정 중에서 [R=301,L] 이 부분에 원하는 상태코드를 입력하면 됩니다. 
- `301` 리다이렉트: RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=`301`,L]
- `302` 리다이렉트: RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=`302`,L]
- `307` 리다이렉트: RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=`307`,L]
- `308` 리다이렉트: RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=`308`,L]


- 설정 파일을 저장한 후에 Apache 데몬을 재시작합니다.

``` bash
~# systemctl restart httpd
```

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}


## 리다이렉트 여부 확인
웹브라우저에서 [**F12**] 키로 개발자 모드로 변경한 후에 [**http**]로 접속을 해보면 아래 스샷처럼 HTTP 301 상태코드를 반환하면서 [**https**]로 리다이렉트된 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-19.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}


## SSL 모듈 설치
리다이렉트 설정과 관계없이 SSL 인증서를 설정하고 HTTPS 접속을 하려면 [**mod_ssl**]가 설치되어 있어야 하는데, 혹시나 설치되어 있지 않다면 설치하셔야 합니다.

``` bash
~# dnf -y install mod_ssl
```
{% include image.html file=&quot;compute/lamp/ncloud-server-apache-ssl-setting-guide-rocky-linux-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버 Apache에 HTTPS 접속을 위한 SSL 인증서 설정하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1.  Rocky Linux에서 Apache SSL 인증서 설정하는 방법
	- &lt;a href=&quot;/compute/ncloud-compute-lamp-apache-ssl-setting-rocky-linux-guide.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud-compute-lamp-apache-ssl-setting-rocky-linux-guide.html&lt;/a&gt;

2.  Rocky Linux Apache with &apos;mod_ssl&apos; 가이드
	- &lt;a href=&quot;https://docs.rockylinux.org/guides/web/mod_SSL_apache/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.rockylinux.org/guides/web/mod_SSL_apache/&lt;/a&gt;</description>
            <pubDate>Tue, 11 Jul 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud-compute-server-http-to-https-rocky-linux.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud-compute-server-http-to-https-rocky-linux.html</guid>
            
            <category>rocky_linux</category>
            
            <category>lamp</category>
            
            <category>apache</category>
            
            <category>install</category>
            
            
        </item>
        
        <item>
            <title>Jenkins 서버 설치 가이드 | Rocky Linux</title>
            <description>## 개요
Ncloud (네이버 클라우드)의 Classic 환경에서는 Jekins 서버 이미지를 제공하고 있지만, VPC 환경에서는 제공하지 않기에 VPC 환경 록키 리눅스(Rocky Linux) 서버에 Jekins 서버를 설치하는 과정을 정리해보겠습니다.

## Jenkins란
Jenkins는 지속적 통합(Continuous Integration, CI)과 지속적 배포(Continuous Delivery, CD)를 위한 대표적인 도구로 빌드, 테스트, 배포 프로세스를 자동화하여 소프트웨어 품질 향상과 개발 생산성 향상에 도움을 주는 도구입니다.

## Jenkins 특징

- 지속적 통합을 사용하여 빌드, 테스트, 배포 과정을 자동화하여 개발 생산성을 향상할 수 있습니다.
- 자동화 테스트를 통하여 소프트웨어 품질을 향상할 수 있습니다.
- 지속적인 통합을 통해 안정적인 릴리즈를 빠르게 배포할 수 있습니다.


## 설치 과정 

### 패키지 저장소 추가
먼저 Jenkins의 패키지 저장소를 추가합니다.

```bash
~# wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### GPG 키 추카
그런 다음 Jenkins GPG 키를 다음과 같이 추가 합니다.

```bash
~# rpm --import \
    https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

## 패키지 업데이트
그리고, 패키지 관련한 보안-버그 수정 사항만 최소한으로 업데이트를 진행합니다.

``` bash
~# dnf -y upgrade-minimal
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### JAVA 설치
Jenkins를 구동하기 위해서 필요한 JAVA 11 버전을 설치합니다.

```bash
~# dnf -y install java-11-openjdk
```
{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### JAVA 버전 선택 {#java-version-select}
현재 시스템에 설치된 JAVA는 기본 설치 버전인 [**java-1.8.0**]과 좀 전에 설치한 [**java-11**] 이렇게 2가지인데, Jenkins는 [**java-11**] 버전을 사용하므로 다음 명령어로 [**java-11**] 버전이 기본으로 적용되도록 설정을 변경하겠습니다.  
명령어 입력 후 나타난 선택화면에서 [**java-11**] 버전에 해당하는 2번을 입력합니다. 그리고, 변경이 제대로 되었는지 java 버전을 확인합니다.

``` bash
~# update-alternatives --config java
~# java -version
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### Jenkins 설치
모든 준비가 끝났으면 Jenkins를 설치합니다.

```bash
~# dnf -y install jenkins
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### Jenkins 서비스 시작
Jekins 서비스를 시작하고 정상 작동을하고 있는지 다음과 같이 확인합니다.

``` bash
~# systemctl daemon-reload
~# systemctl enable jenkins
~# systemctl start jenkins
~# systemctl status jenkins
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-07.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-08.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}


## 방화벽 ACG 설정
Jekins 서버가 사용하는 기본 포트는 8080 입니다. Ncloud 방화벽 ACG에서 8080 포트를 허용해줍니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}


## 초기 설정

### Port 변경
{% include callout_v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;Jenkins의 기본 접속 Port는 8080인데 /etc/sysconfig/jenkins 의 JENKINS_PORT= 항목에서 변경 할 수 있습니다.&quot; %} 

``` bash
~# vi /etc/sysconfig/jenkins
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### 초기 패스워드 확인

설치가 완료 되면 http://{서버 IP주소}:8080 으로 접속하면 아래의 스크린샷처럼 초기 어드민 패스워드를 입력하는 화면이 나타납니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-11.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

초기 어드민 패스워드는 **/var/lib/jenkins/secrets/initialAdminPassword** 파일에 기록되어 있습니다.  
cat 명령어로 초기 패스워드를 확인합니다.

```bash
~# cat /var/lib/jenkins/secrets/initialAdminPassword
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

## 플러그인 설치
플러그인 설치는 추천 플러그인을 설치하는 옵션과 직접 선택해서 설치하는 옵션이 있습니다. 일단 여기서는 추천 플러그인을 선택하겠습니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

추천 플러그인을 선택하면 아래와 같이 설치과정이 나타납니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-14.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

직접 플러그인을 선택할 경우 아래와 같이 여러 플러그인 중에서 설치하고 싶은 플러그인을 선택할 수 있습니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-15.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}


## 어드민 계정 정보 입력
플러그인 설치를 마치면 아래와 같이 어드민 계정 정보를 입력하게 됩니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-16.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}


## 설치 완료
필요한 정보를 모두 입력하고 나면 마지막으로 Jekins URL을 확정하고 저장합니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-17.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

설치가 모두 끝났습니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-18.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

이제 Jekins에 접속하면 아래와 같은 화면을 확인할 수 있습니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-19.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}


## 오류 상황
위 순서대로 설치를 진행했다면 문제 없이 설치가 되겠지만, 혹시나 설치 중에 중요한 과정을 빠뜨렸을 경우 아래아 같이 [**Jenkins**]를 시작하려고 할 때 오류가 발생하게 됩니다.

```  bash
~# systemctl start jenkins

Job for jenkins.service failed because the control process exited with error code.
See &quot;systemctl status jenkins.service&quot; and &quot;journalctl -xe&quot; for details.
```
{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-20.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### 오류 원인 분석 
위 오류 메시지에서 2가지 방법으로 상세한 오류 내용을 확인해보겠습니다.

- 우선 첫번째 명령 [**systemctl status jenkins.service**]으로 확인을 해보았으나 별다른 내용은 나오지 않습니다.

``` bash
~# systemctl status jenkins.service

● jenkins.service - Jenkins Continuous Integration Server
   Loaded: loaded (/usr/lib/systemd/system/jenkins.service; enabled; vendor preset: disabled)
   Active: failed (Result: exit-code) since Fri 2023-06-30 17:08:01 KST; 1min 25s ago
  Process: 6494 ExecStart=/usr/bin/jenkins (code=exited, status=1/FAILURE)
 Main PID: 6494 (code=exited, status=1/FAILURE)

Jun 30 17:08:01 jenkins-test systemd[1]: Failed to start Jenkins Continuous Integration Server.
Jun 30 17:08:01 jenkins-test systemd[1]: jenkins.service: Service RestartSec=100ms expired, scheduling restart
Jun 30 17:08:01 jenkins-test systemd[1]: jenkins.service: Scheduled restart job, restart counter is at 5.
Jun 30 17:08:01 jenkins-test systemd[1]: Stopped Jenkins Continuous Integration Server.
Jun 30 17:08:01 jenkins-test systemd[1]: jenkins.service: Start request repeated too quickly.
Jun 30 17:08:01 jenkins-test systemd[1]: jenkins.service: Failed with result &apos;exit-code&apos;.
Jun 30 17:08:01 jenkins-test systemd[1]: Failed to start Jenkins Continuous Integration Server.
Jun 30 17:08:03 jenkins-test systemd[1]: jenkins.service: Start request repeated too quickly.
Jun 30 17:08:03 jenkins-test systemd[1]: jenkins.service: Failed with result &apos;exit-code&apos;.
Jun 30 17:08:03 jenkins-test systemd[1]: Failed to start Jenkins Continuous Integration Server.
```
{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-21.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

- 다음으로 [**journalctl -xe**] 명령을 입력해보니 상당히 긴 로그가 나오는데, 차근차근 살펴보다 보니 원인을 찾을 수 있었는데, 그 부분만 발췌해보면 아래와 같습니다.

``` bash
~# journalctl -xe

#------------- 중간 생략 --------------#
-- Unit jenkins.service has begun starting up.
Jun 30 17:37:41 jenkins-test jenkins[7588]: jenkins: invalid Java version: openjdk version &quot;1.8.0_352&quot;
Jun 30 17:37:41 jenkins-test jenkins[7588]: OpenJDK Runtime Environment (build 1.8.0_352-b08)
Jun 30 17:37:41 jenkins-test jenkins[7588]: OpenJDK 64-Bit Server VM (build 25.352-b08, mixed mode)
Jun 30 17:37:41 jenkins-test systemd[1]: jenkins.service: Main process exited, code=exited, status=1/FAILURE
Jun 30 17:37:41 jenkins-test systemd[1]: jenkins.service: Failed with result &apos;exit-code&apos;.
-- Subject: Unit failed
-- Defined-By: systemd
-- Support: https://lists.freedesktop.org/mailman/listinfo/systemd-devel
--
-- The unit jenkins.service has entered the &apos;failed&apos; state with result &apos;exit-code&apos;.
Jun 30 17:37:41 jenkins-test systemd[1]: Failed to start Jenkins Continuous Integration Server.
-- Subject: Unit jenkins.service has failed
-- Defined-By: systemd
-- Support: https://lists.freedesktop.org/mailman/listinfo/systemd-devel
--
-- Unit jenkins.service has failed.
--
-- The result is failed.
#------------- 중간 생략 --------------#
```

{% include callout-v2.html type=&quot;warning&quot; level=&quot;3&quot; content=&quot;
오류 로그 중에서 핵심이 되는 부분은 바로 이 문장입니다. &lt;br /&gt;
**`jenkins: invalid Java version: openjdk version &apos;1.8.0_352&apos;`**
&quot; %}

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-22.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### 오류 해결
즉, **오류 원인은 JAVA 버전**이었습니다. 현재의 Jenkins는 [java-11] 버전을 사용하는데, `[java-11]을 설치하지 않았거나` 현재 시스템에 JAVA가 [java-11] 뿐만 아니라 [java-1.8.0] 버전도 함께 설치되어 있는데, `[java-1.8.0] 버전이 기본 버전으로 설정된 상태여서 생기는 문제`입니다.  

위쪽 설치 단계에서 확인했던 아래 명령으로 JAVA 기본 버전을 [java-11]로 변경해주고 Jenkins를 시작하면 문제가 없습니다. 

- **[JAVA 기본 버전 변경하기 &lt;i class=&quot;fa-solid fa-arrow-up-from-bracket&quot;&gt;&lt;/i&gt;](#java-version-select)**

``` bash
~# update-alternatives --config java
~# java -version
```



## 참고 URL
1. Jeins Redhat Packages
    - &lt;a href=&quot;https://pkg.jenkins.io/redhat-stable/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all&quot;&gt;https://pkg.jenkins.io/redhat-stable/&lt;/a&gt;

2. Jenkins User Documentation
    - &lt;a href=&quot;https://www.jenkins.io/doc/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all&quot;&gt;https://www.jenkins.io/doc/&lt;/a&gt;


</description>
            <pubDate>Mon, 03 Jul 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/dev-tools/ncloud-dev-tools-jenkins-server-install-guide-rocky-linux.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/dev-tools/ncloud-dev-tools-jenkins-server-install-guide-rocky-linux.html</guid>
            
            <category>github</category>
            
            
        </item>
        
    </channel>
</rss>
