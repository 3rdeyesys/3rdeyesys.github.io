<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>3RDEYESYSTEM Technical Documentations</title>
        <description>써드아이시스템(3rdeyesys) 기술문서 사이트입니다 - Ncloud 프리미엄 파트너</description>
        <link>https://docs.3rdeyesys.com/</link>
        <atom:link href="https://docs.3rdeyesys.com/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Wed, 03 May 2023 16:47:09 +0900</pubDate>
        <lastBuildDate>Wed, 03 May 2023 16:47:09 +0900</lastBuildDate>
        <generator>Jekyll v4.2.2</generator>
        
        
        <item>
            <title>Linux 스토리지 추가 생성 기본 가이드</title>
            <description>## 개요
네이버 클라우드에서 서버 생성 후에 스토리지를 추가 생성하는 경우가 있는데 이때 사용되는 스토리지는 Block Storage라고 해서 AWS의 EBS(Elastic Block Store)와 유사합니다.

## 스토리지 추가 제약 사항

- 부팅 스토리지가 SSD인 경우, 추가 스토리지로 HDD, SSD 모두 추가할 수 있습니다.
- 부팅 스토리지가 HDD인 경우, HDD, SSD 모두 추가할 수 있으나 SSD 스토리지는 최신 서버에만 추가가 가능합니다. 서버 상세정보의 &apos;SSD 스토리지 추가 여부&apos;가 적용 가능인지 확인해야 합니다.
- `Micro 타입의 서버, Bare Metal 서버는 스토리지를 추가할 수 없습니다.`


## 추가 가능한 최대 사이즈와 개수
스토리지는 **최대 2,000GB**를 지원하며, 서버 1대당 **최대 16개**의 스토리지를 이용할 수 있습니다. (단, Local Disk 서버 타입 및 2017년 1월 23일 이전에 생성된 서버에 대해서는 1,000GB까지 지원됩니다.)


## 리눅스 OS 서버 이미지별 포맷 명령어
리눅스는 OS 즉, 네이버 클라우드에서 제공하는 서버 이미지별로 추가된 스토리지를 포맷하는 명령어가 다릅니다.

{% include callout_v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; CentOS 5.x: mkfs.ext3 /dev/xvdb1 &lt;br /&gt;
&amp;#8259; CentOS 6.x: mkfs.ext4 /dev/xvdb1 &lt;br /&gt;
&amp;#8259; CentOS 7.x: mkfs.xfs /dev/xvdb1 &lt;br /&gt;
&amp;#8259; Rocky Linux: mkfs.xfs /dev/xvdb1 &lt;br /&gt;
&amp;#8259; Ubuntu Server / Desktop: mkfs.ext4 /dev/xvdb1 &lt;br /&gt;
&quot; %}

## ext4 vs XFS 명령어 비교

&lt;div&gt;
&lt;table class=&quot;simple_table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;항목&lt;/th&gt;
      &lt;th&gt;ext4&lt;/th&gt;
      &lt;th&gt;XFS&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;    
    &lt;tr&gt;&lt;td&gt;포맷&lt;/td&gt;&lt;td&gt;mkfs.ext4&lt;/td&gt;&lt;td&gt;mkfs.xfs&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;마운트&lt;/td&gt;&lt;td&gt;mount&lt;/td&gt;&lt;td&gt;mount&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;리사이즈&lt;/td&gt;&lt;td&gt;resize2fs&lt;/td&gt;&lt;td&gt;xfs_growfs&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;복구&lt;/td&gt;&lt;td&gt;e2fsck&lt;/td&gt;&lt;td&gt;xfs_repair&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;라벨 변경&lt;/td&gt;&lt;td&gt;e2label&lt;/td&gt;&lt;td&gt;xfs_admin -L&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;디버깅&lt;/td&gt;&lt;td&gt;debugfs&lt;/td&gt;&lt;td&gt;xfs_db&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;할당량 설정&lt;/td&gt;&lt;td&gt;quota&lt;/td&gt;&lt;td&gt;quota&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;  
&lt;/div&gt;

{% include tip.html content=&quot;xfs_growfs 명령어는 파일 시스템의 크기를 줄일 수는 없고 늘릴 수만 있습니다.&quot; %}

## 참고 URL
1.  Ncloud 블록 스토리지 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/blockstorage-use-vpc&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/blockstorage-use-vpc&lt;/a&gt;</description>
            <pubDate>Wed, 03 May 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_server_storage_add_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_server_storage_add_guide.html</guid>
            
            <category>linux</category>
            
            <category>storage</category>
            
            
        </item>
        
        <item>
            <title>Mysql, MariaDB 환경설정 파일 my.cnf 위치</title>
            <description>## 개요
Ncloud (네이버 클라우드)에서 Mysql MariaDB 환경설정 파일인 my.cnf 파일이 CentOS, Ubuntu, Rocky Linux OS 별로 어떤 경로에 위치하고 있는지 정리해보겠습니다.

## CentOS
우선 CentOS 부터 살펴보겠습니다.

### MySQL
MySQL은 **my.cnf** 파일이 **/etc/** 바로 밑에 위치합니다.

``` bash
/etc/my.cnf
```

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-centos-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}


### MariaDB
MariaDB에서도 **my.cnf** 파일이 **/etc/** 바로 밑에 위치하기는 하지만, 실제로 **/etc/my.cnf** 파일을 열어보면 다음과 같이 **my.cnf.d** 디렉토리에 있는 파일을 include만 하게 되어 있습니다.  
즉, **my.cnf** 파일에 설정을 추가해도 되지만 가능하면 하위의 각각의 설정 파일에 추가하는 것이 좋습니다.

``` bash
/etc/my.cnf.d/server.cnf
```

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-centos-01.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-centos-02.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

- **/etc/my.cnf.d/server.cnf** 파일을 열어 보면 다음과 같이 구성 되어 있습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-centos-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

## Ubuntu 
Ubuntu에서는 **my.cnf** 파일이 **/etc/mysql** 밑에 위치합니다.

``` bash
/etc/mysql/my.cnf
```

### MySQL
Ubuntu 20.04, MySQL 8.0에서는 아래의 3가지 파일을 주로 확인하면 되겠습니다.

``` bash
/etc/mysql/my.cnf
/etc/mysql/mysql.conf.d/mysql.cnf
/etc/mysql/mysql.conf.d/mysqld.cnf
```

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-ubuntu-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

먼저 **/etc/mysql/my.cnf** 파일을 열어 보면 다음과 같이 **conf.d** 디렉토리와 **mysql.conf.d** 디렉토리에 있는 파일을 include 하도록 되어 있습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-ubuntu-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

**/etc/mysql/** 디렉토리의 파일과 서브 디렉토리 구조를 살펴보면 다음과 같습니다. 여기서 **mysql.conf.d** 디렉토리에 있는 **mysql.cnf** 파일과 **mysqld.cnf** 파일을 살펴보겠습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-ubuntu-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

- **/etc/mysql/mysql.conf.d/mysql.cnf**  
이 파일을 열어 보면 다음과 같이 [**The MySQL database client configuration file**]이라고 되어 있습니다.  
즉, **MySQL Client 관련 설정**은 이곳에 지정하면 되겠습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-ubuntu-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

- **/etc/mysql/mysql.conf.d/mysqld.cnf**  
이 파일을 열어 보면 다음과 같이 [**The MySQL database server configuration file**]이라고 되어 있습니다.  
즉, **MySQL Server 관련 설정**은 이곳에 지정하면 되겠습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-ubuntu-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

### MariaDB
Ubuntu 20.04, MariaDB 10.3에서는 아래의 4가지 파일을 주로 확인하면 되겠습니다.

``` bash
/etc/mysql/my.cnf
/etc/mysql/mariadb.cnf
/etc/mysql/mariadb.conf.d/50-client.cnf
/etc/mysql/mariadb.conf.d/50-server.cnf
```

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-ubuntu-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

그런데, **/etc/mysql/my.cnf** 파일의 정보를 확인해보면 결국 **/etc/mysql/mariadb.cnf** 파일의 심볼릭 링크라는 것을 알 수 있습니다. 그러므로 **/etc/mysql/mariadb.cnf** 파일을 살펴보겠습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-ubuntu-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

**/etc/mysql/mariadb.cnf** 파일을 열어 보면 다음과 같이 **conf.d** 디렉토리와 **mariadb.conf.d** 디렉토리에 있는 파일을 include 하도록 되어 있습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-ubuntu-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

**/etc/mysql/** 디렉토리의 파일과 서브 디렉토리 구조를 살펴보면 다음과 같습니다.  
여기서 **mariadb.conf.d** 디렉토리에 있는 **50-client.cnf** 파일과 **50-server.cnf** 파일을 살펴보겠습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-ubuntu-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

- **/etc/mysql/mariadb.conf.d/50-client.cnf**  
이 파일을 열어 보면 다음과 같이 [**This group is read by the client library**]이라고 되어 있습니다.  
즉, **MariaDB Client 관련 설정**은 이곳에 지정하면 되겠습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-ubuntu-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

- **/etc/mysql/mariadb.conf.d/50-server.cnf**  
이 파일을 열어 보면 다음과 같이 [**These groups are read by MariaDB server**]이라고 되어 있습니다.  
즉, **MariaDB Server 관련 설정**은 이곳에 지정하면 되겠습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-ubuntu-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

## Rocky Linux

### MySQL
Rocky Linux도 MySQL은 my.cnf 파일이 /etc/ 바로 밑에 위치합니다.

``` bash
/etc/my.cnf
```

{% include image.html file=&quot;database/ncloud-database-mysql-config-my-cnf-rocky-linux-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}


### MariaDB
Rocky Linux에서는 **mariadb-server.cnf** 파일입니다.

``` bash
/etc/my.cnf.d/mariadb-server.cnf
```

MariaDB에서도 **my.cnf** 파일이 **/etc/** 바로 밑에 위치하기는 하지만, 실제로 **/etc/my.cnf** 파일을 열어보면 다음과 같이 **my.cnf.d** 디렉토리에 있는 파일을 include만 하게 되어 있습니다.  
즉, **my.cnf** 파일에 설정을 추가해도 되지만 가능하면 하위의 각각의 설정 파일에 추가하는 것이 좋습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-rocky-linux-01.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-rocky-linux-02.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

- **/etc/my.cnf.d/mariadb-server.cnf** 파일을 열어 보면 다음과 같이 구성 되어 있습니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-config-my-cnf-rocky-linux-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Mysql, mariadb 환경설정 파일 my.cnf 위치 안내&quot; caption=&quot;&quot; %}

## 참고 URL
1. Ncloud MySQL 서버 이미지 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/database-database-1-1&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/database-database-1-1&lt;/a&gt;

2. Ncloud MariaDB 서버 이미지 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/database-database-7-1&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/database-database-7-1&lt;/a&gt; 
</description>
            <pubDate>Fri, 28 Apr 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud_database_mysql_mariadb_config_my_cnf.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud_database_mysql_mariadb_config_my_cnf.html</guid>
            
            <category>database</category>
            
            <category>mysql</category>
            
            <category>mariadb</category>
            
            <category>centos</category>
            
            <category>ubuntu</category>
            
            <category>rocky_linux</category>
            
            
        </item>
        
        <item>
            <title>VPC 환경에서 SSL VPN 설정하고 접속하는 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드) 외부에서 내부에 구성된 네트워크로 암호화된 보안 접속 통신을 제공하는 서비스인 SSL VPN을 VPC 환경에서 설정하고, 서버에 접속하는 방법에 대해 정리해보겠습니다.

## SSL VPN이란?
- VPN은 가상 사설망(Virtual Private Network)의 약자로, 외부에서 접근할 수 없는 사설망에 내 PC나 네트워크를 연결시키는 방법을 말합니다.
- 사설망과의 연결은 가상 터널을 통해 이루어지며, 이 가상 터널을 SSL 암호화로 보호하는 것이 SSL VPN입니다.
- 가상 터널을 통해 사설망과 연결된 사용자 PC는 사설망의 라우팅 및 ACL 정책에 따라 내부 서버에 접근할 수 있습니다.

## SSL VPN 서비스 위치
Ncloud 콘솔에서 SSL VPN의 위치는 [**Services**] - [**Security**] - [**SSL VPN**]에 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## SSL VPN 생성
[SSL VPN 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

우선 접근할 서버가 속해 있는 VPC를 선택하고, 등록 가능한 접속 ID 개수에 따른 상품을 선택합니다.  
VPC 환경에서는 3, 5, 10, 20, 30, 50, 100, 200, 300, 400, 500개 상품 중에서 선택 가능합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-03.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

VPC 환경의 SSL VPN은 콘솔에서 자동으로 생성하는 것이 아니라 `생성 요청을 하면 Ncloud 담당자가 직접 생성하고 결과를 안내 받는 구조`로 되어 있습니다. 
생성 완료까지 걸리는 시간은 **약 10~20분 이내** 이며, 생성이 완료되면 SSL VPN 상태가 [운영중]으로 변경되고, 안내 메일이 도착합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-04.png&quot; width=&quot;485&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## SSL VPN 생성 완료 {#connection-url-check}
SSL VPN 생성이 완료되면 아래와 같이 [**IP POOL**]과 [**접속 URL**] 정보를 확인할 수 있는데 SSL VPN Agent 접속 시에 중요한 정보이니 잘 확인해야 합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-05.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 사용자 설정
SSL VPN에 접속할 사용자 정보를 설정합니다.  리스트에서 SSL VPN을 선택하고 [사용자 설정] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-06.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자 정보는 ID, Passowrd, Email, SMS 등을 입력하고 [추가] 버튼을 클릭합니다.  
VPC 환경은 이차인증이 필수이므로  SMS와 Email 정보를 함께 입력합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-07.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자가 추가되면 SSL VPN 정보에 사용자 계정 수(등록된 ID 수)에 숫자가 표시되는 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## Route Table 설정
네트워크 설정에서는 우선 접속할 서버가 속해 있는 VPC Subnet의 Route Table에 SSL VPN으로 접근할 수 있게 SSL VPN의 [**IP POOL**]을 등록해야 합니다.  

- **접속할 서버 정보 확인**  
아래와 같이 접속할 서버의 정보에서 VPC와 Subnet을 확인합니다. 여기서는 Private Subnet에 생성한 서버에 접속할 예정입니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[**VPC**] - [**Route Table**]에서 해당 VPC의 Private Subnet을 선택하고 [**Routes 설정**] 버튼을 클릭합니다.  
(Public Subnet에 생성한 서버에 접근해야 할 경우에는 public-table을 선택하고 설정하시면 됩니다.)

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-10.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[**Destination**]에 생성된 SSL VPN 정보에서 확인한 [**IP POOL**] 정보를 등록하고, [**Target Type**]은 SSLVPN을 선택, [**Target Name**]은 위에서 생성한 SSL VPN 이름을 선택하고 [생성] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-11.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## ACG 설정
다음으로 서버에 적용된 ACG에 SSL VPN의 [**IP POOL**]을 등록해야 합니다.  
우선 SSL VPN을 통해서 접속할 서버를 선택하고 [**ACG 수정**] 버튼을 클릭해서 적용된 ACG를 확인합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-12.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

ACG 수정 화면에서 현재 적용된 ACG 이름을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[**Server**] - [**ACG**]에서 위에서 확인한 ACG를 선택하고 [ACG 설정]을 클릭합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-14.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

ACG 규칙 설정 화면에서 위에서 확인했던 [**IP POOL**]을 접근 소스에 입력하고, 필요한 포트들을 등록합니다. 
기본이 되는 프로토콜과 포트는 리눅스 서버 접속용 TCP 22, 윈도우 서버 접속용 TCP 3389, Ping 확인용 ICMP 등입니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-15.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 다운로드
SSL VPN 접속을 위한 Agent를 다운로드 합니다.  

- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/sslvpn-download&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;SSL VPN Agent 다운로드&lt;/a&gt;

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-16.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## Agent 접속
Agent 프로그램, BIG-IP Edge Client를 설치하고 실행하면 다음과 같은 화면을 볼 수 있습니다. 
서버 선택 창에 위에서 생성했던 SSL VPN 정보에서 확인했던 [**접속 URL**] 주소를 입력하고, [다음] 버튼을 클릭합니다.

{% include tip.html content=&quot;
[접속 URL 확인하는 방법 &lt;i class=&apos;fa-solid fa-arrow-up-from-bracket&apos;&gt;&lt;/i&gt;](#connection-url-check)&lt;br /&gt;
&quot; %}

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-17.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

주소 변경 후에 [연결] 버튼을 클릭하면 로그인 화면이 나타나는데 위에서 설정했던 VPN 접속용 아이디와 Password를 입력하고 [로그온] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_20.png&quot; width=&quot;650&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

그리고 도착한 OTP 인증 번호를 입력합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-18.png&quot; width=&quot;710&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

SSL VPN에 제대로 연결이 되었는지 확인하기 위해서 cmd 창을 띄워서 ipconfig 명령어를 입력하면 아래 화면처럼 SSL VPN 주소로 설정된 어탭터에  [**IP POOL**]에 해당하는 IP가 할당된 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-19.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 서버 접속
이제 SSL VPN이 연결된 상태에서 서버에 접속해보겠습니다.  
PuTTY 를 실행하고 접속할 서버의 IP를 입력합니다.  
이때 서버 IP는 콘솔에 있는 서버 정보에서 **비공인 IP**에 표시되는 IP를 입력하면 됩니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-20.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 기타 설정
SSL VPN Agent에는 몇가지 추가 기능이 있는데 아래에서 확인해보겠습니다.

### 트래픽 그래프
Agent 창에서 [그래프 보기] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-21.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


여기서는 SSL VPN이 연결된 상태의 트래픽을 그래프로 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-22.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


다음으로 [상세 보기] 버튼을 클릭하면 접속 세부 정보, 로그, 통계, 알림, 라우팅 테이블, IP설정 등의 정보를 확인할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-23.png&quot; width=&quot;777&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}



## 설정 변경
처음에 설정한 접속 가능 ID 개수를 변경하고 싶을 경우 SSL VPN을 선택하고 [SSL VPN 설정 변경] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-24.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

### ID 개수 변경
3, 5, 10, 20, 30, 50, 100, 200, 300, 400, 500개 상품 중에서 원하는 개수로 변경할 수 있습니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-25.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

### 인증 로그 수집
Ncloud SSN VPN은 이용자가 SSN VPN에 접속 인증한 로그를 수집할 수 있습니다. [**설정**] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-26.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

인증 로그 수집을 활성화 하면 [**Cloud Log Analytics**]에 로그를 전달하여 저장합니다. 해당 상품을 미사용중이면 Cloud Log Analytics 상품 이용 신청을 한 후에 사용하시면 됩니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-27.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

- Cloud Log Analytics에서 인증 로그 확인
{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-30.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 주의사항
{% include warning.html title=&quot;접속 오류&quot; content=&quot;SSL VPN이 연결된 상태에서 새로운 서버를 생성하고 접속을 시도하면 아래와 같은 오류 메시지가 뜨면서 서버 접속이 되지 않습니다.  이때는 SSL VPN의 연결을 끊었다가 다시 연결해야 새로 생성한 서버에 접속할 수 있습니다.&quot; %}

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_23.png&quot; width=&quot;700&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 삭제
삭제를 원할 경우 SSL VPN을 선택하고 상단의 [삭제] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-28.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

하지만, 바로 삭제가 되지 않고 다음과 같이 &quot;Route Table에서 Target으로 지정된 Route 정보를 모두 삭제해야 삭제가 가능합니다&quot;라는 메시지가 뜹니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_30.png&quot; width=&quot;500&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[VPC] - [Route Table]에서 해당 VPC의 Private Subnet을 선택하고 [Routes 설정] 버튼을 클릭해서 등록된 설정을 확인하고 [X] 버튼을 클릭해서 설정을 삭제합니다. 
Route Table 정보를 삭제한 후에 SSL VPN을 삭제하시면 됩니다.

{% include image.html file=&quot;security/ncloud-security-ssl-vpn-vpc-guide-29.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## 참고 URL
1. Ncloud SSL VPN 개요
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/sslvpn-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/sslvpn-overview&lt;/a&gt;

2. Ncloud SSL VPN 사용 가이드 - VPC
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/sslvpn-start-vpc&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/sslvpn-start-vpc&lt;/a&gt;
</description>
            <pubDate>Thu, 27 Apr 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/security/ncloud_security_ssl_vpn_vpc_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/security/ncloud_security_ssl_vpn_vpc_guide.html</guid>
            
            <category>vpc</category>
            
            <category>ssl</category>
            
            <category>vpn</category>
            
            
        </item>
        
        <item>
            <title>Rocky Linux에서 NginX 설치, 설정하는 방법</title>
            <description>## 개요
Ncloud (네이버 클라우드) Rocky Linux (록키 리눅스) 서버에 NginX 최신 버전을 Package로 설치하고 기본 설정을 하는 방법에 대한 내용을 정리해보겠습니다.  


## 서버 환경

{% include callout_v2.html type=&quot;secondary&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; OS: Rocky Linux 8.6 &lt;br /&gt;
&amp;#8259; NginX: NginX 1.23.1 &lt;br /&gt; 
&amp;#8259; 테스트 사이트: nginx-test.com
&quot; %}

## 서버 준비
Ncloud 콘솔에서 Rocky Linux 8.6 서버를 아래와 같이 준비했습니다.

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 설치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## 패키지 업데이트
우선 패키지 업데이트를 해보겠습니다.

``` bash
~# dnf -y update
```
{% include note.html title=&quot;dnf&quot; content=&quot;Dandified YUM의 약자인 dnf는 기존의 yum 패키지 관리자가 갖고 있던 여러 단점들을 수정, 업그레이드해서 
Fedora 18 이후 버전에서 사용되고 있으며, Rocky Linux도 마찬가지로 dnf를 기본 패키지 관리자로 사용하고 있습니다. 물론 호환성을 위해서 yum 명령어도 사용할 수 있습니다.
&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## EPEL 저장소 패키지 설치
다음으로 epel-release 저장소 패키지를 설치하겠습니다.

``` bash
~# dnf -y install epel-release
```

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## NginX 버전 선택
설치할 NginX 버전 버전을 선택합니다.

### NginX 버전 리스트
우선, Ncloud Rocky Linux 8.6에서 지원하는 NginX 버전을 확인합니다.  
리스트를 살펴보면 1.14가 기본 버전인 것을 알 수 있습니다.

``` bash
~# dnf module list nginx
```

- nginx 1.14 (default)
- nginx 1.16
- nginx 1.18
- nginx 1.20
- nginx mainline

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### 버전 활성화 정보 초기화
다음으로 위에서 확인했던 nginx 버전 활성화 정보를 초기화 합니다. 현재 활성화 된 버전이 존재하느냐에 따라 나타나는 메시지가 다릅니다.

``` bash
~# dnf module reset nginx
```

- 활성화 된 버전이 없을 때
{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

- 활성화 된 버전이 있을 때
{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### mainline 버전 활성화
최신 버전인 mainline 버전을 활성화합니다.

``` bash
~# dnf module enable nginx:mainline
```

{% include callout_v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;NginX는 stable, mainline 두가지 버전이 있습니다. 
NginX의 공식 설명에 따르면 버그 수정이나 보안 패치 등은 항상 mainline 버전에 먼저 적용되기 때문에 mainline을 사용하는 것을 추천한다고 합니다. &lt;br /&gt;
stable 버전을 사용하는 주된 경우는 **third-party 모듈**을 사용하고 있어서 신규 버전에서 **호환성 문제**가 발생할 가능성이 걱정될 때라고 합니다.&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}


## NginX 설치
NginX를 설치합니다. 설치된 버전은 다음과 같습니다.

``` bash
~# dnf -y install nginx
~# nginx -v
```
- NginX: 1.23.1

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## 디렉토리 설정
다음으로 홈으로 사용할 디렉토리를 생성하고, 해당 디렉토리의 소유권을 설정하겠습니다.  
그리고, NginX가 정상 작동하는지 확인해보기 위해 설치시에 포함된 index.html을 포함한 파일들을 홈 디렉토리로 복사합니다.

``` bash
# 테스트 사이트 홈 디렉토리 생성
~# mkdir -p /ncloud/data/www/nginx-test/

# 해당 디렉토리에 nginx에 권한 부여
~# chown -R nginx:nginx /ncloud/data/www/nginx-test

# nginx 샘플 페이지를 사이트 디렉토리로 복사
~# cp /usr/share/nginx/html/*.* /ncloud/data/www/nginx-test/

# 복사된 파일들 확인
~# ls -al /ncloud/data/www/nginx-test/
```
{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}



## 환경 설정

### 설정 파일 위치
NginX 환경 설정 파일의 위치는 **/etc/nginx/** 디렉토리입니다. **tree** 명령으로 해당 디렉토리에서 **conf**와 관련된 파일 리스트와 디렉토리 구조를 확인하면 다음과 같습니다.

``` bash
~# tree -P *conf* /etc/nginx/
```

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-16.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### 기본 설정 파일
위에서 확인할 수 있는 파일들 중에서 기본 환경 설정 파일은 **/etc/nginx/nginx.conf** 입니다.  
**nginx.conf** 파일을 열어보면 아래와 같이 **server {...}**로 시작되는 사이트 설정에 관련된 부분도 있지만,  
**include /etc/nginx/conf.d/*.conf** 와 같이 **conf.d** 디렉토리에 있는 설정 파일을 모두 불러오도록 되어 있습니다.  

물론, 사이트 설정을 **nginx.conf** 파일에 직접 설정해도 되지만, 여러 개의 사이트를 설정해야 하는 경우도 생각해서 **conf.d 디렉토리**에 사이트 이름별로 환경 설정 파일을 별도로 만들어서 진행하도록 하겠습니다. 

``` bash
~# vi /etc/nginx/nginx.conf
```

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-09.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### 기본 설정 주석 처리
**server {...}** 부분을 모두 주석 처리합니다.

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### 환경 설정 파일 생성
**nginx-test.com** 이라는 도메인의 사이트 설정을 **nginx-test.conf** 설정 파일을 생성해서 저장합니다.

``` bash
~# vi /etc/nginx/conf.d/nginx-test.conf
```

``` nginx
  server {
    listen    80;
    listen    [::]:80;

    # 사이트 도메인 설정
    server_name    nginx-test.com www.nginx-test.com;

    # 홈 디렉토리, 기본 문서 설정
    root      /ncloud/data/www/nginx-test;
    index     index.html index.htm;

    # 404 error 페이지 설정
    error_page 404 /404.html;
      location = /404.html {
    }

    # 50x error 페이지 설정
    error_page 500 502 503 504 /50x.html;
      location = /50x.html {
      root    /ncloud/data/www/nginx-test;
    }

    # .htaccess 파일 접근 금지 설정
    location ~ /\.ht {
      deny    all;
    }
}
```

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}


## NginX 실행
설정을 모두 마쳤으면 NginX를 시작하고 상태를 확인합니다.

``` bash
~# systemctl enable nginx
~# systemctl start nginx
~# systemctl status nginx
```
{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## hosts 파일 수정
지금과 같이 테스트용으로 임의 설정한 도메인(**nginx-test.com**)으로 접속하게 될 경우에는 hosts 파일을 수정해야 합니다.  
`실제 도메인을 사용할 경우에는 아래 과정이 필요 없기에` [다음 단계로 바로 이동&lt;i class=&quot;fa-solid fa-turn-down&quot;&gt;&lt;/i&gt;](#https-access-test)하시면 됩니다. 

윈도우 10에서 hosts 파일은 C:\Windows\System32\drivers\etc 에 존재하는데 직접 수정할 수가 없으므로 다음과 같은 단계를 거쳐야 합니다.

1. C:\Windows\System32\drivers\etc\hosts 파일을 임의의 작업 폴더 (예: D:\Work)로 복사합니다.
2. 복사한 hosts 파일을 수정해서 123.456.789.123 nginx-test.com 처럼 접속할 IP 주소와 도메인을 추가합니다.
3. 수정한 파일을 C:\Windows\System32\drivers\etc 위치로 덮어쓰기 합니다.
4. 덮어쓰기 할 때 관리자 권한이 필요하다는 안내 메시지가 나타나면 [계속] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-14.png&quot; width=&quot;745&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-ssl-setting-guide-centos-05.png&quot; width=&quot;710&quot; alt=&quot;Ncloud CentOS 서버에 NginX SSL 인증서를 설정하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-ssl-setting-guide-centos-06.png&quot; width=&quot;710&quot; alt=&quot;Ncloud CentOS 서버에 NginX SSL 인증서를 설정하는 방법&quot; caption=&quot;&quot; %}


## 사이트 접속 {#https-access-test}
NginX가 정상 작동하면 아래와 같이 서버 접속 화면을 확인할 수 있습니다.

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1.  Rocky Linux NginX 설치 기본 가이드
	- &lt;a href=&quot;https://docs.rockylinux.org/guides/web/nginx-mainline/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.rockylinux.org/guides/web/nginx-mainline/&lt;/a&gt;

2.  Rocky Linux NginX Multi Site 설치 가이드
	- &lt;a href=&quot;https://docs.rockylinux.org/guides/web/nginx-multisite/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.rockylinux.org/guides/web/nginx-multisite/&lt;/a&gt;</description>
            <pubDate>Thu, 27 Apr 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud-compute-lemp-nginx-install-setting-rocky-linux-guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud-compute-lemp-nginx-install-setting-rocky-linux-guide.html</guid>
            
            <category>rocky_linux</category>
            
            <category>lemp</category>
            
            <category>nginx</category>
            
            <category>install</category>
            
            
        </item>
        
        <item>
            <title>Classic 환경에서 SSL VPN 설정하고 접속하는 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드) 외부에서 내부에 구성된 네트워크로 암호화된 보안 접속 통신을 제공하는 서비스인 SSL VPN을 Classic 환경에서 설정하고, 서버에 접속하는 방법에 대해 정리해보겠습니다.

## SSL VPN이란?
- VPN은 가상 사설망(Virtual Private Network)의 약자로, 외부에서 접근할 수 없는 사설망에 내 PC나 네트워크를 연결시키는 방법을 말합니다.
- 사설망과의 연결은 가상 터널을 통해 이루어지며, 이 가상 터널을 SSL 암호화로 보호하는 것이 SSL VPN입니다.
- 가상 터널을 통해 사설망과 연결된 사용자 PC는 사설망의 라우팅 및 ACL 정책에 따라 내부 서버에 접근할 수 있습니다.


## SSL VPN 생성
[SSL VPN 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_01.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

우선 등록 가능한 접속 ID 개수에 따른 상품을 선택합니다. Classic 환경에서는 3개, 5개, 10개 상품만 선택 가능합니다. 
다음으로 인증 방식은 ID/PW 만으로 접속하는 일차인증과 OTP까지 사용하는 이차 인증 중에서 원하는 방식을 선택합니다. 
그리고 이차인증을 선택했을 경우에는 SMS와 Email 어떤 것을 이용할 것인지도 선택하게 됩니다.

{% include callout_v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; 인증방식과 OTP 전송 방식은 SSL VPN 생성 시에 한번 선택하면 변경할 수 없으니 주의해야 합니다. &lt;br /&gt;
&amp;#8259; 만약 변경 하고 싶을 경우에는 SSL VPN을 새로 생성해야 합니다. &lt;br /&gt;
&amp;#8259; Classic 환경에서는 이차인증을 선택하면 별도의 이용요금이 부과됩니다.
&quot; %}


{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_02.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

다음으로 개인정보 수집 및 이용에 동의해야 합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_03.png&quot; width=&quot;700&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

SSL VPN이 생성되면 다음과 같이 리스트에 서 확인 가능하며 여기서 [**SSL VPN IP POOL**]은 뒤쪽에서 네트워크 접근 제한을 설정할 때 필요한 중요한 정보입니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_04.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 사용자 설정
SSL VPN에 접속할 사용자 정보를 설정합니다.  리스트에서 SSL VPN을 선택하고 [사용자 설정] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_05.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자 정보는 ID, Passowrd, Email, SMS 등을 입력하고 [추가] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_06.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자가 추가되면 SSL VPN 정보에 사용자 계정 수(등록된 ID 수)에 숫자가 표시되는 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_07.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## ACG 설정
SSL VPN을 사용하려면 서버에 적용된 ACG에 [**SSL VPN IP POOL**]을 등록해야 합니다.  
우선 SSL VPN을 통해서 접속할 서버를 선택하고 적용된 ACG를 확인합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_08.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[Server] - [ACG]에서 위에서 확인한 ACG를 선택하고 [ACG 설정]을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_09.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

ACG 규칙 설정 화면에서 위에서 확인했던 [**SSL VPN IP POOL**]을 접근 소스에 입력하고, 필요한 포트들을 등록합니다. 
기본이 되는 프로토콜과 포트는 리눅스 서버 접속용 TCP 22, 윈도우 서버 접속용 TCP 3389, Ping 확인용 ICMP 등입니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_10.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 다운로드
SSL VPN 접속을 위한 Agent를 다운로드 합니다.  

- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/security-5-1-windowsdownload&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;윈도우 용 다운로드&lt;/a&gt;
- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/security-5-1-macdownload&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;맥 용 다운로드&lt;/a&gt;

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_11.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## Agent 접속
Agent 프로그램, BIG-IP Edge Client를 설치하고 실행하면 다음과 같은 화면을 볼 수 있습니다.  
Agent에는 Classic 환경 SSL VPN 서버(Ncloud-kr-01)가 기본으로 설정되어 있는데, 혹시 빠져 있다면 [서버 변경] 버튼을 클릭해서 **https://sslvpn-kr-01.ncloud.com**을 입력하고 연결 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_12.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

위에서 설정했던 VPN 접속용 아이디와 Password를 입력하고 [로그온] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_13.png&quot; width=&quot;650&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

OTP 접속도 설정했다면 도착한 인증 번호를 입력합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_14.png&quot; width=&quot;650&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

SSL VPN에 제대로 연결이 되었는지 확인하기 위해서 cmd 창을 띄워서 ipconfig 명령어를 입력하면 아래 화면처럼 SSL VPN 주소로 설정된 어탭터에  [**SSL VPN IP POOL**]에 해당하는 IP가 할당된 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_15.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 서버 접속
이제 SSL VPN이 연결된 상태에서 서버에 접속해보겠습니다.  
PuTTY 를 실행하고 접속할 서버의 IP를 입력합니다.  
이때 서버 IP는 콘솔에 있는 서버 정보에서 **비공인 IP**에 표시되는 IP를 입력하면 됩니다.

{% include important.html title=&quot;IP 입력&quot; content=&quot;이때 혹시나 포트 포워딩이나 공인 IP를 설정하고 그 IP를 입력하는 일이 없도록 주의해야 합니다.&quot; %}


{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_16.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 기타 설정
SSL VPN Agent에는 몇가지 추가 기능이 있는데 아래에서 확인해보겠습니다.

### 트래픽 그래프
Agent 창에서 [그래프 보기] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_17.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

여기서는 SSL VPN이 연결된 상태의 트래픽을 그래프로 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_18.png&quot; width=&quot;560&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

다음으로 [상세 보기] 버튼을 클릭하면 접속 세부 정보, 로그, 통계, 알림, 라우팅 테이블, IP설정 등의 정보를 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_19.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 스펙 변경
처음에 설정한 접속 가능 ID 개수를 변경하고 싶을 경우 SSL VPN을 선택하고 [스펙 변경] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_20.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

3개, 5개, 10개 상품 중에서 원하는 개수로 변경할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_21.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 주의사항
{% include warning.html title=&quot;접속 오류&quot; content=&quot;SSL VPN이 연결된 상태에서 새로운 서버를 생성하고 접속을 시도하면 아래와 같은 오류 메시지가 뜨면서 서버 접속이 되지 않습니다.  이때는 SSL VPN의 연결을 끊었다가 다시 연결해야 새로 생성한 서버에 접속할 수 있습니다.&quot; %}

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_23.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 삭제
삭제를 원할 경우 SSL VPN을 선택하고 상단의 [삭제] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_22.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## 참고 URL
1. Ncloud SSL VPN 개요
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/sslvpn-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/sslvpn-overview&lt;/a&gt;

2. Ncloud SSL VPN 사용 가이드 - Classic
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/sslvpn-start-classic&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/sslvpn-start-classic&lt;/a&gt;
</description>
            <pubDate>Tue, 25 Apr 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/security/ncloud_security_ssl_vpn_classic_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/security/ncloud_security_ssl_vpn_classic_guide.html</guid>
            
            <category>classic</category>
            
            <category>ssl</category>
            
            <category>vpn</category>
            
            
        </item>
        
        <item>
            <title>Classic 환경에서 SSL VPN 설정하고 접속하는 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드) 외부에서 내부에 구성된 네트워크로 암호화된 보안 접속 통신을 제공하는 서비스인 SSL VPN을 Classic 환경에서 설정하고, 서버에 접속하는 방법에 대해 정리해보겠습니다.

## SSL VPN이란?
- VPN은 가상 사설망(Virtual Private Network)의 약자로, 외부에서 접근할 수 없는 사설망에 내 PC나 네트워크를 연결시키는 방법을 말합니다.
- 사설망과의 연결은 가상 터널을 통해 이루어지며, 이 가상 터널을 SSL 암호화로 보호하는 것이 SSL VPN입니다.
- 가상 터널을 통해 사설망과 연결된 사용자 PC는 사설망의 라우팅 및 ACL 정책에 따라 내부 서버에 접근할 수 있습니다.


## SSL VPN 생성
[SSL VPN 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_01.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

우선 등록 가능한 접속 ID 개수에 따른 상품을 선택합니다. Classic 환경에서는 3개, 5개, 10개 상품만 선택 가능합니다. 
다음으로 인증 방식은 ID/PW 만으로 접속하는 일차인증과 OTP까지 사용하는 이차 인증 중에서 원하는 방식을 선택합니다. 
그리고 이차인증을 선택했을 경우에는 SMS와 Email 어떤 것을 이용할 것인지도 선택하게 됩니다.

{% include callout_v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; 인증방식과 OTP 전송 방식은 SSL VPN 생성 시에 한번 선택하면 변경할 수 없으니 주의해야 합니다. &lt;br /&gt;
&amp;#8259; 만약 변경 하고 싶을 경우에는 SSL VPN을 새로 생성해야 합니다. &lt;br /&gt;
&amp;#8259; Classic 환경에서는 이차인증을 선택하면 별도의 이용요금이 부과됩니다.
&quot; %}


{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_02.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

다음으로 개인정보 수집 및 이용에 동의해야 합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_03.png&quot; width=&quot;700&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

SSL VPN이 생성되면 다음과 같이 리스트에 서 확인 가능하며 여기서 [**SSL VPN IP POOL**]은 뒤쪽에서 네트워크 접근 제한을 설정할 때 필요한 중요한 정보입니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_04.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 사용자 설정
SSL VPN에 접속할 사용자 정보를 설정합니다.  리스트에서 SSL VPN을 선택하고 [사용자 설정] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_05.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자 정보는 ID, Passowrd, Email, SMS 등을 입력하고 [추가] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_06.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자가 추가되면 SSL VPN 정보에 사용자 계정 수(등록된 ID 수)에 숫자가 표시되는 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_07.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## ACG 설정
SSL VPN을 사용하려면 서버에 적용된 ACG에 [**SSL VPN IP POOL**]을 등록해야 합니다.  
우선 SSL VPN을 통해서 접속할 서버를 선택하고 적용된 ACG를 확인합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_08.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[Server] - [ACG]에서 위에서 확인한 ACG를 선택하고 [ACG 설정]을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_09.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

ACG 규칙 설정 화면에서 위에서 확인했던 [**SSL VPN IP POOL**]을 접근 소스에 입력하고, 필요한 포트들을 등록합니다. 
기본이 되는 프로토콜과 포트는 리눅스 서버 접속용 TCP 22, 윈도우 서버 접속용 TCP 3389, Ping 확인용 ICMP 등입니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_10.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 다운로드
SSL VPN 접속을 위한 Agent를 다운로드 합니다.  

- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/security-5-1-windowsdownload&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;윈도우 용 다운로드&lt;/a&gt;
- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/security-5-1-macdownload&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;맥 용 다운로드&lt;/a&gt;

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_11.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## Agent 접속
Agent 프로그램, BIG-IP Edge Client를 설치하고 실행하면 다음과 같은 화면을 볼 수 있습니다.  
Agent에는 Classic 환경 SSL VPN 서버(Ncloud-kr-01)가 기본으로 설정되어 있는데, 혹시 빠져 있다면 [서버 변경] 버튼을 클릭해서 **https://sslvpn-kr-01.ncloud.com**을 입력하고 연결 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_12.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

위에서 설정했던 VPN 접속용 아이디와 Password를 입력하고 [로그온] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_13.png&quot; width=&quot;650&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

OTP 접속도 설정했다면 도착한 인증 번호를 입력합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_14.png&quot; width=&quot;650&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

SSL VPN에 제대로 연결이 되었는지 확인하기 위해서 cmd 창을 띄워서 ipconfig 명령어를 입력하면 아래 화면처럼 SSL VPN 주소로 설정된 어탭터에  [**SSL VPN IP POOL**]에 해당하는 IP가 할당된 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_15.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 서버 접속
이제 SSL VPN이 연결된 상태에서 서버에 접속해보겠습니다.  
PuTTY 를 실행하고 접속할 서버의 IP를 입력합니다.  
이때 서버 IP는 콘솔에 있는 서버 정보에서 **비공인 IP**에 표시되는 IP를 입력하면 됩니다.

{% include important.html title=&quot;IP 입력&quot; content=&quot;이때 혹시나 포트 포워딩이나 공인 IP를 설정하고 그 IP를 입력하는 일이 없도록 주의해야 합니다.&quot; %}


{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_16.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 기타 설정
SSL VPN Agent에는 몇가지 추가 기능이 있는데 아래에서 확인해보겠습니다.

### 트래픽 그래프
Agent 창에서 [그래프 보기] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_17.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

여기서는 SSL VPN이 연결된 상태의 트래픽을 그래프로 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_18.png&quot; width=&quot;560&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

다음으로 [상세 보기] 버튼을 클릭하면 접속 세부 정보, 로그, 통계, 알림, 라우팅 테이블, IP설정 등의 정보를 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_19.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 스펙 변경
처음에 설정한 접속 가능 ID 개수를 변경하고 싶을 경우 SSL VPN을 선택하고 [스펙 변경] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_20.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

3개, 5개, 10개 상품 중에서 원하는 개수로 변경할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_21.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 주의사항
{% include warning.html title=&quot;접속 오류&quot; content=&quot;SSL VPN이 연결된 상태에서 새로운 서버를 생성하고 접속을 시도하면 아래와 같은 오류 메시지가 뜨면서 서버 접속이 되지 않습니다.  이때는 SSL VPN의 연결을 끊었다가 다시 연결해야 새로 생성한 서버에 접속할 수 있습니다.&quot; %}

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_23.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 삭제
삭제를 원할 경우 SSL VPN을 선택하고 상단의 [삭제] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_22.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## 참고 URL
1.  SSL VPN 사용 가이드(Classic)
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/security-security-5-1&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/security-security-5-1&lt;/a&gt;

2. SSL VPN 요금
	- &lt;a href=&quot;https://www.ncloud.com/product/security/sslVpn&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://www.ncloud.com/product/security/sslVpn&lt;/a&gt;
</description>
            <pubDate>Mon, 24 Apr 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/networking/ncloud_networking_ssl_vpn_classic_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/networking/ncloud_networking_ssl_vpn_classic_guide.html</guid>
            
            <category>classic</category>
            
            <category>ssl</category>
            
            <category>vpn</category>
            
            
        </item>
        
        <item>
            <title>VPC 환경에서 SSL VPN 설정하고 접속하는 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드) 외부에서 내부에 구성된 네트워크로 암호화된 보안 접속 통신을 제공하는 서비스인 SSL VPN을 VPC 환경에서 설정하고, 서버에 접속하는 방법에 대해 정리해보겠습니다.

## SSL VPN이란?
- VPN은 가상 사설망(Virtual Private Network)의 약자로, 외부에서 접근할 수 없는 사설망에 내 PC나 네트워크를 연결시키는 방법을 말합니다.
- 사설망과의 연결은 가상 터널을 통해 이루어지며, 이 가상 터널을 SSL 암호화로 보호하는 것이 SSL VPN입니다.
- 가상 터널을 통해 사설망과 연결된 사용자 PC는 사설망의 라우팅 및 ACL 정책에 따라 내부 서버에 접근할 수 있습니다.


## SSL VPN 생성 요청
[SSL VPN 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_01.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

우선 접근할 서버가 속해 있는 VPC를 선택하고, 등록 가능한 접속 ID 개수에 따른 상품을 선택합니다.  
VPC 환경에서는 3, 5, 10, 20, 30, 50, 100, 200, 300, 400, 500개 상품 중에서 선택 가능합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_07.png&quot; width=&quot;700&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

VPC 환경의 SSL VPN은 콘솔에서 자동으로 생성하는 것이 아니라 `생성 요청을 하면 Ncloud 담당자가 직접 생성하고 결과를 안내 받는 구조`로 되어 있습니다. 
생성 완료까지 걸리는 기간은 **업무일 기준 2~3일** 정도이며, 생성이 완료되면 SSL VPN 상태가 [운영중]으로 변경되고, 안내 메일이 도착합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_03.png&quot; width=&quot;500&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

아래와 같이 생성 요청을 하고 나면 상태가 [생성중] 상태로 표시 됩니다. 2~3일 후 생성 완료 안내 메일이 도착할때까지 기다리시면 됩니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_04.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## SSL VPN 생성 완료
SSL VPN 생성이 완료되면 아래와 같은 메일을 받을 수 있습니다.   
메일 내용에는 [**SSL VPN IP POOL**] 정보와 접속 경로 정보가 포함되어 있으니 잘 확인해야 합니다.

{% include warning.html title=&quot;IP POOL&quot; content=&quot;특히 [**SSL VPN IP POOL**] 정보는 Ncloud 콘솔에서 확인할 수 없고, 오로지 생성 완료 메일에서만 확인 가능하니 잘 보관해야 합니다.&quot; %}


{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_05.png&quot; width=&quot;700&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

생성 완료 메일 확인 후에 콘솔에 접속하면 아래와 같이 [운영중] 으로 상태 메시지가 바뀐 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_06.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 사용자 설정
SSL VPN에 접속할 사용자 정보를 설정합니다.  리스트에서 SSL VPN을 선택하고 [사용자 설정] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_08.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자 정보는 ID, Passowrd, Email, SMS 등을 입력하고 [추가] 버튼을 클릭합니다.  
VPC 환경은 Classic 환경과 달리 이차인증이 필수이므로  SMS와 Email 정보를 함께 입력합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_09.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

사용자가 추가되면 SSL VPN 정보에 사용자 계정 수(등록된 ID 수)에 숫자가 표시되는 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_10.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## Route Table 설정
네트워크 설정에서는 우선 접속할 서버가 속해 있는 VPC Subnet의 Route Table에 SSL VPN으로 접근할 수 있게 [**SSL VPN IP POOL**]을 등록해야 합니다.  
아래와 같이 접속할 서버의 상세정보에서 VPC와 Subnet을 확인합니다. 여기서는 Private Subnet에 생성한 서버에 접속할 예정입니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_11.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[VPC] - [Route Table]에서 해당 VPC의 Private Subnet을 선택하고 [Routes 설정] 버튼을 클릭합니다.  
Public Subnet에 생성한 서버에 접근해야 할 경우에는 public-table을 선택하고 설정하시면 됩니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_12.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[Destination]에 SSL VPN 생성 완료 메일에서 확인한 [**SSL VPN IP POOL**] 정보를 등록하고, [Target Type]은 SSLVPN을 선택, [Target Name]은 위에서 생성한 SSL VPN 이름을 선택하고 [생성] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_13.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## ACG 설정
다음으로 서버에 적용된 ACG에 [**SSL VPN IP POOL**]을 등록해야 합니다.  
우선 SSL VPN을 통해서 접속할 서버를 선택하고 [ACG 수정] 버튼을 클릭해서 적용된 ACG를 확인합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_14.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

ACG 수정 화면에서 현재 적용된 ACG 이름을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_15.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[Server] - [ACG]에서 위에서 확인한 ACG를 선택하고 [ACG 설정]을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_16.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

ACG 규칙 설정 화면에서 위에서 확인했던 [**SSL VPN IP POOL**]을 접근 소스에 입력하고, 필요한 포트들을 등록합니다. 
기본이 되는 프로토콜과 포트는 리눅스 서버 접속용 TCP 22, 윈도우 서버 접속용 TCP 3389, Ping 확인용 ICMP 등입니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_17.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 다운로드
SSL VPN 접속을 위한 Agent를 다운로드 합니다.  

- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/security-5-1-windowsdownload&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;윈도우 용 다운로드&lt;/a&gt;
- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/security-5-1-macdownload&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;맥 용 다운로드&lt;/a&gt;

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_11.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## Agent 접속
Agent 프로그램, BIG-IP Edge Client를 설치하고 실행하면 다음과 같은 화면을 볼 수 있습니다.  
Agent에는 Classic 환경 SSL VPN 서버(Ncloud-kr-01)가 기본으로 설정되어 있는데, VPC 환경 SSL VPN 서버 주소로 바꾸기 위해 [연결끊기] 클릭해서 연결을 끊고, [서버 변경] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_18.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}
서버 선택 창에 **https://sslvpn-kr-vpc-01.ncloud.com** 주소를 입력하고, [다음] 버튼을 클릭합니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_19.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

주소 변경 후에 [연결] 버튼을 클릭하면 로그인 화면이 나타나는데 위에서 설정했던 VPN 접속용 아이디와 Password를 입력하고 [로그온] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_20.png&quot; width=&quot;650&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

그리고 도착한 OTP 인증 번호를 입력합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_21.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

SSL VPN에 제대로 연결이 되었는지 확인하기 위해서 cmd 창을 띄워서 ipconfig 명령어를 입력하면 아래 화면처럼 SSL VPN 주소로 설정된 어탭터에  [**SSL VPN IP POOL**]에 해당하는 IP가 할당된 것을 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_22.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 서버 접속
이제 SSL VPN이 연결된 상태에서 서버에 접속해보겠습니다.  
PuTTY 를 실행하고 접속할 서버의 IP를 입력합니다.  
이때 서버 IP는 콘솔에 있는 서버 정보에서 **비공인 IP**에 표시되는 IP를 입력하면 됩니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_23.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## Agent 기타 설정
SSL VPN Agent에는 몇가지 추가 기능이 있는데 아래에서 확인해보겠습니다.

### 트래픽 그래프
Agent 창에서 [그래프 보기] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_24.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

여기서는 SSL VPN이 연결된 상태의 트래픽을 그래프로 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_25.png&quot; width=&quot;557&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

다음으로 [상세 보기] 버튼을 클릭하면 접속 세부 정보, 로그, 통계, 알림, 라우팅 테이블, IP설정 등의 정보를 확인할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_26.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 스펙 변경
처음에 설정한 접속 가능 ID 개수를 변경하고 싶을 경우 SSL VPN을 선택하고 [스펙 변경] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_27.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

3, 5, 10, 20, 30, 50, 100, 200, 300, 400, 500개 상품 중에서 원하는 개수로 변경할 수 있습니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_28.png&quot; width=&quot;700&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 주의사항
{% include warning.html title=&quot;접속 오류&quot; content=&quot;SSL VPN이 연결된 상태에서 새로운 서버를 생성하고 접속을 시도하면 아래와 같은 오류 메시지가 뜨면서 서버 접속이 되지 않습니다.  이때는 SSL VPN의 연결을 끊었다가 다시 연결해야 새로 생성한 서버에 접속할 수 있습니다.&quot; %}

{% include image.html file=&quot;security/ncp_security_ssl_vpn_classic_guide_23.png&quot; width=&quot;700&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}


## 삭제
삭제를 원할 경우 SSL VPN을 선택하고 상단의 [삭제] 버튼을 클릭합니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_29.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

하지만, 바로 삭제가 되지 않고 다음과 같이 &quot;Route Table에서 Target으로 지정된 Route 정보를 모두 삭제해야 삭제가 가능합니다&quot;라는 메시지가 뜹니다. 

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_30.png&quot; width=&quot;500&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

[VPC] - [Route Table]에서 해당 VPC의 Private Subnet을 선택하고 [Routes 설정] 버튼을 클릭해서 등록된 설정을 확인하고 [X] 버튼을 클릭해서 설정을 삭제합니다. 
Route Table 정보를 삭제한 후에 SSL VPN을 삭제하시면 됩니다.

{% include image.html file=&quot;security/ncp_security_ssl_vpn_vpc_guide_31.png&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 SSL VPN 설정하고 접속하는 방법&quot; caption=&quot;&quot; %}

## 참고 URL
1.  SSL VPN 사용 가이드(VPC)
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/security-security-5-2&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/security-security-5-2&lt;/a&gt;

2. SSL VPN 요금
	- &lt;a href=&quot;https://www.ncloud.com/product/security/sslVpn&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://www.ncloud.com/product/security/sslVpn&lt;/a&gt;
</description>
            <pubDate>Mon, 24 Apr 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/networking/ncloud_networking_ssl_vpn_vpc_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/networking/ncloud_networking_ssl_vpn_vpc_guide.html</guid>
            
            <category>vpc</category>
            
            <category>ssl</category>
            
            <category>vpn</category>
            
            
        </item>
        
        <item>
            <title>Ncloud 방화벽 ACG 설정 기본 가이드</title>
            <description>## 개요
ACG(Access Control Group)는 서버 간 네트워크 접근 제어 및 관리를 할 수 있는 IP/Port 기반 필터링 방화벽 서비스로 AWS에서는 비슷하게 Security Group이라는 것이 있습니다.

## 제한 사항

### VPC 환경
- VPC당 최대 **500개**까지 ACG 생성 가능
- **NIC당 3개의 ACG**를 허용
- Inbound / Outbound 각각 **50개의 규칙** 생성 가능

### Classic 환경
- 계정당 최대 **100개**까지 ACG를 생성 가능
- 각 ACG에는 최대 **100개**까지의 규칙을 설정할 수 있음
- 서버는 **최대 5개**의 ACG에 중복 포함될 수 있음
- 서버가 생성될 시 선택한 ACG는 변경이 불가하며, 반납 전까지 해당 ACG 규칙을 적용 받게 됨

{% include callout_v2.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;Classic 환경에서는 서버 자체에 할당되는 개념이었으나 VPC에는 NIC 즉, 네트워크 카드에 할당되는 개념이어서 VPC 환경에서는 **NIC 당 최대 3개**까지 ACG를 적용할 수 있습니다.&quot; %}

## ACG 위치
Ncloud 콘솔에서 ACG의 위치는 [**Services**] - [**Compute**] - [**Server**] - [**ACG**]에 있습니다.

### VPC 환경
{% include image.html file=&quot;security/ncloud-security-acg-guide-03.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;security/ncloud-security-acg-guide-04.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}

### Classic 환경
{% include image.html file=&quot;security/ncloud-security-acg-guide-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;security/ncloud-security-acg-guide-02.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}



## 기본 규칙

### Default ACG
기본적으로 추가되는 ACG

- 모든 들어오는 연결(inbound traffic)을 차단함
- 모든 나가는 연결(outbound traffic)을 허용함
- Default ACG 내 속한 서버들끼리의 네트워크 양방향 통신(TCP, UDP, ICMP)이 허용됨
- 원격 접속 기본 포트 (**Linux - 22, Windows - 3389**)에 대한 TCP 허용됨

#### VPC 화면

##### Inbound (기본 설정)
{% include image.html file=&quot;security/ncp_security_acg_vpc_inbound.png&quot; width=&quot;770&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}

{% include callout_v2.html type=&quot;warning&quot; level=&quot;1&quot; content=&quot;기본으로 생성된 ACG에는 위처럼 22, 3389 포트에 대해 0.0.0.0/0 즉, 전체 IP에 대해 허용되어 있는데 보안을 위해 이 항목을 삭제하고 아래와 같이 지정된 IP에서만 접속하도록 수정하는 것을 적극 권장합니다.&quot; %}

##### Inbound (권장 설정)
{% include image.html file=&quot;security/ncp_security_acg_vpc_inbound_02.png&quot; width=&quot;770&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}

##### Outbound
{% include image.html file=&quot;security/ncp_security_acg_vpc_outbound.png&quot; width=&quot;770&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}

#### Classic 화면 (기본 설정)
{% include image.html file=&quot;security/ncp_security_acg_classic.png&quot; width=&quot;770&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}

{% include callout_v2.html type=&quot;warning&quot; level=&quot;1&quot; content=&quot;기본으로 생성된 ACG에는 위처럼 22, 3389 포트에 대해 0.0.0.0/0 즉, 전체 IP에 대해 허용되어 있는데 보안을 위해 이 항목을 삭제하고 아래와 같이 지정된 IP에서만 접속하도록 수정하는 것을 적극 권장합니다.&quot; %}

#### Classic 화면 (권장 설정)
{% include image.html file=&quot;security/ncp_security_acg_classic_02.png&quot; width=&quot;770&quot; alt=&quot;Ncloud의 IP/Port 기반 필터링 방화벽 서비스 ACG(Access Control Group) 가이드&quot; caption=&quot;&quot; %}

### Custom ACG
Default ACG 이외에 사용자가 추가하는 ACG

- 모든 inbound traffic을 차단함(규칙으로 명시되어 있지 않음)
- 모든 outbound traffic을 허용함(규칙으로 명시되어 있지 않음)


## 접근소스 설정
ACG를 설정할 때 접근 소스 항목은 보통 IP주소를 입력하게 됩니다. 
하지만 특수한 경우로 Load Balancer를 지정하거나 ACG 이름을 지정하는 경우도 있습니다. 
이 중에서 다른 ACG를 접근 소스 항목으로 지정하는 경우는 해당 ACG가 적용된 서버들이 접근할 수 있도록 규칙을 설정하는 것인데, 아래 예시를 이용해 정리해보겠습니다.

### ACG-1
- 적용서버 : SVR-1, SVR-2

### ACG-2
- 적용서버 : SVR-3

### ACG-2 적용 규칙
- 프로토콜 :  TCP
- 접근소스 :  ACG-1
- 허용포트 : 80

{% include note.html content=&quot;위와 같은 경우 ACG-1이 적용된 SVR-1, SVR-2 서버에서 ACG-2가 적용된 SVR-3 서버로 80포트를 이용한 접근을 허용한다는 의미입니다.&quot; %}
{% include callout_v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;VPC 환경에서 ACG를 접근소스를 설정할 때는 동일한 VPC에 생성된 ACG만 접근소스로 설정할 수 있습니다.&quot; %}



## 참고 URL
&lt;a href=&quot;https://guide.ncloud-docs.com/docs/compute-compute-2-3&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/compute-compute-2-3.html&lt;/a&gt;
</description>
            <pubDate>Thu, 20 Apr 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/security/ncloud_security_acg_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/security/ncloud_security_acg_guide.html</guid>
            
            <category>acg</category>
            
            <category>classic</category>
            
            <category>vpc</category>
            
            
        </item>
        
        <item>
            <title>MariaDB Multi Source Replication 구성 가이드</title>
            <description>## 개요

n대의 마스터 DB와 1대의 슬레이브 DB를 연결하여 마스터 DB들의 데이터를 슬레이브 DB 한곳에 모아 조회할 수 있는 Multi-Source-Replication(MSR)을 MariaDB에서 구성하는 방법을 정리해보겠습니다.

## 테스트 준비

- 마스터 서버 2대, 슬레이브 서버 1대 준비
- 각 서버에 MariaDB 10.3 이상 설치
- MariaDB 리플리케이션작업 진행 시 마스터 서버의 데이터베이스에 쓰기 작업 금지

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}


## ACG 설정
서버 준비가 끝났으면 우선 마스터 서버 &lt;i class=&quot;fa-solid fa-arrow-right&quot;&gt;&lt;/i&gt; 슬레이브 서버로 디비 백업 파일 복사과 복제 구성에 필요한 22, 3306 포트를 오픈해야 합니다.  
오픈 할 때 규칙은 마스터 서버와 슬레이브 서버의 공통 ACG에 사설 IP 대역 전체를 지정할 수도 있고, 슬레이브 서버 전용 ACG에 마스터 서버 IP만 등록하는 방법도 있습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-multi-source-replication-guide-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

## Slave 장비에 백업 디렉토리 생성
먼저 Slave 장비에 Master 장비들로 부터 DB 복원용 덤프 파일을 전송 받을 백업 디렉토리를 생성하는 것 부터 시작하겠습니다.

```bash
~# mkdir /data
~# cd /data
```

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

## Master1 장비 구성

### Master1 설정 추가
- **/etc/my.cnf.d/mariadb-server.cnf**에 Master1 설정을 추가합니다.
- MariaDB 버전에 따라서는 **/etc/my.cnf.d/server.cnf** 인 경우도 있습니다.

{% tabs master1_my_cnf %}

{% tab master1_my_cnf MySQL 호환 %}
```bash
~# vi /etc/my.cnf.d/mariadb-server.cnf

server-id = 1
log-bin = mariadb-bin
binlog_format = mixed
character-set-server = utf8

#MariaDB를 재시작해 변경사항 적용.
~# systemctl restart mariadb
```
{% endtab %}

{% tab master1_my_cnf MariaDB 전용 %}
```bash
~# vi /etc/my.cnf.d/mariadb-server.cnf

log-bin
server_id = 1
log-basename = mariadb
binlog-format = mixed
character-set-server = utf8

#MariaDB을 재시작해 변경사항 적용.
~# systemctl restart mariadb
```
{% endtab %}

{% endtabs %}

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-03.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-04.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

### 리플리케이션 계정 생성
MariaDB 접속 후 리플리케이션을 진행할 계정 생성

```bash
#master1 계정 생성.
MariaDB [(none)]&gt; create user &apos;리플리케이션 계정명&apos;@&apos;%&apos; identified by &apos;패스워드&apos;;
MariaDB [(none)]&gt; grant replication slave on *.* to &apos;리플리케이션 계정명&apos;@&apos;%&apos;;
MariaDB [(none)]&gt; flush privileges;
```

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

### 테스트 DB 생성
다음으로 테스트에 사용할 DB를 생성하겠습니다. 이미 생성되어 있는 다른 DB를 사용할 경우에는 별도로 테스트용 DB를 생성할 필요는 없습니다.

```bash
MariaDB [(none)]&gt; CREATE DATABASE testdb1 default CHARACTER SET UTF8;
```

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

### Master1 정보확인
이제 리플리케이션 설정에 필요한 Master 정보를 확인합니다.

```bash
MariaDB [(none)]&gt; show variables like &apos;server_id&apos;;
MariaDB [(none)]&gt; show master status;
```

{% include callout-v2.html type=&quot;warning&quot; level=&quot;3&quot; content=&quot;
[**show master status**] 명령으로 확인한 [**File**], [**Position**] 정보는 아래쪽에서 `Slave DB를 설정할 때 입력해야 하므로 별도로 기록해두어야` 합니다.
&quot; %}

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-06.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}


### DB 백업 파일 슬레이브 장비로 전송
testdb1 DB의 백업파일을 생성하고, 슬레이브 서버로 전송합니다.

```bash
~# mkdir /data
~# cd /data
~# mysqldump -u root -p --databases testdb1 &gt; /data/test1.sql 

#슬레이브 서버에 전송.
~# scp test1.sql root@10.0.0.8:/data
```

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

## Master2 장비 구성

### Master2 설정 추가
- **/etc/my.cnf.d/mariadb-server.cnf**에 Master2 설정을 추가합니다.
- MariaDB 버전에 따라서는 **/etc/my.cnf.d/server.cnf** 인 경우도 있습니다.

{% tabs master2_my_cnf %}

{% tab master2_my_cnf MySQL 호환 %}
```bash
~# vi /etc/my.cnf.d/mariadb-server.cnf

server-id = 2
log-bin = mariadb-bin
binlog_format = mixed
character-set-server = utf8

#MariaDB을 재시작해 변경사항 적용.
~# systemctl restart mariadb
```
{% endtab %}

{% tab master2_my_cnf MariaDB 전용 %}
```bash
~# vi /etc/my.cnf.d/mariadb-server.cnf

log-bin
server_id = 2
log-basename = mariadb
binlog-format = mixed
character-set-server = utf8

#MariaDB을 재시작해 변경사항 적용.
~# systemctl restart mariadb
```
{% endtab %}

{% endtabs %}

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-09.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-10.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

### 리플리케이션 계정 생성
MariaDB 접속 후 리플리케이션을 진행할 계정 생성합니다.

```bash
#master2 계정 생성.
MariaDB [(none)]&gt; create user &apos;리플리케이션 계정명&apos;@&apos;%&apos; identified by &apos;패스워드&apos;;
MariaDB [(none)]&gt; grant replication slave on *.* to &apos;리플리케이션 계정명&apos;@&apos;%&apos;;
MariaDB [(none)]&gt; flush privileges;
```

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

### 테스트 DB 생성
다음으로 테스트에 사용할 DB를 생성하겠습니다. 이미 생성되어 있는 다른 DB를 사용할 경우에는 별도로 테스트용 DB를 생성할 필요는 없습니다.

```bash
MariaDB [(none)]&gt; CREATE DATABASE testdb2 default CHARACTER SET UTF8;
```

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-13.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

### Master2 정보확인
마찬가지로 리플리케이션 설정에 필요한 Master 정보를 확인합니다.

```bash
MariaDB [(none)]&gt; show variables like &apos;server_id&apos;;
MariaDB [(none)]&gt; show master status;
```


{% include callout-v2.html type=&quot;warning&quot; level=&quot;3&quot; content=&quot;
[**show master status**] 명령으로 확인한 [**File**], [**Position**] 정보는 아래쪽에서 `Slave DB를 설정할 때 입력해야 하므로 별도로 기록해두어야` 합니다.
&quot; %}

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-12.png&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}


### DB 백업 파일 슬레이브 장비로 전송
testdb2 DB의 백업파일 생성하고, 슬레이브 서버로 전송합니다.

```bash
~# mkdir /data
~# cd /data
~# mysqldump -u root -p --databases testdb2 &gt; /data/test2.sql

~# scp test2.sql root@10.0.0.8:/data
```

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-14.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

## Slave 장비 구성

### Slave 설정 추가
- **/etc/my.cnf.d/mariadb-server.cnf**에 Slave 설정을 추가합니다.  
- MariaDB 버전에 따라서는 **/etc/my.cnf.d/server.cnf** 인 경우도 있습니다.

```bash
~# vi /etc/my.cnf.d/mariadb-server.cnf

server-id = 3 

#리플리케이션 대상 디비 설정.
replicate-do-db = testdb1
replicate-do-db = testdb2

#리플리케이션 제외 디비 설정.
replicate-ignore-db = information_schema
replicate-ignore-db = mysql
replicate-ignore-db = performance_schema
replicate-ignore-db = sys

slave-skip-errors = all

#DB를 재시작하여 변경사항 적용.
~# systemctl restart mariadb
```

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-16.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-17.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}


### DB 복구 진행
먼저 복구할 DB를 미리 생성하고 Master1, Master2 장비에서 전송 받은 백업 파일을 사용해 DB를 복구합니다.
```bash
#복구할 DB 생성.
MariaDB [(none)]&gt; create database testdb1;
MariaDB [(none)]&gt; create database testdb2;
MariaDB [(none)]&gt; quit

#DB 복구
~# mysql -u root -p testdb1 &lt; /data/test1.sql
~# mysql -u root -p testdb2 &lt; /data/test2.sql
```

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-18.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

- 백업 파일을 전송 받은 디렉토리로 이동해 백업 파일이 정상적으로 전송되었는지 확인합니다.
{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-19.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

- 백업 파일을 사용해 DB를 복구합니다.
{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-20.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

## 리플리케이션 채널 설정
리플리케이션 채널을 설정하는 쿼리문은 다음과 같은데, MySQL과는 일부 다른 부분이 있으니 잘 확인하고 사용해야 합니다.

```bash
MariaDB [(none)]&gt; CHANGE MASTER &apos;커넥션 이름&apos; TO MASTER_HOST=&apos;마스터IP&apos;, MASTER_PORT=포트번호, MASTER_USER=&apos;생성한 리플리케이션 계정명&apos;, MASTER_PASSWORD=&apos;패스워드&apos;, MASTER_LOG_FILE=&apos;위에서 확인된 File명&apos;, MASTER_LOG_POS=위에서 확인된 Position 번호;
```


여기에 필요한 정보 중에서 [**MASTER_LOG_FILE**]과 [**MASTER_LOG_POS**]은 위쪽에서 확인한 Master DB들의 정보에 나타났던 것으로 정리하면 다음과 같습니다.

&lt;div class=&quot;col-sm-12&quot;&gt;
&lt;div class=&quot;col-sm-6&quot;&gt;
&lt;table class=&quot;simple_table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;DB&lt;/th&gt;
      &lt;th&gt;File&lt;/th&gt;
      &lt;th&gt;Position&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;&lt;td&gt;Master1&lt;/td&gt;&lt;td&gt;mariadb-bin.000001&lt;/td&gt;&lt;td&gt;939&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;Master2&lt;/td&gt;&lt;td&gt;mariadb-bin.000002&lt;/td&gt;&lt;td&gt;939&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;    
&lt;/div&gt;
&lt;/div&gt;

### Master 서버 정보 입력
다음의 예시처럼 Slave 서버에 Master 서버 정보를 하나씩 입력합니다.

```bash
#Master1 예시
MariaDB [(none)]&gt; CHANGE MASTER &apos;ch_testdb1&apos; TO MASTER_HOST=&apos;10.0.0.6&apos;, MASTER_USER=&apos;testuser&apos;, MASTER_PORT=3306, MASTER_PASSWORD=&apos;Test123$&apos;, MASTER_LOG_FILE=&apos;mariadb-bin.000001&apos;, MASTER_LOG_POS=939;

#Master2 예시
MariaDB [(none)]&gt; CHANGE MASTER &apos;ch_testdb2&apos; TO MASTER_HOST=&apos;10.0.0.7&apos;, MASTER_USER=&apos;testuser&apos;, MASTER_PORT=3306, MASTER_PASSWORD=&apos;Test123$&apos;, MASTER_LOG_FILE=&apos;mariadb-bin.000002&apos;, MASTER_LOG_POS=939;

MariaDB [(none)]&gt; FLUSH PRIVILEGES;
```


{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-21.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}


### 리플리케이션 채널 시작
리플리케이션 시작 후 에러가 없는지 확인합니다.  

```bash
# start slave &apos;커넥션명&apos;;
MariaDB [(none)]&gt; start slave &apos;ch_testdb1&apos;; 
MariaDB [(none)]&gt; start slave &apos;ch_testdb2&apos;;

# show slave &apos;커넥션명&apos; status\G
MariaDB [(none)]&gt; show slave &apos;ch_testdb1&apos; status\G 
MariaDB [(none)]&gt; show slave &apos;ch_testdb2&apos; status\G
```


- Master1  
상태 확인에서는 [**Slave_IO_State**], [**Slave_IO_Running**], [**Slave_SQL_Running**] 항목들이 아래와 같이 되어 있으면 정상입니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-22.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

- Master2  
상태 확인에서는 [**Slave_IO_State**], [**Slave_IO_Running**], [**Slave_SQL_Running**] 항목들이 아래와 같이 되어 있으면 정상입니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-23.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

## 리플리케이션 테스트
리플리케이션 설정을 모두 마친 후에 Master 서버들에서 DB 작업을 진행하고, Slave 서버에 해당 내용이 복제되는지 확인해보겠습니다.

- Master1 서버 작업  
Master1 서버에 테스트를 위한 [**sampletable1**] Table을 생성합니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-24.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

-  Slave 서버 확인  
Slave 서버에서 testdb1 DB에 sampletable1 Table이 복제되었는지 확인합니다.

{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-25.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

-  Master2 서버 작업  
Master2 서버에 테스트를 위한 [**sampletable2**] Table을 생성합니다.
{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-26.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

- Slave 서버 확인  
Slave 서버에서 testdb2 DB에 sampletable2 Table이 복제되었는지 확인합니다.
{% include image.html file=&quot;database/ncloud-database-mariadb-multi-source-replication-guide-27.png&quot; width=&quot;840&quot; alt=&quot;Ncloud에서 MariaDB Multi Source Replication 구성하는 방법&quot; caption=&quot;&quot; %}

## 리플리케이션 명령어 모음

&lt;div&gt;
&lt;table class=&quot;simple_table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th width=&quot;110px&quot;&gt;&lt;/th&gt;
      &lt;th&gt;리플리케이션 명령어&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;채널 설정&lt;/td&gt;
      &lt;td style=&quot;font-size:0.75em;line-height:130%;&quot;&gt;CHANGE MASTER &apos;커넥션 이름&apos; TO MASTER_HOST=&apos;마스터IP&apos;, MASTER_PORT=포트번호, MASTER_USER=&apos;생성한 리플리케이션 계정명&apos;, MASTER_PASSWORD=&apos;패스워드&apos;, MASTER_LOG_FILE=&apos;위에서 확인된 File명&apos;, MASTER_LOG_POS=위에서 확인된 Position 번호;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;채널 시작&lt;/td&gt;&lt;td&gt;START SLAVE &quot;커넥션 이름&quot;;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;채널 중지&lt;/td&gt;&lt;td&gt;STOP SLAVE &quot;커넥션 이름&quot;;&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;채널 상태 확인&lt;/td&gt;&lt;td&gt;SHOW SLAVE &quot;커넥션 이름&quot; STATUS\G&lt;/td&gt;&lt;/tr&gt;
    &lt;tr&gt;&lt;td&gt;채널 정보 삭제&lt;/td&gt;&lt;td&gt;RESET SLAVE &quot;커넥션 이름&quot;;&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;  
&lt;/div&gt;


## 참고 URL
1. MariaDB Replication 기본 설정 가이드
	- &lt;a href=&quot;https://mariadb.com/kb/en/setting-up-replication/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://mariadb.com/kb/en/setting-up-replication/&lt;/a&gt;

1. MariaDB Multi-Source Replication 가이드
	- &lt;a href=&quot;https://mariadb.com/kb/en/multi-source-replication/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://mariadb.com/kb/en/multi-source-replication/&lt;/a&gt;  </description>
            <pubDate>Thu, 20 Apr 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud-database-mariadb-multi-source-replication.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud-database-mariadb-multi-source-replication.html</guid>
            
            <category>database</category>
            
            <category>backup</category>
            
            <category>mariadb</category>
            
            
        </item>
        
        <item>
            <title>Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법</title>
            <description>## 개요
록키 리눅스(Rocky Linux)는 기본 데이터베이스가 MariaDB인데, 상황에 따라 MySQL이 필요한 경우가 있습니다. 이번에는 그 중에서 MySQL 8.0 최신 버전을 설치하는 방법을 정리해보겠습니다.

## 서버 준비
우선 Rocky Linux 서버를 준비합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### Rocky Linux 소개
록키 리눅스에 대한 간략한 소개는 아래 문서에서 확인할 수 있습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/compute/ncloud-compute-server-rocky-linux-guide.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt; Ncloud에서 제공하는 록키 리눅스(Rocky Linux) 서버 소개&lt;/a&gt;
&quot; %}

## 패키지 업데이트
우선 패키지 업데이트를 해보겠습니다.

``` bash
~# dnf update
```
{% include note.html title=&quot;dnf&quot; content=&quot;Dandified YUM의 약자인 dnf는 기존의 yum 패키지 관리자가 갖고 있던 여러 단점들을 수정, 업그레이드해서 
Fedora 18 이후 버전에서 사용되고 있으며, Rocky Linux도 마찬가지로 dnf를 기본 패키지 관리자로 사용하고 있습니다. 물론 호환성을 위해서 yum 명령어도 사용할 수 있습니다.
&quot; %}

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL Community 최신 패키지 확인
MySQL Community Yum(Dnf) 최신 패키지는 아래 주소에서 확인할 수 있습니다.  
Rocky Linux는 CentOS 8 기반으로 만들어졌으므로 아래 다운로드 페이지에서 Red Hat Enterprise Linux 8 기반의 mysql80-community-release-el8-{버전}.noarch.rpm 리파지토리 버전을 확인합니다.  
**2023-04-10** 기준으로는 [**mysql80-community-release-el8-5.noarch.rpm**] 인것을 확인할 수 있습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;https://dev.mysql.com/downloads/repo/yum/&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt; https://dev.mysql.com/downloads/repo/yum/&lt;/a&gt;
&quot; %}

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-03.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


## MySQL Community 패키지 설치
위에서 확인한 MySQL 8.0의 최신 Repository 설치 패키지는 [**mysql80-community-release-el8-5.noarch.rpm**] 입니다.

``` bash
~# dnf -y install https://dev.mysql.com/get/mysql80-community-release-el8-5.noarch.rpm
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


## MySQL 8.0 버전 리포지토리 활성화

### 버전 활성화 정보 초기화

``` bash
~# dnf module reset mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


### 기본 MySQL 버전 비활성화

``` bash
~# dnf module disable mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


### MySQL 8.0 버전 확인
설치된 MySQL Community 패키지에 포함된 MySQL 버전을 확인해보겠습니다.  
mysql80-community-release-el8-{버전}.noarch.rpm 버전부터는 8.0 버전만 있고, 5.7 버전은 포함되어 있지 않습니다.

``` bash
~# dnf repolist all | grep mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 8.0 설치
MySQL 8.0 서버를 설치합니다.

``` bash
~# dnf -y install mysql-community-server
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 초기화
아래 명령어로 기본 데이터베이스 생성 등의 초기화 작업을 진행합니다. 다만 여기서는 초기화 할 때 --initialize-insecure 옵션으로 비밀번호는 설정하지 않고 아래쪽 MySQL 보안 설정 단계에서 [**mysql_secure_installation**] 명령으로 설정하도록 하겠습니다.

``` bash
~# mysqld --initialize-insecure --user=mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-09.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 데몬 시작
초기화를 마쳤으면 MySQL 데몬을 시작합니다.

``` bash
~# systemctl start mysqld
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 보안 설정
[**mysql_secure_installation**]은 MySQL의 기본 보안을 설정하는 명령으로, 설정되는 항목은 다음과 같습니다.

- root 계정 패스워드 설정
- 원격 호스트에서 root 계정 접속 차단
- 익명 계정 삭제
- 테스트 DB 등 삭제

``` bash
~# mysql_secure_installation
```

- 비밀번호를 설정할 때 비밀번호 유효성 검사 플러그인을 사용할 것인지 선택할 수 있는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 비밀번호 정책 수준 선택
제공되는 비밀번호 정책 수준은 [**LOW**], [**MEDIUM**], [**STRONG**]의 3가지가 있습니다.
- LOW: 8자 이상
- MEDIUM: 8자 이상, 숫자-대소문자-특수문자 포함
- STRONG: 8자 이상, 숫자-대소문자-특수문자 포함, dictionary file에 포함된 단어 사용 불가

여기서는 1을 입력해서 MEDIUM을 선택하겠습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

- 패스워드를 입력하면 패스워드의 복잡성 강도를 점수로 측정해주는데 이번 테스트에서는 100점을 받았습니다.  
그리고, 방금 입력했던 패스워드를 그대로 사용할 것인지 확인하는데 [**Y**]를 입력합니다.  
(혹시 입력했던 비밀번호를 변경하고 싶을 경우는 [**N**]를 입력합니다.)

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-13.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 익명 계정 삭제
다음으로 Anonymous Users 즉, 익명 계정들을 삭제할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-14.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 원격 호스트에서 root 계정 접속 차단
다음은 로컬이 아닌 원격에서 root 계정 로그인을 차단할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 테스트 DB 등 삭제
테스트 DB 등을 삭제할 것인지 묻는데 여기서도 [**Y**]를 입력합니다.
{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-16.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 설정 저장
마지막으로 지금까지 선택한 설정을 모두 적용할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-17.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 접속
위에서 설정했던 비번으로 접속해보면 [**8.0.32 MySQL Community Server**]인 것을 확인할 수 있습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-18.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## 참고 URL
1. MySQL Yum Repository 다운로드 페이지
	- &lt;a href=&quot;https://dev.mysql.com/downloads/repo/yum/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://dev.mysql.com/downloads/repo/yum/&lt;/a&gt;

2. Installing MySQL on Linux Using the MySQL Yum Repository
	- &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/linux-installation-yum-repo.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/linux-installation-yum-repo.html&lt;/a&gt;  

3. Rocky Linux 서버에 MySQL 5.7 설치하는 방법
	- &lt;a href=&quot;/database/ncloud-database-mysql-57-install-on-rocky-linux.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/database/ncloud-database-mysql-57-install-on-rocky-linux.html&lt;/a&gt;      </description>
            <pubDate>Tue, 11 Apr 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux.html</guid>
            
            <category>database</category>
            
            <category>mysql</category>
            
            <category>install</category>
            
            <category>rocky_linux</category>
            
            
        </item>
        
    </channel>
</rss>
