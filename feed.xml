<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>3RDEYESYSTEM Technical Documentations</title>
        <description>써드아이시스템(3rdeyesys) 기술문서 사이트입니다 - Ncloud 프리미엄 파트너</description>
        <link>https://docs.3rdeyesys.com/</link>
        <atom:link href="https://docs.3rdeyesys.com/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Wed, 14 Feb 2024 11:58:54 +0900</pubDate>
        <lastBuildDate>Wed, 14 Feb 2024 11:58:54 +0900</lastBuildDate>
        <generator>Jekyll v4.2.2</generator>
        
        
        <item>
            <title>Ncloud Clova OCR 서비스 중에서 Template OCR 사용 방법 안내</title>
            <description>## 개요  
Ncloud (네이버 클라우드) [**Clova OCR**]은 전송한 문서나 이미지를 인식하여 사용자가 지정한 영역의 텍스트와 데이터를 정확하게 추출하는 서비스입니다. 여기서는 [**Clova OCR**]에서 제공하는 OCR 서비스 종류 중에서 [**Template OCR**]의 사용 방법을 [**사업자등록증**]을 예시로 정리해보겠습니다.

## 서비스 이용 시 주의 사항
[**Clova OCR**] 이용 시 주의 사항은 다음과 같습니다.

- 서비스 계정당 권장되는 호출 성능은 최대 1 tps입니다. 더 높은 호출 성능을 원하는 경우 고객 지원으로 문의하셔야 합니다.
- 인식 요청 시 45도 이상 회전된 문서는 인식률이 저하될 수 있습니다.


## OCR 종류
[**Clova OCR**]에서 제공하는 OCR 서비스의 종류는 다음과 같습니다.

- **General OCR**: 텍스트/표를 추출하는 OCR
- **Template OCR**: 판독 영역을 직접 지정하여 인식값 추출 후 테스트 및 결과 전송이 가능한 템플릿 빌더를 지원하는 OCR
- **Document OCR**: 머신러닝 기반으로 문서의 의미적 구조를 이해하는 특화 모델 엔진을 탑재하여 입력 정보(key-value)를 자동 추출하는 OCR


## 도메인 생성
우선 [**CLOVA OCR**] - [**Domain**]에서 [**도메인 생성**] 버튼을 클릭합니다.
{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

- **General OCR**과 **Template OCR**을 위한 [**일반/템플릿 도메인**]과 **Document OCR**을 위한 [**특화 모델 도메인**]중에서 [**일반/템플릿 도메인 생성**] 버튼을 클릭합니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

### 생성
도메인명과 도메인 코드를 입력하고, 지원 언어를 선택합니다.  
서비스 타입은 **템플릿**, 인식 모델은 **Basic**, 서비스 플랜은 **Free**를 선택하고 [**생성**] 버튼을 클릭합니다.

{% include callout-v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; CLOVA OCR은 도메인별 서비스 플랜에 따라 요금이 부과됩니다.&lt;br /&gt;
&amp;#8259; `Free 서비스 플랜을 제외한 모든 서비스 플랜은 CLOVA OCR API를 호출하지 않아도 기본 요금이 부과`됩니다.&lt;br /&gt;
&amp;#8259; 서비스 플랜에 따라 기본으로 제공되는 API 호출 수가 다르며, 기본 제공 건수 초과 시 추가 요금이 부과됩니다.
&quot; %}
{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-03.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

## 템플릿 생성
이제 템플릿을 생성하기 위해 도메인 정보에서 오른쪽 끝에 있는 [**템플릿 빌더**] 버튼을 클릭합니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-04.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

### 템플릿 빌더
**템플릿 빌더** 화면에서는 **API Gateway 연동**, **템플릿 관리**, **테스트**, **사용 지표 확인**등을 할 수 있습니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-05.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

- 왼쪽에 있는 메뉴에서 [**템플릿 목록**]을 선택하고, [**템플릿 생성**] 버튼을 클릭합니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-06.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

### 템플릿 기본 정보 입력
**템플릿 기본 정보** 항목에서 [**템플릿명**]을 입력하고 [**확인**] 버튼을 클릭해서 사용 가능한 템플릿 이름인지 확인합니다. 

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-07.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

- 사용 가능한 [**템플릿명**]인 것이 확인되면 아래쪽에 있는 **대표 샘플 이미지 등록** 영역이 활성화 됩니다. 이 영역을 클릭해서 **대표 샘플 이미지**를 등록합니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

### 대표 샘플 설정
**대표 샘플 이미지**를 등록하면 [**대표 샘플명**]을 입력해야 [**대표 샘플의 판독 필드**]를 지정할 수 있다는 안내 메시지가 나타나니다. 
{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

- [**대표 샘플명**]을 입력하고 [**확인**] 버튼을 클릭하면 [**대표 샘플의 판독 필드**]를 지정할 수 있는데 [**사업자등록증**] 부분을 선택했습니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-10.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

- [**대표 샘플의 판독 필드**]를 지정하고 나면, **템플릿 분류의 정확도 향상을 위해 대표 샘플명과 비슷한 유사어를 등록**하라는 안내 메시지를 확인할 수 있습니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-11.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

- [**유사어 관리**] 버튼을 클릭해서 [**대표 샘플명**]인 [**사업자등록증**]의 유사어를 [**사 업 자 등 록 증**], [**사업자 등록증**]등으로 입력했습니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-12.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

### 판독 필드 지정
이제 실제로 이미지에서 판독할 필드를 지정해보겠습니다.  

[**필드 추가**] 버튼을 클릭하면 필드 지정 영역이 이미지 위에 나타나는데, 원하는 영역을 선택하고 [&lt;i class=&quot;fa-solid fa-check&quot;&gt;&lt;/i&gt;] 아이콘을 클릭합니다. 여기서는 **등록번호** 영역을 선택했습니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

- 판독 필드 선택을 하고 나면 오른쪽 아래에 첫번째 판독 필드를 뜻하는 [**필드 01**] 항목이 생성되는데, 여기에 [**필드 이름**]을 입력합니다. 

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-14.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

- 마찬가지로 [**법인명**], [**대표자**], [**사업장 소재지**], [**업태**], [**종목**]까지 총 6개 필드를 지정하고, [**필드 이름**]을 입력한 후 [**저장**] 버튼을 클릭합니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-15.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

## 배포 관리
생성이 끝난 템플릿을 실제로 사용하려면 [**베타 배포**]를 해야 합니다. 왼쪽 상단에 있는 [**배포 관리**] 메뉴로 이동해서 [**베타 배포**] 버튼을 클릭합니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-16.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

- [**베타 배포**] 확인 팝업에서 [**확인**] 버튼을 클릭합니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-17.png&quot; width=&quot;485&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

- [**베타 배포**]가 완료되면 현재 배포 상태를 확인할 수 있습니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-18.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

## 테스트
베타 배포가 끝났으면 이제 테스트를 해보겠습니다. [**테스트**] 메뉴에서 [**파일 업로드**] 버튼을 클릭합니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-19.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

- 파일 업로드 팝업창에서 파일을 업로드 합니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-20.png&quot; width=&quot;685&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

- 테스트할 파일을 업로드하면 **무료 테스트 횟수 300회**에 대한 안내를 볼 수 있습니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-21.png&quot; width=&quot;485&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

### 테스트 결과
테스트 결과 화면에서는 왼쪽에 업로드된 이미지 파일의 판독 영역을 볼 수 있고 오른쪽에는 판독 영역에서 판독한 텍스트를 확인할 수 있습니다.

{% include image.html file=&quot;ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide-22.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Clova OCR 서비스 중에서 Template OCR을 사용하는 방법 안내&quot; caption=&quot;&quot; %}

## 요금관련 주의 사항

{% include callout-v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; General OCR 및 Free 서비스 플랜을 제외한 모든 서비스 플랜의 경우 CLOVA OCR API 호출을 하지 않아도 기본 유지 비용이 발생하므로 주의해 주십시오.&lt;br /&gt;
&amp;#8259; CLOVA OCR API 호출 수는 서비스 플랜별 제공 건수가 다르며 포함 구간 초과 시 추가 비용이 발생하므로 주의해 주십시오.&lt;br /&gt;
&amp;#8259; Template OCR의 1회 호출 기준은 빌더에서 설정한 템플릿의 인식 영역의 수(최대 50개)입니다. 초과 시 추가 과금이 발생합니다. &lt;예시&gt; Template의 Box 영역의 수가 130개인 경우 3회 API 호출로 과금&lt;br /&gt;
&amp;#8259; Batch 기능 이용 시 긴 이미지, 표 추출 등 설정에 따라 추가 비용이 발생하므로 주의해 주십시오.
&quot; %}



## 참고 URL
1.  Ncloud Cloud Outbound Mailer 기본 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/email-email-1-1&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/email-email-1-1&lt;/a&gt;

2.  Ncloud Cloud Outbound Mailer 도메인 인증 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/cloudoutboundmailer-use-domain&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/cloudoutboundmailer-use-domain&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}  </description>
            <pubDate>Wed, 14 Feb 2024 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/ai-services/ncloud-ai-services-clova-ocr-template-ocr-guide.html</guid>
            
            <category>ai</category>
            
            <category>auth</category>
            
            
        </item>
        
        <item>
            <title>Cloud Outbound Mailer로 대량 메일 발송하는 방법</title>
            <description>## 개요
네이버 클라우드 서비스 중에서 각 종 공지나 이벤트, 마케팅으로 회원들에게 대량의 메일을 발송해야 할 때 사용할 수 있는 것이 Cloud Outbound Mailer 입니다.  
대량 메일을 발송하는 방법은 여러가지 있지만, 그 중에서도 가장 자주, 간편하게 사용하는 것이 Excel 등의 파일을 업로드 해서 발송하는 방법입니다.  


## 이용 신청
Cloud Outbound Mailer는 먼저 이용신청을 하셔야 합니다.
[Console] - [Cloud Outbound Mailer] - [Mailing list] 에서 [이용 신청] 버튼을 클릭하시면 됩니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_01.jpg&quot; width=&quot;850&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}

다음으로 서비스 이용약관에 동의하시면 됩니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_02.jpg&quot; width=&quot;850&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}

## 도메인 인증

{% include warning.html title=&quot;도메인 인증&quot; content=&quot;
Gmail에서는 2024년 2월부터 새로운 이메일 발신자 가이드라인을 적용하면서 도메인 인증을 받지 않은 경우 메일이 스팸처리되거나 제대로 전송되지 않을 수 있다고 공지하고 있습니다. 그래서 Ncloud에서도 도메인 인증을 받아야만 Gmail로 메일 발송할 수 있도록 하고 있습니다. 그러므로 메일 발송 전에 도메인 인증을 받는 것을 권장합니다.&lt;br /&gt;&lt;br /&gt;
- &lt;a href=&apos;/application-service/ncloud-application-service-cloud-outbound-mailer-domain-authentication.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;Cloud Outbound Mailer 도메인 인증 방법 3가지(SPF, DKIM, DMARC) 안내 바로 가기&lt;/a&gt;
&quot; %}


## 메일 작성
메일링 리스트 화면에서 발송하기 버튼을 클릭합니다.
{% include image.html file=&quot;application-service/cloud_outbound_mailer_03.jpg&quot; width=&quot;850&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}


메일 작성-발송하기 화면입니다.  
이중에서 보내는 메일주소, 제목, 내용, 받는 사람은 필수 입력 사항입니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_01.jpg&quot; width=&quot;850&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}


[대량 발송용 입력양식 파일다운로드]와 [대량 발송용 파일 선택]은 [보내는 메일 주소]와 [제목], [내용] 을 입력해야 활성화 됩니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_02.jpg&quot; width=&quot;850&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}

### 대량메일 발송용 입력양식
Cloud Outbound Mailer에서 제공하는 대량메일 발송용 입력양식을 다운 받아서 보면, [수신자 Email 주소], [NAME] 이렇게 2가지 항목으로 구성되어 있습니다.  

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_03.jpg&quot; width=&quot;687&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}


그 외에도 필요한 항목들을 추가해서 사용할 수 있습니다. 여기서는 [GRADE], [GIFT	] 항목을 추가해서 테스트 해보겠습니다. 
추가 항목의 이름은 어떤 것이든 상관없습니다. 실제 메일 내용에서 동일한 이름을 사용하기만 하면 문제 없습니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_04.jpg&quot; width=&quot;698&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}


### 보내는 이름, 보내는 메일주소, 제목 입력
우선, 보내는 이름과 보내는 메일주소, 제목을 입력합니다.  
제목에는 대량 메일 수신자들의 이름이 들어가도록 위에서 확인한 입력 양식에 있던 이름에 해당하는 [NAME] 필드가 들어갈 수 있게 **${NAME} 코드를 입력**합니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_05.jpg&quot; width=&quot;806&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}


### 내용 입력
내용은 직접 입력해도 되고 별도로 제작된 html 파일을 이용할 수도 있는데 Cloud Outbound Mailer에서는 html 파일 업로드는 지원하지 않습니다.  
그러므로 html 소스를 직접 복사해서 화면에 입력해야 합니다.  다음과 같은 샘플용 html을 준비해서 &lt;body&gt;와 &lt;/body&gt;태그 사이에 있는 내용을 복사해서 에디터의 html모드에 붙여넣습니다.  

{% include tip.html content=&quot;스타일은 css 파일이나 style태그를 사용하지 말고 가급적 태그 안에 inline으로 적용하는 것이 좋습니다. 
메일 서비스 별로 head 태그만 없애는 곳도 있고, style태그를 모두 없애거나, body태그 안쪽의 내용만 남기고 모두 없애는 곳도 있기 때문에 inline 형식으로 적용하는 것이 가장 안전합니다.&quot; %}

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_06.jpg&quot; width=&quot;800&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}

복사한 html을 Editor 모드로 바꾸면 다음과 같이 보입니다.  
여기서 위에서 준비한 입력양식 Excel 파일에 있던 ${NAME}, ${GRADE}, ${GIFT} 항목을 적절하게 배치해서 입력해두었습니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_07.jpg&quot; width=&quot;800&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}


### 대량메일 수신자 파일 등록, 확인 후 발송
위에서 준비했던 대량메일 수신자 정보가 들어있는 Excel 파일을 등록하고 [확인 후 발송] 버튼을 클릭합니다.  
바로 발송을 해도 되지만 그것보다는 메일 내용이 제대로 표시되는지, 수신자 목록은 문제 없이 로딩되었는지 확인 한 후에 발송하는 것이 안전합니다.  

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_08.jpg&quot; width=&quot;800&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}


## 발송 준비
확인 후 발송을 선택하면 이렇게 [발송 준비] 상태로 리스트에 나타납니다.  
이 상태에서 수신자와 메일 내용이 올바르게 설정되었는지 확인하기 위해 [수신자별 목록] 탭을 선택합니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_09.jpg&quot; width=&quot;850&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}


### 수신자별 목록
수신자별 목록을 살펴보면 다음과 같이 나옵니다.  Excel 파일에 등록해 두었던 이름과 이메일 주소가 문제없이 나타납니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_10.jpg&quot; width=&quot;850&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}

### 메일 내용 확인
수신자별 목록에서 하나를 선택하면 상세 내용이 나오는데, 그 중에서 아래쪽에 있는 [내용보기] 버튼을 클릭해서 메일 본문 내용도 문제가 없는지 확인합니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_11.jpg&quot; width=&quot;800&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}

내용 보기를 하시면 아래와 같이 Excel 파일에 등록해 두었던  [NAME], [GRADE], [GIFT] 항목들이 문제없이 설정되어 표시된 것을 확인할 수 있습니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_12.jpg&quot; width=&quot;800&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}


## 메일 발송
이제 다시 [요청별 목록]으로 돌아와서 [즉시 발송] 버튼을 클릭해 메일을 발송합니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_13.jpg&quot; width=&quot;850&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}

### 메일 도착 확인
실제 존재하는 메일 주소로 발송해보면 이렇게 메일이 잘 들어온 것을 확인할 수 있습니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_bulk_mail_14.jpg&quot; width=&quot;800&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}


## 메일 발송 도메인
메일 발송은 잘되었고, 도착도 잘했는데 궁금한 것이 한가지 생깁니다.  
과연 메일 발송 도메인은 어떤 것일까?  그래서 구글 계정으로 보낸 메일에서 발송 도메인을 확인해보았습니다.  
도메인은 **email.ncloud.com** 인 것을 확인할 수 있습니다.

{% include image.html file=&quot;application-service/cloud_outbound_mailer_00.jpg&quot; width=&quot;800&quot; alt=&quot;Ncloud Cloud Outbound Mailer로 대량 메일 발송하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
&lt;a href=&quot;https://guide.ncloud-docs.com/docs/email-email-1-2&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/email-email-1-2&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}  </description>
            <pubDate>Fri, 02 Feb 2024 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/application-service/ncloud_application_service_cloud_outbound_mailer_bulk_mail_send.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/application-service/ncloud_application_service_cloud_outbound_mailer_bulk_mail_send.html</guid>
            
            <category>application</category>
            
            <category>mail</category>
            
            
        </item>
        
        <item>
            <title>Kubernetes Service 클러스터 생성 및 제어 가이드 | Linux</title>
            <description>## 개요
Ncloud (네이버 클라우드) VPC 환경에서 Kubernetes(쿠버네티스) 서비스를 생성하고 **Linux 환경에서 제어하는 방법**에 대해 소개합니다.

## 쿠버네티스란?
쿠버네티스(Kubernetes, K8S)는 배포, 스케일링, 그리고 컨테이너화된 애플리케이션의 관리를 자동화 해주는 오픈 소스 컨테이너 오케스트레이션 엔진으로 
구글에서 처음 개발하기 시작했으나 현재는 구글이 오픈소스 프로젝트로 공개한 상태입니다.

## 특징
쿠버네티스는 다음과 같은 특징이 있으며, 자세한 내용은 쿠버네티스 공식 페이지를 참고하시기 바랍니다.

&lt;a href=&quot;https://kubernetes.io/ko/docs/home/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://kubernetes.io/ko/docs/home/&lt;/a&gt;

- 서비스 디스커버리와 로드 밸런싱
- 스토리지 오케스트레이션
- 자동화된 롤아웃과 롤백
- 자동화된 빈 패킹(bin packing)
- 자동화된 복구(self-healing)
- 시크릿과 구성 관리


## 사전 준비
먼저 쿠버네티스 클러스터에 사용할 **전용 VPC와 Private 또는 Public Subnet 그리고, Load Balancer용 Subnet**이 필요합니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-36.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

{% include callout-v2.html type=&quot;warning&quot; level=&quot;3&quot; content=&quot;IP 대역(10.0.0.0/8,172.16.0.0/12,192.168.0.0/16) 내에서 /17~/26 범위의 Subnet, 로드밸런서 전용 Subnet이 필요합니다.&lt;br/&gt;&lt;br/&gt;
Docker Bridge 대역의 충돌을 방지하기 위해 172.17.0.0/16 범위 내의 Private Subnet, 로드밸런서 전용Subnet은 선택할 수 없습니다.&quot; %}

## 쿠버네티스 서비스 위치
Ncloud 쿠버네티스 서비스는 [콘솔] - [Services] - [Containers]에 위치하고 있습니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-33.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## 클러스터 생성 

VPC와 Subnet이 준비되었다면, 다음으로 [Kubernetes Sevice] - [Cluster]에서 생성하기를 클릭합니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-34.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## 클러스터 설정
생성할 클러스터의 정보를 설정해줍니다. 
**네트워크 타입은 Private과 Public 중에서 선택**할 수 있습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;Kubernetes Service를 위한 ACG는 자동으로 생성됩니다.&quot; %}
{% include callout-v2.html type=&quot;primary&quot; level=&quot;2&quot; content=&quot;현재 지원되고 있는 Kubernetes 버전은 [**1.26.10**], [**1.27.9**] 입니다.&quot;%}

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-35.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

### NAT Gateway 생성
`Private Subnet을 선택했을 경우`에는 아래와 같이 NAT Gateway 생성 안내 팝업이 나타나는데,  
NAT Gateway를 생성해야 아웃바운드 트래픽을 활성화할 수 있기 때문입니다.

{% include image.html file=&quot;compute/kubernetes/ncp_server_kubernetes_start_guide_10.jpg&quot; width=&quot;490&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

팝업에서 링크를 클릭해서 NAT Gateway 화면으로 이동해 NAT Gateway를 생성합니다.

{% include callout_v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;NAT Gateway 생성 가이드는 아래 문서를 참고하시기 바랍니다. &lt;br /&gt;&lt;br /&gt;
- &lt;a href=&apos;/networking/ncloud_networking_natgw_routetb.html&apos; target=&apos;_blank&apos;&gt;VPC 환경에서 NAT Gateway 설정하기&lt;/a&gt;&quot; %}

{% include image.html file=&quot;compute/kubernetes/ncp_server_kubernetes_start_guide_11.jpg&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## 노드풀 설정
노드풀 이름을 입력하고, 서버 이미지와 서버 타입을 선택하고 [추가] 버튼을 클릭합니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;현재 지원되고 있는 OS는 [**ubuntu 18.04**], [**ubuntu 20.04**] 입니다.&quot;%}

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-37.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## 인증키 설정
다음으로 워커노드의 인증키를 설정 합니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-38.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## 최종 확인
설정 정보를 최종적으로 확인한 후 생성버튼을 클릭하여 클러스터를 생성합니다.

{% include callout-v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;쿠버네티스 클러스터 생성은 30분 정도 소요되므로 여유를 갖고 기다리시면 됩니다.&quot;%}

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-39.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## 생성 완료
생성이 완료되면 아래와 같이 클러스터와 노드풀의 정보를 확인할 수 있습니다.  
클러스터 정보 중에서 클러스터 **UUID는 아래쪽에서 IAM 인증 Kubeconifg 파일을 생성할 때 필요**하니 확인해두시기 바랍니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-40.png&quot; width=&quot;845&quot; height=&quot;870&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

[Server] 메뉴에 가면 노드풀 설정에 따라 생성된 서버를 확인할 수 있습니다.  
(서버 이름은 노드풀 이름으로 입력한 문자열 기준으로 생성되는데, 여기서는 test123-O-OOO 이런 식으로 생성되었습니다.)

그리고, 추가로 테스트를 위한 CentOS 서버(k8s-test)를 생성했습니다.

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## IAM 인증 설정
클러스터를 제어하기 위해서는 네이버 클라우드 쿠버네티스 서비스에서 제공하는 IAM 인증을 설정해야 합니다.

### ncp-iam-authenticator 설치
Ncloud에서 제공하는 ncp-iam-authenticator 바이너리를 통해 iam 인증 config 파일을 생성 할 수 있습니다.

- ncp-iam-authenticator 바이너리를 다운로드 합니다.

```bash
~# curl -o ncp-iam-authenticator https://kr.object.ncloudstorage.com/nks-download/ncp-iam-authenticator/v1.0.5/linux/amd64/ncp-iam-authenticator
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-14.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


- 다운받은 바이너리에 실행 권한을 추가 합니다.

```bash
~# chmod +x ./ncp-iam-authenticator
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


- bin/ncp-iam-authenticator 파일을 생성하고  $PATH에 추가합니다.
- bash Profile에 추가 합니다.

```bash
~# mkdir -p $HOME/bin &amp;&amp; cp ./ncp-iam-authenticator $HOME/bin/ncp-iam-authenticator &amp;&amp; export PATH=$PATH:$HOME/bin
```
```bash
~# echo &apos;export PATH=$PATH:$HOME/bin&apos; &gt;&gt; ~/.bash_profile
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-16.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


- ncp-iam-authenticator가 정상 작동 하는지 테스트 합니다. 

```bash
~# ncp-iam-authenticator help
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-17.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

## API Access Key 생성
[**Sub Account**] - [**Sub Accounts**]에서 본인의 계정을 선택하고, [**API Gateway 접근**] 권한을 추가하면 계정 정보 화면에 아래와 같이 [**Access Key**] 탭이 나타나는데[**추가**] 버튼을 클릭하면 [**Access Key**]와 [**Secret Key**]를 생성할 수 있습니다.

{% include warning.html title=&quot;&quot; content=&quot;
메인 계정은 최대 권한을 가지기 때문에 메인 계정으로 생성한 API도 메인 계정과 동일한 최대 권한을 가지게 됩니다. 그러므로 메인 계정으로 API Key를 생성하게 되면 이 Key가 유출되었을 때 심각한 문제가 생기기 때문에 **반드시 서브 계정에서 API Key를 생성해야** 합니다.
&quot; %}

{% include image.html file=&quot;management/ncloud-management-sub-account-14.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## Kubeconfig 파일 생성

### 환경변수 설정
API 인증키를 2가지 방법 중 하나를 이용해 환경변수에 등록합니다.  
  
- **첫번째 방법: OS 환경 변수 설정**

```bash
~# export NCLOUD_ACCESS_KEY={Ncloud API AccessKey}
~# export NCLOUD_SECRET_KEY={Ncloud API SecretKey}
~# export NCLOUD_API_GW=https://ncloud.apigw.ntruss.com
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-18.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


- **두번째 방법: 사용자 환경 홈 디렉터리에 configure 설정**

```bash
~# mkdir .ncloud 
~# cat &lt;&lt; EOF &gt; .ncloud/configure
[DEFAULT]
ncloud_access_key_id = {Ncloud API AccessKey}
ncloud_secret_access_key = {Ncloud API SecretKey}
ncloud_api_url = https://ncloud.apigw.ntruss.com
EOF
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-19.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

### Kubeconifg 파일 생성
환경변수에 등록이 되었다면 파일을 생성 할 차례입니다.  
아래 명령어로 클러스터에 대한 IAM 인증 Kubeconifg 파일을 생성합니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;클러러스터 UUID 값은 클러스터 상세보기의 [클러스터 이름 (UUID)] 에서  확인 할수 있습니다.&quot; %}

``` bash
~# ncp-iam-authenticator create-kubeconfig --region &lt;region-code&gt; --clusterUuid &lt;cluster-uuid&gt; --output &lt;FileName&gt;.yaml

## 예시
~# ncp-iam-authenticator create-kubeconfig --region KR --clusterUuid 12345678-1234-1234-1234-1234567890 --output kubeconfig.yaml
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-20.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## kubectl 설치
쿠버네티스 클러스터를 제어할 kubectl을 설치하기 위해 필요한 파일을 다운로드 받습니다.

``` bash
~# curl -LO &quot;https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl&quot;
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-21.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

다운 받은 파일을 설치합니다.

``` bash
~# sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

# 버전 확인
~# kubectl version --client --output=yaml
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-22.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}



## kubectl 실행
생성한 IAM 인증 kubeconfig 파일을 이용하여 kubectl 명령어를 테스트하여 정상 동작 하는지 확인 합니다.  
실행하면 아래와 같이 현재 동작 중인 노드 서버 리스트를 확인할 수 있습니다.

```bash
~# kubectl get node --kubeconfig kubeconfig.yaml
```
{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-23.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}

### 실행 명령어 단축
위와 같은 kubectl 명령은 뒤쪽에 kubeconfig 환경 설정 파일까지 입력해야 해서 다소 불편한데, 간단하게 줄일 수 있는 방법이 있습니다.  

우선 만들어진 kubeconfig.yaml 파일을 .kube/ 디렉토리 아래에 config로 이름을 바꾸어 이동 혹은 복사 합니다.

```bash
~# cp kubeconfig.yaml .kube/config
```

이렇게 하면 Kubectl을 사용 시 아래와 같이 --kuebeconfig 명령어 없이 사용 할 수 있습니다.

```bash
~# kubectl get node
```

{% include image.html file=&quot;containers/ncloud-containers-kubernetes-start-guide-24.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Kubernetes Service 클러스터 생성 및 제어하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1. 쿠버네티스 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/k8s-k8soverview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/k8s-k8soverview&lt;/a&gt;

2. 클러스터 이용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/k8s-k8suse-cluster&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/k8s-k8suse-cluster&lt;/a&gt;

3. kubectl 설치 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/k8s-k8sstart#Kubectl%EC%84%A4%EC%B9%98&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/k8s-k8sstart#Kubectl&lt;/a&gt;

4. Windows 환경에서 쿠버네티스 제어하기
	- &lt;a href=&quot;/containers/ncloud-containers-kubernetes-service-start-guide-windows.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/containers/ncloud-containers-kubernetes-service-start-guide-windows.html&lt;/a&gt;  	


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}</description>
            <pubDate>Thu, 01 Feb 2024 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/containers/ncloud-containers-kubernetes-service-start-guide-linux.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/containers/ncloud-containers-kubernetes-service-start-guide-linux.html</guid>
            
            <category>kubernetes</category>
            
            <category>vpc</category>
            
            
        </item>
        
        <item>
            <title>PHP로 Archive Storage API 인증 토큰 생성하는 방법</title>
            <description>## 개요
네이버 클라우드(Ncloud) Archive Storage API를 이용하려고 할 때 먼저 인증 토큰을 생성하고 생성된 토큰을 이용해서 API로 Archive Storage에 접근해야 합니다. 
여기서는 PHP로 API 인증 토큰을 생성하는 방법에 대해 우선 전체 소스코드를 살펴보고 다음으로 주요 코드를 상세하게 살펴보겠습니다.

## API 정보
- OpenStack Swift API : 2.15.1 (Pike)
- OpenStack Keystone V3 API : v3.8

## 인증 토큰 생성 코드
``` php
&lt;?php

  // 전송해야 할 설정값
  $ncloud_accesskey = &quot;네이버 클라우드 AccessKey&quot;;
  $ncloud_secretkey = &quot;네이버 클라우드 SecretKey&quot;;
  $ncloud_domain_id = &quot;Archive Storage 도메인 ID&quot;;
  $ncloud_project_id = &quot;Archive Storage 프로젝트 ID&quot;;

  $api_server = &quot;https://kr.archive.ncloudstorage.com:5000&quot;;
  $api_url = &quot;/v3/auth/tokens&quot;;		 

  // http 호출 헤더값 설정
  $http_header = array();
  $http_header[0] = &quot;Content-Type: application/json&quot;;

  // 전송할 값들을 배열 형태로 저장한다
  $postvars = [
  	&quot;auth&quot;=&gt; [
  		&quot;identity&quot;=&gt; [
  			&quot;methods&quot;=&gt; [
  				&quot;password&quot;
  			],
  			&quot;password&quot;=&gt; [
  				&quot;user&quot;=&gt; [
  					&quot;name&quot;=&gt; $ncloud_accesskey,
  					&quot;password&quot;=&gt; $ncloud_secretkey,
  					&quot;domain&quot;=&gt; [
  						&quot;id&quot;=&gt; $ncloud_domain_id
  					]
  				]
  			]
  		],
  		&quot;scope&quot;=&gt; [
  			&quot;project&quot;=&gt; [
  				&quot;id&quot;=&gt; $ncloud_project_id
  			]
  		]
  	]
  ];

  // 배열 형태로 저장한 값들을 json 형태로 변환해서 전송
  $json_portvars = json_encode($postvars);

  // api 호출
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $api_server.$api_url);
  curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);	
  curl_setopt($ch, CURLOPT_POST, TRUE); //POST 방식으로 호출
  curl_setopt($ch, CURLOPT_HTTPHEADER, $http_header);
  curl_setopt($ch, CURLOPT_HEADER, TRUE); //response에 header 값도 수신
  curl_setopt($ch,CURLOPT_POSTFIELDS, $json_portvars);

  $response = curl_exec($ch);

  curl_close($ch);

  if ($response)
  {
  	// X-Subject-Token 토큰 값은 request body가 아닌 header로 전달되므로
  	// header를 분리해서 배열에 저장한다 
  	$headers = array();
  	$header_text = substr($response, 0, strpos($response, &quot;\r\n\r\n&quot;));

  	foreach (explode(&quot;\r\n&quot;, $header_text) as $i =&gt; $line) 
  	{
  		if ($i === 0)
  		{
  		   $headers[&quot;http_code&quot;] = $line;
  		}
  		else
  		{
  		   list ($key, $value) = explode(&quot;: &quot;, $line);
  		   $headers[$key] = $value;
  		}
  	}
	
	// 인증 토큰 확인
  	$x_auth_token = $headers[&quot;X-Subject-Token&quot;]; 
  	echo($x_auth_token);

  	//var_dump($headers);
  	//echo(&quot;&lt;hr&gt;&quot;);
  	//var_dump($response);
  } 
  else 
  {
  	echo &quot;Curl error: &quot; . curl_error($ch);
  }
?&gt;
```

## 코드 상세 설명
&lt;br /&gt;
### API 인증 Key 생성
[**Sub Account**] - [**Sub Accounts**]에서 본인의 계정을 선택하고, [**API Gateway 접근**] 권한을 추가하면 계정 정보 화면에 아래와 같이 [**Access Key**] 탭이 나타나는데[**추가**] 버튼을 클릭하면 [**Access Key**]와 [**Secret Key**]를 생성할 수 있습니다.

{% include warning.html title=&quot;&quot; content=&quot;
메인 계정은 최대 권한을 가지기 때문에 메인 계정으로 생성한 API도 메인 계정과 동일한 최대 권한을 가지게 됩니다. 그러므로 메인 계정으로 API Key를 생성하게 되면 이 Key가 유출되었을 때 심각한 문제가 생기기 때문에 **반드시 서브 계정에서 API Key를 생성해야** 합니다.
&quot; %}

{% include image.html file=&quot;management/ncloud-management-sub-account-14.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

### Archive Storage API 이용 정보
``` php
  $ncloud_domain_id = &quot;Archive Storage 도메인 ID&quot;;
  $ncloud_project_id = &quot;Archive Storage 프로젝트 ID&quot;;
```
Archive Storage API 이용을 위한 Domain ID와 Project ID는 [네이버 클라우드 포탈] - [Archive Storage]에서 [API 이용 정보 확인] 버튼을 클릭하면 확인할 수 있습니다.

{% include image.html file=&quot;storage/ncloud_storage_archive_storage_api_access_token_create_01.png&quot; width=&quot;770&quot; alt=&quot;PHP로 Ncloud Archive Storage API 인증 토큰 생성하는 방법&quot; caption=&quot;&quot; %}

[API 이용 정보 확인] 창에서 Domain ID와 Project ID를 확인하고, PHP 소스코드에 입력합니다.

{% include image.html file=&quot;storage/ncloud_storage_archive_storage_api_access_token_create_02.png&quot; width=&quot;500&quot; alt=&quot;PHP로 Ncloud Archive Storage API 인증 토큰 생성하는 방법&quot; caption=&quot;&quot; %}

### API 서버와 URL 설정
``` php
  $api_server = &quot;https://kr.archive.ncloudstorage.com:5000&quot;;
  $api_url = &quot;/v3/auth/tokens&quot;;
```
Archive Storage API 서버와 토큰 생성을 위한 URL 정보는 위와 같습니다.

### HTTP 호출 header 값 설정
``` php
  $http_header = array();
  $http_header[0] = &quot;Content-Type: application/json&quot;;
```
HTTP header에는 json 형태로 호출한다는 것을 설정합니다.

### 전송할 값 설정
``` php
  // 전송할 값들을 배열 형태로 저장
  $postvars = [
  	&quot;auth&quot;=&gt; [
  		&quot;identity&quot;=&gt; [
  			&quot;methods&quot;=&gt; [
  				&quot;password&quot;
  			],
  			&quot;password&quot;=&gt; [
  				&quot;user&quot;=&gt; [
  					&quot;name&quot;=&gt; $ncloud_accesskey,
  					&quot;password&quot;=&gt; $ncloud_secretkey,
  					&quot;domain&quot;=&gt; [
  						&quot;id&quot;=&gt; $ncloud_domain_id
  					]
  				]
  			]
  		],
  		&quot;scope&quot;=&gt; [
  			&quot;project&quot;=&gt; [
  				&quot;id&quot;=&gt; $ncloud_project_id
  			]
  		]
  	]
  ];

  // 배열 형태로 저장한 값들을 json 형태로 변환해서 전송
  $json_portvars = json_encode($postvars);
```
네이버 클라우드 AccessKey, SecretKey, Archive Storage 도메인 ID, 프로젝트 ID를 전송하기 위해 지정된 형태의 배열로 저장한 후에 json 형태로 변환합니다. 
물론 처음부터 json 형태로 저장해도 됩니다.

### API 호출
``` php
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $api_server.$api_url);
  curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);	
  curl_setopt($ch, CURLOPT_POST, TRUE); //POST 방식으로 호출
  curl_setopt($ch, CURLOPT_HTTPHEADER, $http_header);
  curl_setopt($ch, CURLOPT_HEADER, TRUE); //response에 header 값도 수신
  curl_setopt($ch,CURLOPT_POSTFIELDS, $json_portvars);

  $response = curl_exec($ch);
  curl_close($ch);
```
이제 위에서 준비한 값들을 사용해서 API를 호출합니다.  
curl_setopt($ch, CURLOPT_HEADER, TRUE); 는 Response에 body 뿐만 아니라 header 값도 수신하기 위해 설정합니다.

### API 인증 토큰 분리
``` php
  if ($response)
  {
  	$headers = array();
  	$header_text = substr($response, 0, strpos($response, &quot;\r\n\r\n&quot;));

  	foreach (explode(&quot;\r\n&quot;, $header_text) as $i =&gt; $line) 
  	{
  		if ($i === 0)
  		{
  		   $headers[&quot;http_code&quot;] = $line;
  		}
  		else
  		{
  		   list ($key, $value) = explode(&quot;: &quot;, $line);
  		   $headers[$key] = $value;
  		}
  	}
	
	// 인증 토큰 확인
  	$x_auth_token = $headers[&quot;X-Subject-Token&quot;]; 
  	echo($x_auth_token);

  	//var_dump($headers);
  	//echo(&quot;&lt;hr&gt;&quot;);
  	//var_dump($response);
  } 
```
API 인증 토큰값은 X-Subject-Token이라는 이름으로 request body가 아닌 header로 전달되므로 header를 분리해서 배열에 저장합니다.
실제 전송되는 header 값은 아래와 같은 형태입니다.
``` bash
HTTP/1.1 201 Created 
Date: Thu, 11 Nov 2021 07:59:32 GMT 
Server: Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips mod_wsgi/3.4 Python/2.7.5 
X-Subject-Token: gAAAAABhjM1lbeTW3Vq......중간 생략 ......txWYsWGrC1siPt8CE0rs_KgNMTQ 
Vary: X-Auth-Token 
x-openstack-request-id: req-1ce......중간 생략 ......a85eb5b 
Content-Length: 1762 
Content-Type: application/json
```

## 인증 토큰 유효 시간
API 인증 토큰의 유효 시간은 24시간이고 삭제 요청을 호출하면 삭제할 수 있습니다.

## 참고 URL
1.  Archive Storage API 기본 가이드
	- &lt;a href=&quot;https://api.ncloud-docs.com/docs/common-archivestorageapi-archivestorageapi&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://api.ncloud-docs.com/docs/common-archivestorageapi-archivestorageapi&lt;/a&gt;

2.  OpenStack Keystone V3 API 가이드
	- &lt;a href=&quot;https://docs.openstack.org/api-ref/identity/v3/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.openstack.org/api-ref/identity/v3/&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}</description>
            <pubDate>Wed, 31 Jan 2024 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/storage/ncloud_storage_archive_storage_api_access_token_create.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/storage/ncloud_storage_archive_storage_api_access_token_create.html</guid>
            
            <category>object_storage</category>
            
            <category>api</category>
            
            <category>auth</category>
            
            <category>php</category>
            
            
        </item>
        
        <item>
            <title>Ncloud Cloud Outbound Mailer 도메인 인증 방법 3가지(SPF, DKIM, DMARC) 안내</title>
            <description>## 개요  
Ncloud (네이버 클라우드) Cloud Outbound Mailer를 사용할 때 도메인을 등록하고 **SPF(Sender Policy Framework), DKIM(DomainKeys Identified Mail), DMARC(Domain-based Message Authentication, Reporting, and Conformance)** 인증을 받으면 발신자 자격을 입증할 수 있고 타인이 도메인을 사칭해 메일을 발송하는 것을 막을 수 있습니다.  

또한, 인증된 도메인임을 증명함으로써 수신측 메일 서비스에서 차단되거나 스팸 처리될 가능성도 매우 낮아지는 이점이 있으므로 가능하면 도메인 인증을 하는 것이 좋습니다.


{% include warning.html title=&quot;Gmail 공지&quot; content=&quot;
특히 Gmail에서는 2024년 2월부터 새로운 이메일 발신자 가이드라인을 적용하면서 도메인 인증을 받지 않은 경우 메일이 스팸처리되거나 제대로 전송되지 않을 수 있다고 공지하고 있습니다. &lt;br /&gt;&lt;br /&gt;
- Gmail 공지 : &lt;a href=&apos;https://support.google.com/a/answer/81126?sjid=17985022532965146045-AP&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;https://support.google.com/a/answer/81126?sjid=17985022532965146045-AP&lt;/a&gt;
&quot; %}

## 도메인 인증 종류
- **SPF(Sender Policy Framework) 인증**: 메일 발신자 정보가 DNS에 등록된 메일 서버 정보와 일치하는지 확인하여 발신자 위조 여부를 확인합니다.
- **DKIM(DomainKeys Identified Mail) 인증**: 메일 헤더에 디지털 서명을 추가하여 메일의 위변조 여부를 확인합니다.
- **DMARC(Domain-based Message Authentication, Reporting, and Conformance) 인증**: SPF 및 DKIM과 함께 작동하여 메일 발신자를 인증하면서, SPF 및 DKIM 인증에 실패한 도메인의 발신 메일을 어떻게 처리할지 설정할 수 있습니다. 

{% include callout-v2.html type=&quot;info&quot; level=&quot;3&quot; content=&quot;위 3가지 인증을 모두 적용해야 메일이 문제 없이 도착할 수 있습니다.&quot; %}

## 도메인 등록
[**Cloud Outbound Mailer**] - [**Domain Management**]에서 [**도메인 등록**] 버튼을 클릭합니다.  
이미 도메인이 등록되어 있다면 다음 단계로 이동합니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

### 등록 절차
1. 이메일 발송 주소로 사용할 도메인을 입력 후, 인증 토큰 생성 버튼을 클릭합니다.
2. 인증 토큰이 생성되면 [복사하기] 버튼을 클릭하여 인증 토큰 정보를 복사합니다.
3. [등록] 버튼을 클릭하여 도메인 등록을 완료합니다.
4. 복사한 인증 토큰을 등록하신 도메인 DNS의 TXT 레코드에 추가합니다.
5. Domain Management 메뉴에서 등록된 도메인 선택 후, [인증] 버튼을 클릭합니다.
6. DNS 변경의 적용에는 시간이 소요될 수 있습니다. 정상적으로 TXT 레코드 등록을 완료했으나 인증이 되지 않는 경우 잠시 후 다시 [인증] 버튼을 클릭해 주세요.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-02.png&quot; width=&quot;685&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

### 인증 대기
등록을 완료하면 아래와 같이 미인증 상태로 인증대기 중인 화면을 확인할 수 있습니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-03.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

### 인증 토큰 적용
해당 도메인을 등록한 DNS 서비스 업체에서 [**인증 토큰**]을 등록하면 되는데, 여기서는 Ncloud의 DNS 서비스인 [**Global DNS**]에서 아래와 같이 등록했습니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-04.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

### 인증 확인
DNS 서비스에 [**인증 토큰**]을 등록하고 잠시 기다렸다가 [**도메인 인증 토큰**] 항목에 있는 [**인증**] 버튼을 클릭하면 아래와 같이 [**인증 일시**] 시각을 확인할 수 있습니다.  

인증에 실패했다는 메시지가 나타날 경우 조금 더 기다렸다가 다시 [**인증**] 버튼을 클릭해보고, 그래도 인증에 실패하면 DNS에 [**인증 토큰**]이 제대로 등록되었는지 확인해보시기 바랍니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-05.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

## SPF 인증
도메인 인증이 끝났으면 다음으로 [**SPF**] 인증을 해보겠습니다.  

**SPF(Sender Policy Framework) 인증**은 메일 발신자 정보가 DNS에 등록된 메일 서버 정보와 일치하는지 확인하여 발신자 위조 여부를 확인하기 위한 인증입니다.

- 우선 [**SPF 레코드**] 항목에 있는 [**보기**] 버튼을 클릭합니다. 

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-06.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

### 인증 레코드 확인
팝업에 나타난 인증 레코드를 복사합니다.

``` bash
v=spf1 include:email.ncloud.com ~all
```

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-07.png&quot; width=&quot;485&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

### DNS 레코드 등록
위에서 복사한 인증 레코드를 DNS에 등록합니다. 이때 기존에 등록된 SPF 레코드가 존재할 경우에는 기존 레코드 문자열에 포함해서 등록해야 합니다.

``` bash
# 신규 등록일 경우
v=spf1 include:email.ncloud.com ~all

# 다른 SPF 레코드가 존재할 경우 예시
v=spf1 ip4:123.123.123.123 include:email.ncloud.com ~all
```
{% tabs spf-auth %}

{% tab spf-auth 신규 등록일 경우 %}

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

{% endtab %}

{% tab spf-auth 다른 SPF 레코드가 존재할 경우 %}

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

{% endtab %}

{% endtabs %}

### 인증 확인
인증 레코드를 등록하고 잠시 기다렸다가 [**SPF 레코드**] 항목에 있는 [**인증**] 버튼을 클릭하면 아래와 같이 [**인증 일시**] 시각을 확인할 수 있습니다.  

인증에 실패했다는 메시지가 나타날 경우 조금 더 기다렸다가 다시 [**인증**] 버튼을 클릭해보고, 그래도 인증에 실패하면 DNS에 [**인증 레코드**]가 제대로 등록되었는지 확인해보시기 바랍니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-10.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

### 인증 사용
인증이 완료되었으면, 향후 [**Cloud Outbound Mailer**]에서 메일을 발송할 때 [**SPF 인증**]이 적용되도록 [**사용**]하기를 설정해야 합니다. 아래 스샷처럼 [**SPF 레코드**] 항목에 있는 [**사용**] 버튼을 클릭합니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-11.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

- [**SPF 인증**] 사용하기가 설정되면 아래와 같이 [**사용 중**] 상태로 바뀌면서 [**사용 중지**] 버튼이 활성화 됩니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-12.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

## DKIM 인증
다음으로 [**DKIM**] 인증을 해보겠습니다.  

**DKIM(DomainKeys Identified Mail) 인증**은 메일 헤더에 디지털 서명을 추가하여 메일의 위변조 여부를 확인하기 위한 인증입니다.

- 우선 [**DKIM**] 서명키를 확인하기 위해 [**DKIM 레코드**] 항목에 있는 [**보기**] 버튼을 클릭합니다. 

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

### 서명 키 확인
아래와 같이 팝업에 나타난 [**DKIM**] 서명키를 복사해서 DNS에 등록합니다.  


{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-14.png&quot; width=&quot;485&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; sub-class=&quot;docimage-no-bottom&quot; caption=&quot;&quot; %}

{% include callout-v2.html type=&quot;warning&quot; level=&quot;3&quot; content=&quot;DNS에 등록할 때 TXT 레코드의 호스트명은 반드시 **`mailer._domainkey`**를 사용해야 합니다.&quot; %}

{% include callout-v2.html type=&quot;info&quot; level=&quot;3&quot; content=&quot;
- TXT 레코드는 255자의 길이 제한이 있는데, Ncloud에서 제공하는 DKIM 서명키는 255자를 넘기 때문에 분할하여, multi-line으로 등록하셔야 합니다. &lt;br /&gt;
- Ncloud Global DNS를 사용할 경우에는 분할할 필요 없이 그대로 등록하면 자동으로 분할 등록되므로 편리합니다. &lt;br /&gt;
- DNS 설정에서 255자 이상의 TXT 레코드 등록하는 방법: &lt;a href=&apos;/networking/ncloud-networking-global-dns-configure-long-txt-record.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;https://docs.3rdeyesys.com/networking/ncloud-networking-global-dns-configure-long-txt-record.html&lt;/a&gt;
&quot; %}

### DNS 등록
아래와 같이 호스트명을 **`mailer._domainkey`**로 입력하고, [**DKIM**] 서명키를 등록했습니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-15.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

### 인증 사용
인증이 완료되었으면, 향후 [**Cloud Outbound Mailer**]에서 메일을 발송할 때 [**DKIM 인증**]이 적용되도록 [**사용**]하기를 설정해야 합니다. 아래 스샷처럼 [**DKIM**] 항목에 있는 [**사용**] 버튼을 클릭합니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-16.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

- [**DKIM 인증**] 사용하기가 설정되면 아래와 같이 [**사용 중**] 상태로 바뀌면서 [**사용 중지**] 버튼이 활성화 됩니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-17.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

## DMARC 인증
[**DMARC**] 인증은 다른 인증과 달리 레코드 값을 직접 설정해서 등록해야 합니다. 자세한 방법은 아래쪽에서 확인해보겠습니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-18.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

### DMARC 레코드 값 준비

1. DMARC 레코드 이름, 즉 호스트명은 반드시 **`_dmarc`**를 입력해야 합니다.
2. DMARC 레코드의 값은 아래와 같은 형식으로 구성됩니다.  
**예시: v=DMARC1; p=none; aspf=r; adkim=r; rua=mailto:report@example.com**

&lt;div class=&quot;col-sm-12&quot;&gt;
&lt;table class=&quot;simple_table col-sm-8&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;항목&lt;/th&gt;
      &lt;th&gt;입력 값 및 설명&lt;/th&gt;
      &lt;th&gt;필수 여부&lt;/th&gt;      
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
        &lt;td&gt;v&lt;/td&gt;
        &lt;td style=&quot;text-align:left;line-height:150%;&quot;&gt;
            버전을 의미&lt;br /&gt;
            &lt;span style=&quot;color:#C7254E;font-weight:bolder;&quot;&gt;DMARC1&lt;/span&gt;으로 입력
        &lt;/td&gt; 
        &lt;td&gt;필수&lt;/td&gt;       
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;p&lt;/td&gt;
        &lt;td style=&quot;text-align:left;line-height:150%;&quot;&gt;
            수신 서버에서 DMARC로 인증되지 않은 메일에 대한 처리 방법&lt;br /&gt;
            - &lt;span style=&quot;color:#C7254E;&quot;&gt;none:&lt;/span&gt; 조치하지 않고 메일 수신&lt;br /&gt;
            - &lt;span style=&quot;color:#C7254E;&quot;&gt;quarantine:&lt;/span&gt; 스팸 메일함으로 수신&lt;br /&gt;
            - &lt;span style=&quot;color:#C7254E;&quot;&gt;reject:&lt;/span&gt; 수신을 차단하고 반송 처리
        &lt;/td&gt; 
        &lt;td&gt;필수&lt;/td&gt;       
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;sp&lt;/td&gt;
        &lt;td style=&quot;text-align:left;line-height:150%;&quot;&gt;
            하위 도메인에서 전송된 메일에 대한 정책&lt;br /&gt;
            - &lt;span style=&quot;color:#C7254E;&quot;&gt;none:&lt;/span&gt; 조치하지 않고 메일 수신&lt;br /&gt;
            - &lt;span style=&quot;color:#C7254E;&quot;&gt;quarantine:&lt;/span&gt; 스팸 메일함으로 수신&lt;br /&gt;
            - &lt;span style=&quot;color:#C7254E;&quot;&gt;reject:&lt;/span&gt; 수신을 차단하고 반송 처리
        &lt;/td&gt; 
        &lt;td&gt;필수 아님&lt;/td&gt;       
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;aspf&lt;/td&gt;
        &lt;td style=&quot;text-align:left;line-height:150%;&quot;&gt;
            메일 정보와 spf 서명의 문자열 일치 여부 설정&lt;br /&gt;
            - &lt;span style=&quot;color:#C7254E;&quot;&gt;s:&lt;/span&gt; 모든 부분 일치&lt;br /&gt;
            - &lt;span style=&quot;color:#C7254E;&quot;&gt;r:&lt;/span&gt; (기본값) 부분 일치를 허용 (서브 도메인 허용)
        &lt;/td&gt; 
        &lt;td&gt;필수 아님&lt;/td&gt;       
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;adkim&lt;/td&gt;
        &lt;td style=&quot;text-align:left;line-height:150%;&quot;&gt;
            메일 정보와 dkim 서명의 문자열 일치 여부 설정&lt;br /&gt;
            - &lt;span style=&quot;color:#C7254E;&quot;&gt;s:&lt;/span&gt; 모든 부분 일치&lt;br /&gt;
            - &lt;span style=&quot;color:#C7254E;&quot;&gt;r:&lt;/span&gt; (기본값) 부분 일치를 허용 (서브 도메인 허용)
        &lt;/td&gt; 
        &lt;td&gt;필수 아님&lt;/td&gt;       
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;rua&lt;/td&gt;
        &lt;td style=&quot;text-align:left;line-height:150%;&quot;&gt;
            해당 도메인의 DMARC 처리 보고서를 수신할 이메일 주소&lt;br /&gt;            
            - 메일 주소 앞에 &lt;span style=&quot;color:#C7254E;&quot;&gt;mailto:&lt;/span&gt; 입력&lt;br /&gt;
            - 쉼표(,)를 연결하여 여러 이메일 주소 지정 가능
        &lt;/td&gt; 
        &lt;td&gt;필수 아님&lt;/td&gt;       
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;  
&lt;/div&gt;

&lt;br /&gt;

### DNS 등록
아래와 같이 호스트명을 **`_dmarc`**로 입력하고, [**DMARC**] 레코드를 등록했습니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-19.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

### 인증 확인
인증 레코드를 등록하고 잠시 기다렸다가 [**DMARC 인증**] 항목에 있는 [**인증 일시**] 시각이 나타나는 것을 확인할 수 있습니다. 

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-20.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

## 도메인 인증 결과 테스트
실제로 Gmail로 메일을 발송한 후 인증 결과를 테스트 해보겠습니다.  

Gmail 계정쪽으로 메일을 발송한 후 Gmail에 접속해서 도착한 메일을 선택하고 오른쪽 끝에 있는 [ &lt;i class=&quot;fa-solid fa-ellipsis-vertical&quot;&gt;&lt;/i&gt; ] 아이콘을 클릭하면 나타나는 메뉴에서 [**원본 보기**]를 선택합니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-21.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}

### 인증 PASS
메일의 [**원본 보기**]를 확인해보면 아래와 같이 [**SPF**], [**DKIM**], [**DMARC**] 3가지 인증 모두 **`PASS`** 즉, 인증이 정상적으로 완료되었다는 것을 알 수 있습니다.

{% include image.html file=&quot;application-service/application-service-cloud-outbound-mailer-domain-auth-22.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Cloud 
Outbound Mailer에서 도메인을 인증하는 방법 3가지(SPF, DKIM, DMARC)에 대한 안내&quot; caption=&quot;&quot; %}



## 참고 URL
1.  Ncloud Cloud Outbound Mailer 기본 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/email-email-1-1&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/email-email-1-1&lt;/a&gt;

2.  Ncloud Cloud Outbound Mailer 도메인 인증 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/cloudoutboundmailer-use-domain&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/cloudoutboundmailer-use-domain&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}  </description>
            <pubDate>Fri, 26 Jan 2024 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/application-service/ncloud-application-service-cloud-outbound-mailer-domain-authentication.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/application-service/ncloud-application-service-cloud-outbound-mailer-domain-authentication.html</guid>
            
            <category>mail</category>
            
            <category>auth</category>
            
            
        </item>
        
        <item>
            <title>DNS 설정에서 255자 이상의 TXT 레코드(SPF, DKIM, DMARC 등) 등록하는 방법</title>
            <description>## 개요
DNS 설정할 때 TXT 레코드의 설정 값은 일반적으로 255자로 제한되어 있습니다. 하지만 메일 발신 도메인 인증을 위한 SPF, DKIM 레코드의 설정 값은 255자를 넘는 경우가 많은데 이때 이런 255자 이상의 문자열을 등록할 수 있는 방법에 대해 대표적인 DNS 서비스 업체별로 확인해보겠습니다.

## Ncloud Global DNS
우선 Ncloud(네이버 클라우드)의 DNS 서비스인 [**Global DNS**]는 다른 DNS 제공 업체와 다르게 `255자가 넘는 경우에도 자동으로 문자열을 분리해서 등록해줍니다`.  
그러므로 Ncloud(네이버 클라우드)에서는 TXT 레코드 값의 길이를 신경쓰지 않고 편하게 등록하시면 됩니다.

### 레코드 등록 예시
아래와 같이 예시로 255자가 넘는 DKIM 정보를 [**Global DNS**]에 등록했습니다. 등록하면서 문자열을 나누지 않고 전체를 하나의 문자열로 등록했습니다.

{% include image.html file=&quot;networking/ncloud-networking-global-dns-configure-long-txt-record-01.png&quot; width=&quot;845&quot; alt=&quot;DNS 설정할 때 255자 이상인 TXT 레코드(SPF, DKIM, DMARC 등)를 등록하는 방법&quot; caption=&quot;&quot; %}

### DNS 레코드 정보 조회 예시
위에서 예시로 등록한 레코드 정보를 아래와 같이 확인해보면 레코드 문자열이 자동으로 255자 이하로 나누어서 표시되는 것을 확인할 수 있습니다.
``` bash
nslookup -q=txt ***._domainkey.조회할도메인
```

{% include image.html file=&quot;networking/ncloud-networking-global-dns-configure-long-txt-record-02.png&quot; width=&quot;845&quot; alt=&quot;DNS 설정할 때 255자 이상인 TXT 레코드(SPF, DKIM, DMARC 등)를 등록하는 방법&quot; caption=&quot;&quot; %}

## AWS Route53
AWS Route53에서는 255자를 초과하는 값의 경우 각각 255자 이하의 문자열로 나누어서 각 문자열을 큰따옴표로 묶어서 등록해야 합니다. `이때 각 문자열 사이에 줄바꿈을 입력하면 안됩니다`.

### 예시
- 원본 문자열: **&quot;v=DKIM1;p=BHIUKuk.....YubhjfvF_Very_Long_String_Record_ThjBJHkMghJbG&quot;**
- 수정 문자열: **&quot;v=DKIM1;p=BHIUKuk.....YubhjfvF_Very_Lo`&quot; &quot;`ng_String_Record_ThjBJHkMghJbG&quot;**


## Google Cloud DNS
Google Cloud Platform의 Cloud DNS에서도 AWS와 마찬가지로 255자를 초과하는 값의 경우 각각 255자 이하의 문자열로 나누어서 각 문자열을 큰따옴표로 묶어서 등록해야 합니다. `이때 각 문자열 사이에 줄바꿈을 입력하면 안됩니다`.

### 예시
- 원본 문자열: **&quot;v=DKIM1;p=BHIUKuk.....YubhjfvF_Very_Long_String_Record_ThjBJHkMghJbG&quot;**
- 수정 문자열: **&quot;v=DKIM1;p=BHIUKuk.....YubhjfvF_Very_Lo`&quot; &quot;`ng_String_Record_ThjBJHkMghJbG&quot;**

## 참고 URL

1. Ncloud Global DNS 가이드
  - &lt;a href=&quot;https://guide.ncloud-docs.com/docs/globaldns-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/globaldns-overview&lt;/a&gt;

2. Ncloud Cloud Outbound Mailer 도메인 보안 인증
  - &lt;a href=&quot;https://guide.ncloud-docs.com/docs/cloudoutboundmailer-use-domain#%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%B3%B4%EC%95%88&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/cloudoutboundmailer-use-domain#%EB%8F%84%EB%A9%94%EC%9D%B8-%EB%B3%B4%EC%95%88&lt;/a&gt;  

3. AWS Route53에서 255자 보다 긴 TXT 레코드 구성하기
  - &lt;a href=&quot;https://repost.aws/ko/knowledge-center/route-53-configure-long-spf-txt-records&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://repost.aws/ko/knowledge-center/route-53-configure-long-spf-txt-records&lt;/a&gt;

4. GCP Cloud DNS 레코드 추가 가이드
  - &lt;a href=&quot;https://cloud.google.com/dns/docs/records?hl=ko#record_type&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://cloud.google.com/dns/docs/records?hl=ko#record_type&lt;/a&gt;  


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}</description>
            <pubDate>Wed, 10 Jan 2024 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/networking/ncloud-networking-global-dns-configure-long-txt-record.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/networking/ncloud-networking-global-dns-configure-long-txt-record.html</guid>
            
            <category>dns</category>
            
            
        </item>
        
        <item>
            <title>Ncloud KVM Hypervisor 타입의 Rocky Linux 서버 Repository 미러 사이트 오류 문제 해결 방법</title>
            <description>## 개요  
Ncloud (네이버 클라우드)에서 **KVM Hypervisor 타입의 록키 리눅스(Rocky Linux) 8.8 서버**를 제공하고 있는데, 서버를 생성하고 나서 Apache, PHP 등의 패키지를 설치할 때 패키지 다운로드 사이트 또는 미러 사이트에서 8.8 버전에 대한 패키지 정보를 찾을 수 없다는 메시지가 나타나면서 패키지를 설치할 수 없는 경우가 있습니다.   
`XEN Hypervisor 타입의 서버에서는 문제가 없는데 왜 KVM Hypervisor 타입 서버에서만 이런 문제가 생기는지`와 어떻게 하면 해결할 수 있는지를 정리해보겠습니다.

## 오류 상황
콘솔에서 서버를 생성한 후에 아무 것도 하지 않고 테스트로 Apache를 설치해보려고 했는데, 오류 메시지가 나타나면서 설치를 할 수 없었습니다. 또한 Extras 리포지토리 미러 사이트도 Ncloud 내부 서버가 아닌 록키 리눅스 공식 미러 사이트로 연결하려고 시도한 것을 확인할 수 있습니다.  

이때, 혹시 외부와 통신이 안되어서 그런 것이 아닐까 오해할 수 있는데, **`아래 오류 메시지를 보면 미러 사이트에 접속할 수 없다는 것이 아니고, 파일을 찾을 수 없다는 404 에러 메시지인 것`**을 알 수 있습니다. 즉, 외부 통신은 아무 문제 없다는 것입니다.

``` bash
~# dnf -y install httpd

Rocky Linux 8.8 - Extras                                 501  B/s | 3.3 kB     00:06
Errors during downloading metadata for repository &apos;extras&apos;:
  - Status code: 404 for https://rocky-linux-asia-east2.production.gcp.mirrors.ctrliq.cloud/pub/rocky//8.8/extras/x86_64/os/repodata/repomd.xml (IP: 35.241.40.125)
  - Status code: 404 for https://rocky-linux-asia-south2.production.gcp.mirrors.ctrliq.cloud/pub/rocky//8.8/extras/x86_64/os/repodata/repomd.xml (IP: 34.149.203.6)
  - Status code: 404 for https://rocky-linux-asia-northeast3.production.gcp.mirrors.ctrliq.cloud/pub/rocky//8.8/extras/x86_64/os/repodata/repomd.xml (IP: 35.186.196.188)
  - Status code: 404 for https://rocky-linux-asia-northeast1.production.gcp.mirrors.ctrliq.cloud/pub/rocky//8.8/extras/x86_64/os/repodata/repomd.xml (IP: 34.160.117.186)
  - Status code: 404 for https://rocky-linux-me-west1.production.gcp.mirrors.ctrliq.cloud/pub/rocky//8.8/extras/x86_64/os/repodata/repomd.xml (IP: 34.149.26.62)
  - Status code: 404 for https://rocky-linux-asia-east1.production.gcp.mirrors.ctrliq.cloud/pub/rocky//8.8/extras/x86_64/os/repodata/repomd.xml (IP: 35.186.202.231)
  - Status code: 404 for https://rocky-linux-asia-southeast1.production.gcp.mirrors.ctrliq.cloud/pub/rocky//8.8/extras/x86_64/os/repodata/repomd.xml (IP: 34.160.39.155)
  - Status code: 404 for https://rocky-linux-asia-southeast2.production.gcp.mirrors.ctrliq.cloud/pub/rocky//8.8/extras/x86_64/os/repodata/repomd.xml (IP: 34.111.41.84)
  - Status code: 404 for https://rocky-linux-asia-northeast2.production.gcp.mirrors.ctrliq.cloud/pub/rocky//8.8/extras/x86_64/os/repodata/repomd.xml (IP: 34.107.160.108)
  - Status code: 404 for https://rocky-linux-asia-south1.production.gcp.mirrors.ctrliq.cloud/pub/rocky//8.8/extras/x86_64/os/repodata/repomd.xml (IP: 34.120.3.13)
Error: Failed to download metadata for repo &apos;extras&apos;: Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried
```
{% include image.html file=&quot;compute/ncloud-compute-server-kvm-rocky-linux-repo-mirror-error-troubleshooting-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) KVM Hypervisor 타입의 Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

### 외부 통신이 되지 않는 경우
외부 통신이 되지 않는 경우는 아래와 같이 더 이상 진행이 되지 않고 계속 멈춰있는 상태가 되므로 **여기서 다뤄보는 문제와는 관계가 없습니다**.

{% include image.html file=&quot;compute/ncloud-compute-server-kvm-rocky-linux-repo-mirror-error-troubleshooting-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) KVM Hypervisor 타입의 Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

## 해결 방법-1
첫번째 방법은 패키지를 설치할 때 미러 사이트 주소에서 404 에러가 발생하는 [**Extras**] 저장소를 비활성화하는 옵션을 적용하는 방법입니다.

``` bash
~# dnf -y install httpd --disablerepo=extras
```

{% include image.html file=&quot;compute/ncloud-compute-server-kvm-rocky-linux-repo-mirror-error-troubleshooting-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) KVM Hypervisor 타입의 Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

## 해결 방법-2
두번째 방법은 [**Rocky-Extras.repo**] 리포지토리 설정파일의 주소를 Ncloud 내부 서버로 변경하는 방법입니다.

``` conf
# vim /etc/yum.repos.d/Rocky-Extras.repo

# Rocky-Extras.repo

#mirrorlist=https://mirrors.rockylinux.org/mirrorlist?arch=$basearch&amp;repo=extras-$releasever
#baseurl=http://dl.rockylinux.org/$contentdir/$releasever/extras/$basearch/os/

baseurl=http://repo.ncloud.com/rocky/$releasever/extras/$basearch/os/
```

{% include image.html file=&quot;compute/ncloud-compute-server-kvm-rocky-linux-repo-mirror-error-troubleshooting-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) KVM Hypervisor 타입의 Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

- 주소 변경 후에 아파치를 설치해보면 문제 없이 잘 설치 되는 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-server-kvm-rocky-linux-repo-mirror-error-troubleshooting-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) KVM Hypervisor 타입의 Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

## KVM vs XEN
그런데 XEN 하이퍼바이저 타입의 서버에서는 아무 문제 없이 설치가 잘되는데 왜 KVM 하이퍼바이저 타입의 서버에서만 문제가 생기는 것인지 궁금해서 두 타입의 서버의 리포지토리 파일들을 비교해봤습니다.

### KVM 타입
우선, 문제가 발생한 KVM 하이퍼바이저 타입의 서버에서 리포지토리 파일의 리스트를 확인해봤습니다.  
리스트에는 [**AppStream**], [**BaseOS**], [**Extras**] 리포지토리 파일 뿐만 아니라 다수의 파일이 존재하는 것을 알 수 있습니다.

``` bash
~# ls -al /etc/yum.repos.d/

Rocky-AppStream.repo
Rocky-BaseOS.repo
Rocky-Debuginfo.repo
Rocky-Devel.repo
Rocky-Extras.repo
Rocky-HighAvailability.repo
Rocky-Media.repo
Rocky-NFV.repo
Rocky-Plus.repo
Rocky-PowerTools.repo
Rocky-ResilientStorage.repo
Rocky-RT.repo
Rocky-Sources.repo
```

{% include image.html file=&quot;compute/ncloud-compute-server-kvm-rocky-linux-repo-mirror-error-troubleshooting-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) KVM Hypervisor 타입의 Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

### XEN 타입
다음으로, 문제가 없는 XEN 하이퍼바이저 타입의 서버에서 리포지토리 파일의 리스트를 확인해봤습니다.  
그런데, 여기는 [**AppStream**], [**BaseOS**] 단 두가지의 리포지토리 파일만 존재하는 것을 알 수 있었습니다.

``` bash
~# ls -al /etc/yum.repos.d/

Rocky-AppStream.repo
Rocky-BaseOS.repo
```
{% include image.html file=&quot;compute/ncloud-compute-server-kvm-rocky-linux-repo-mirror-error-troubleshooting-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) KVM Hypervisor 타입의 Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

## 해결 방법-3
세번째 해결 방법은 위에서 확인했 듯이 [**/etc/yum.repos.d/**] 경로에 있는 리포지토리 파일 리스트에서 [**AppStream**], [**BaseOS**] 두가지만 남겨두고 나머지 파일들은 다른 곳에 백업하고 나서 지우면 이상 없이 패키지 설치가 가능합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-kvm-rocky-linux-repo-mirror-error-troubleshooting-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) KVM Hypervisor 타입의 Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

## 원인 분석
원인을 찾기 위해 처음에 문제가 생겼을 때 나타났던 오류 메시지에서 리포지토리 미러사이트 주소를 하나 선택해서 접속해봤습니다.  
접속해봤더니 패키지 관련 디렉토리나 파일들은 존재하지 않고 [**README.txt**] 안내 파일만 존재하는 것을 알 수 있었습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&lt;a href=&apos;https://rocky-linux-asia-east1.production.gcp.mirrors.ctrliq.cloud/pub/rocky//8.8/&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;https://rocky-linux-asia-east1.production.gcp.mirrors.ctrliq.cloud/pub/rocky//8.8/&lt;/a&gt;
&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-server-kvm-rocky-linux-repo-mirror-error-troubleshooting-08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) KVM Hypervisor 타입의 Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

### README.txt
해당 파일을 클릭해서 열어보니 아래와 같이 파일들이 다른 곳으로 옮겨졌으니 그쪽에서 확인해보라는 메시지를 확인할 수 있었습니다.  
즉, Rocky Linux 8.8 버전은 출시된지 오래된 버전이어서 미러링 사이트들에서는 삭제되고, 공식 다운로드 사이트의 별도의 디렉토리로 옮겨진 것으로 판단이됩니다.

``` text
This content has been moved to the Rocky Linux Vault

https://dl.rockylinux.org/vault/rocky/8.8/
```
{% include image.html file=&quot;compute/ncloud-compute-server-kvm-rocky-linux-repo-mirror-error-troubleshooting-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) KVM Hypervisor 타입의 Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

### 공식 사이트
위 파일에서 확인한 공식 사이트로 접속해보니 아래와 같이 패키지 관련 디렉토리가 존재하는 것을 알 수 있었습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&lt;a href=&apos;https://dl.rockylinux.org/vault/rocky/8.8/&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;https://dl.rockylinux.org/vault/rocky/8.8/&lt;/a&gt;
&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-server-kvm-rocky-linux-repo-mirror-error-troubleshooting-10.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) KVM Hypervisor 타입의 Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

## 해결 방법-4
원인 분석에서 확인했 듯이 공식 사이트의 별도 디렉토리에 패키지 파일들이 존재하므로 [**Rocky-Extras.repo**] 리포지토리 파일을 아래와 같이 수정하는 방법도 가능합니다.

``` conf
# vim /etc/yum.repos.d/Rocky-Extras.repo

# Rocky-Extras.repo

#mirrorlist=https://mirrors.rockylinux.org/mirrorlist?arch=$basearch&amp;repo=extras-$releasever
#baseurl=http://dl.rockylinux.org/$contentdir/$releasever/extras/$basearch/os/
#baseurl=http://repo.ncloud.com/rocky/$releasever/extras/$basearch/os/

baseurl=https://dl.rockylinux.org/vault/rocky/$releasever/extras/$basearch/os/
```

{% include image.html file=&quot;compute/ncloud-compute-server-kvm-rocky-linux-repo-mirror-error-troubleshooting-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) KVM Hypervisor 타입의 Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

## 참고 URL
1.  Rocky Linux 서버 소개
	- &lt;a href=&quot;/compute/ncloud-compute-server-rocky-linux-guide.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud-compute-server-rocky-linux-guide.html&lt;/a&gt;

2.  Rocky Linux 미러 사이트 리스트
	- &lt;a href=&quot;https://mirrors.rockylinux.org/mirrormanager/mirrors/Rocky&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://mirrors.rockylinux.org/mirrormanager/mirrors/Rocky&lt;/a&gt;

3.  Ncloud XEN Hypervisor 타입의 Rocky Linux 8.6 서버 Repository 미러 사이트 오류 문제 해결 방법
	- &lt;a href=&quot;/compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-troubleshooting.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-troubleshooting.html&lt;/a&gt;  


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}  </description>
            <pubDate>Thu, 28 Dec 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud-compute-server-rocky-linux-kvm-hypervisor-repository-mirror-site-error-troubleshooting.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud-compute-server-rocky-linux-kvm-hypervisor-repository-mirror-site-error-troubleshooting.html</guid>
            
            <category>linux</category>
            
            <category>rocky_linux</category>
            
            
        </item>
        
        <item>
            <title>MySQL 데이터 저장 디렉토리(datadir) 위치를 변경해서 설치하는 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드) 서버에 MySQL을 설치할 때 MySQL 데이터 저장 디렉토리(datadir) 위치를 변경해서 설치하는 방법을 정리해보겠습니다.

## 테스트 환경
- 서버: Rocky Linux 8.8
- DB: MySQL 8.0

{% include image.html file=&quot;database/ncloud-database-mysql-datadir-change-install-guide-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) 서버에 MySQL 데이터 저장 디렉토리(datadir)를 변경해서 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 설치
아래와 같은 순서대로 MySQL 8.0 최신 버전을 설치합니다.

``` bash
~# dnf -y upgrade-minimal
~# dnf -y install https://dev.mysql.com/get/mysql80-community-release-el8-9.noarch.rpm
~# dnf module reset mysql
~# dnf module disable mysql
~# dnf -y install mysql-community-server
```

{% include image.html file=&quot;database/ncloud-database-mysql-datadir-change-install-guide-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) 서버에 MySQL 데이터 저장 디렉토리(datadir)를 변경해서 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## 데이터 저장 디렉토리 생성
DB 데이터를 저장할 임의의 디렉토리를 생성합니다. /database/mysql 과 같이 생성하고 실제 저장되는 디렉토리는 mysql로 하겠습니다.

``` bash
~# mkdir -p /database/mysql
```
{% include image.html file=&quot;database/ncloud-database-mysql-datadir-change-install-guide-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) 서버에 MySQL 데이터 저장 디렉토리(datadir)를 변경해서 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## 디렉토리 소유권 변경
실제 저장되는 디렉토리인 [**mysql**]에 대한 소유권을 변경해야 하는데, 변경하기 전에 현재 상태를 확인해보면 아래와 같이 root:root로 되어 있는 것을 알 수 있습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-datadir-change-install-guide-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) 서버에 MySQL 데이터 저장 디렉토리(datadir)를 변경해서 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

아래 명령으로 mysql 디렉토리에 대한 소유권을 mysql:mysql로 변경합니다.
``` bash
~# chown -R mysql:mysql /database/mysql/
```

{% include image.html file=&quot;database/ncloud-database-mysql-datadir-change-install-guide-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) 서버에 MySQL 데이터 저장 디렉토리(datadir)를 변경해서 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## 환경 설정 변경
환경 설정 파일 my.cnf 파일을 열어서 [**mysqld**] 항목에 있는 [**datadir**], [**socket**] 두가지의 설정을 위에서 생성한 [**/database/mysql/**] 디렉토리로 변경합니다. 그리고 아래쪽에 로컬에서 접속하기 위한 [**client**] 항목에 대한 [**socket**] 설정도 추가합니다.

``` bash
~# vim /etc/my.cnf

# mysqld용 설정 변경 (위에서 생성한 디렉토리)
[mysqld]
datadir=/database/mysql
socket=/database/mysql/mysql.sock

# 선택사항: CharacterSet, Collation 설정 추가
character-set-server = utf8mb4
collation-server = utf8mb4_unicode_ci
init-connect=&apos;SET NAMES utf8mb4&apos;
skip-character-set-client-handshake

# 로컬에서 접속하기 위한 client 용 설정 추가
[client]
socket=/database/mysql/mysql.sock

# 선택사항: CharacterSet 설정 추가
default-character-set=utf8mb4
```
{% include image.html file=&quot;database/ncloud-database-mysql-datadir-change-install-guide-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) 서버에 MySQL 데이터 저장 디렉토리(datadir)를 변경해서 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


## MySQL 초기화
아래 명령어로 기본 데이터베이스 생성 등의 초기화 작업을 진행합니다. 이때 위에서 생성한 [**/database/mysql/**] 디렉토리에서 초기화가 진행됩니다.  
초기화 한 후에 디렉토리를 살펴보면 아래와 같이 기본 데이터 베이스 등이 정상적으로 생성된 것을 확인할 수 있습니다.

``` bash
~# mysqld --initialize-insecure --user=mysql
~# ls -al /database/mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-datadir-change-install-guide-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) 서버에 MySQL 데이터 저장 디렉토리(datadir)를 변경해서 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 데몬 시작
초기화를 마쳤으면 MySQL 데몬을 시작합니다.

``` bash
~# systemctl start mysqld
```

{% include image.html file=&quot;database/ncloud-database-mysql-datadir-change-install-guide-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) 서버에 MySQL 데이터 저장 디렉토리(datadir)를 변경해서 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 보안 설정
[**mysql_secure_installation**]은 MySQL의 기본 보안을 설정하는 명령으로, 설정되는 항목은 다음과 같습니다.

- root 계정 패스워드 설정
- 원격 호스트에서 root 계정 접속 차단
- 익명 계정 삭제
- 테스트 DB 등 삭제

``` bash
~# mysql_secure_installation
```

{% include image.html file=&quot;database/ncloud-database-mysql-datadir-change-install-guide-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) 서버에 MySQL 데이터 저장 디렉토리(datadir)를 변경해서 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 접속
위에서 설정했던 비번으로 접속해보면 [**8.0.35 MySQL Community Server**]인 것을 확인할 수 있습니다.  

[**show databases**] 명령으로 데이터베이스를 확인해보면 기본 데이터베이스 등 각종 시스템 데이터베이스가 모두 정상적으로 나타나는 것을 알 수 있습니다.

``` bash
~# mysql -u root -p

mysql&gt; show databases;
```

{% include image.html file=&quot;database/ncloud-database-mysql-datadir-change-install-guide-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) 서버에 MySQL 데이터 저장 디렉토리(datadir)를 변경해서 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## 테스트 DB 생성
데이터베이스 생성도 문제 없이 잘되는지 확인해보기 위해 [**testdb**]를 생성하고, 확인해보겠습니다.

``` bash
mysql&gt; CREATE DATABASE testdb;
mysql&gt; show databases;
```

{% include image.html file=&quot;database/ncloud-database-mysql-datadir-change-install-guide-09.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) 서버에 MySQL 데이터 저장 디렉토리(datadir)를 변경해서 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 디렉토리 확인
변경해서 설치한 디렉토리에도 [**testdb**]가 제대로 생성되었는지 확인해보니 아래 화면처럼 정상적으로 생성된 것을 알 수 있습니다.

``` bash
~# ls -al /database/mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-datadir-change-install-guide-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) 서버에 MySQL 데이터 저장 디렉토리(datadir)를 변경해서 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## 참고 URL
1. MySQL Yum Repository 다운로드 페이지
	- &lt;a href=&quot;https://dev.mysql.com/downloads/repo/yum/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://dev.mysql.com/downloads/repo/yum/&lt;/a&gt;

2. Installing MySQL on Linux Using the MySQL Yum Repository
	- &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/linux-installation-yum-repo.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/linux-installation-yum-repo.html&lt;/a&gt;  

3. Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법
	- &lt;a href=&quot;/database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux.html&lt;/a&gt;      


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}  	</description>
            <pubDate>Thu, 21 Dec 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud-database-mysql-datadir-change-install-guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud-database-mysql-datadir-change-install-guide.html</guid>
            
            <category>database</category>
            
            <category>mysql</category>
            
            <category>install</category>
            
            <category>rocky_linux</category>
            
            
        </item>
        
        <item>
            <title>Ncloud API Key 접근 제한 설정하는 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드)를 이용하다보면 여러 가지 정보를 조회하거나 서버를 생성하는 등의 작업을 위해 API를 활용하게 되는 경우가 많습니다. 그런데 이때 사용하는 **API Key를 접근 제한 없이 사용하게 되면 외부에 유출되거나 했을 때 심각한 보안 문제를 일으키게 되므로** 사전에 API Key에 대한 권한을 설정하거나 접근 제한을 설정해서 사용하는 것이 권장됩니다.  

여기서는 API Key를 최소 권한으로 생성하고, 접근 경로를 제한 하는 등의 방법들을 정리해보겠습니다.

## 서브 계정 생성
API Key 보안과 관련해서 가장 중요한 원칙은 메인 계정이 아닌 최소 권한을 가진 서브 계정(Sub Account)에서 API Key를 생성하는 것입니다.  

{% include warning.html title=&quot;&quot; content=&quot;
메인 계정은 최대 권한을 가지기 때문에 메인 계정으로 생성한 API도 메인 계정과 동일한 최대 권한을 가지게 됩니다. 그러므로 메인 계정으로 API Key를 생성하게 되면 이 Key가 유출되었을 때 심각한 문제가 생기기 때문에 반드시 서브 계정에서 API Key를 생성해야 합니다.
&quot; %}

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
서브 계정(Sub Account)을 생성하는 방법은 아래 문서를 참고하시기 바랍니다.&lt;br /&gt;&lt;br /&gt;
&amp;#8259; &lt;a href=&apos;/management/ncloud_management_sub_account_guide.html&apos; target=&apos;_blank&apos;&gt;Ncloud 서브 계정 (Sub Account) 생성 가이드&lt;/a&gt;
&quot; %}

&lt;br /&gt;
- 테스트를 위해 아래와 같이 서브 계정을 준비하고, 계정을 클릭해서 서브 계정 세부 정보 화면으로 이동합니다.
{% include image.html file=&quot;management/ncloud-management-sub-account-07.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## 계정 권한 설정
서브 계정의 권한은 최소로 설정해야 합니다.  
예를 들어 Object Storage만 접근하는지, VPC Server 관련된 기능만 사용할 것인지, VPC Server 관련된 기능 중에서도 조회 기능만 사용할 것인지, Server 생성 등을 포함한 모든 기능을 사용할 것인지 등의 사용에 필요한 권한을 모두 정리해서 최소한의 권한으로 설정하는 것이 안전합니다.  

우선, 서브 계정 세부 정보 화면에서 아래쪽에 있는 [**정책**] 탭에 있는 [**개별 권한 추가**] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-08.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

정책 추가 화면에서는 네이버 클라우드에서 기본으로 제공하는 [관리형 정책]과 사용자가 직접 정의하는 [사용자 정의 정책]이 있습니다.  
우선 [관리형 정책]에서 필요한 정책을 선택하고 [추가] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-24.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- 정책이 워낙 많기 때문에 가능하면 위쪽의 검색 기능을 이용해서 정책을 찾는 것을 추천합니다.  
여기서는 테스트를 위해 Function으로 검색해서 [NCP_VPC_CLOUD_FUNCTIONS_MANAGER (VPC 기반 Cloud Functions 서비스 내 모든 기능을 이용할 수 있는 권한)]을 선택했습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-api-gateway-access-control-guide-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) Sub Account(서브 계정)를 이용해 API Key 접근 제한 설정하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;management/ncloud-management-sub-account-api-gateway-access-control-guide-02.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) Sub Account(서브 계정)를 이용해 API Key 접근 제한 설정하는 방법&quot; caption=&quot;&quot; %}

## API Gateway 접근 권한 설정
우선, [서브 계정 세부 정보] 화면에서 [수정] 메뉴 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-api-gateway-access-control-guide-03.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) Sub Account(서브 계정)를 이용해 API Key 접근 제한 설정하는 방법&quot; caption=&quot;&quot; %}

- [**서브 계정 정보**] 수정 화면에서 [**접근 권한**]에 있는 [**API Gateway 접근**]을 체크합니다. 그리고, 되도록이면 [**지정된 Source에서만 접근 가능**] 옵션을 선택하고, 지정된 IP 등을 추가하는 것을 권장합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-12.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- 위 화면에서 [**추가**] 버튼을 클릭하면 아래와 같이 [**접근 가능 Source 지정**] 팝업이 나타나는데, IP를 입력하거나 VPC Server를 선택하면 됩니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-13.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

{% include callout-v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; [**VPC Server**]의 경우 IP 주소로는 접근할 수 없습니다.&lt;br /&gt;
&amp;#8259; 아래 화면처럼 VPC Server 리스트에서 직접 선택해야 접근 가능합니다.&lt;br /&gt;
&amp;#8259; 그러므로 다른 계정의 VPC Server는 접근 가능 리소스에 추가할 수 없습니다.
&quot; %}

{% include image.html file=&quot;management/ncloud-management-sub-account-api-gateway-access-control-guide-04.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) Sub Account(서브 계정)를 이용해 API Key 접근 제한 설정하는 방법&quot; caption=&quot;&quot; %}

### API Access Key 추가
위에서 [**API Gateway 접근**] 권한을 추가하면 계정 정보 화면에 아래와 같이 [**Access Key**] 탭이 나타나고 [**추가**] 버튼을 클릭하면 [**Access Key**]와 [**Secret Key**]를 생성할 수 있습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-14.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}


## 접근 제한 테스트
그러면 위에서 설정했던 접근 제한 설정이 제대로 작동하는지 테스트 해보겠습니다.

### IP 제한
위에서 설정한 [**접근 가능 Source 지정**] 항목에 IP를 설정하지 않거나, 지정되지 않은 IP에서 접근할 경우 아래의 예시와 같은 오류 메시지가 반환됩니다.

- 호출 API: getProductList

``` xml
&lt;Message&gt;
  &lt;error&gt;
      &lt;errorCode&gt;230&lt;/errorCode&gt;
      &lt;message&gt;Forbidden&lt;/message&gt;
      &lt;details&gt;IP not allowed for authentication.&lt;/details&gt;
  &lt;/error&gt;
&lt;/Message&gt;
```

### 계정 권한 제한
계정에 올바른 권한이 설정되지 않았을 경우 아래와 같은 오류 메시지가 반환됩니다.

- 호출 API: createServerInstances

``` xml
&lt;responseError&gt;
  &lt;returnCode&gt;802&lt;/returnCode&gt;
  &lt;returnMessage&gt;You do not have authority about action : [VPCServer:Change/createServerInstance].&lt;/returnMessage&gt;
&lt;/responseError&gt;
```

- 호출 API: getDemandCostList

``` xml
&lt;responseError&gt;
  &lt;returnCode&gt;2210&lt;/returnCode&gt;
  &lt;returnMessage&gt;You do not have authority about action : [NCP_FINANCE_MANAGER].&lt;/returnMessage&gt;
&lt;/responseError&gt;
```


## 주요 API 최소 권한

&lt;div&gt;
  &lt;table class=&quot;simple_table&quot;&gt;
    &lt;thead&gt;
      &lt;tr&gt;        
        &lt;th&gt;API&lt;/th&gt;
        &lt;th&gt;설명&lt;/th&gt;
        &lt;th&gt;Classic/VPC&lt;/th&gt;
        &lt;th&gt;최소 권한&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;      
        &lt;tr&gt;
          &lt;td&gt;getProductList&lt;/td&gt;
          &lt;td&gt;Ncloud 상품 리스트 조회&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;없음&lt;/td&gt;
        &lt;/tr&gt; 
         &lt;tr&gt;
          &lt;td&gt;getDemandCostList&lt;/td&gt;
          &lt;td&gt;청구 비용 리스트 조회&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;NCP_FINANCE_MANAGER&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td rowspan=&quot;2&quot;&gt;getServerInstanceList&lt;/td&gt;
          &lt;td rowspan=&quot;2&quot;&gt;서버 인스턴스(VM) 리스트 조회&lt;/td&gt;  
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_SERVER_VIEWER&lt;/td&gt;        
        &lt;/tr&gt;  
        &lt;tr&gt;          
          &lt;td&gt;Classic&lt;/td&gt;
          &lt;td&gt;NCP_SERVER_&lt;strong&gt;OBSERVER&lt;/strong&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td rowspan=&quot;2&quot;&gt;createServerInstances&lt;/td&gt;
          &lt;td rowspan=&quot;2&quot;&gt;서버 인스턴스(VM) 생성&lt;/td&gt;
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_SERVER_MANAGER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;Classic&lt;/td&gt;
          &lt;td&gt;NCP_SERVER_MANAGER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td rowspan=&quot;2&quot;&gt;Get Action List&lt;/td&gt;
          &lt;td rowspan=&quot;2&quot;&gt;CloudFunction 액션 리스트 조회&lt;/td&gt;
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_CLOUD_FUNCTIONS_VIEWER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;Classic&lt;/td&gt;
          &lt;td&gt;NCP_CLOUD_FUNCTIONS_&lt;strong&gt;MANAGER&lt;/strong&gt;&lt;/td&gt;
        &lt;/tr&gt;    
        &lt;tr&gt;
          &lt;td rowspan=&quot;2&quot;&gt;Post Action&lt;/td&gt;
          &lt;td rowspan=&quot;2&quot;&gt;CloudFunction 액션 실행&lt;/td&gt;
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_CLOUD_FUNCTIONS_MANAGER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;Classic&lt;/td&gt;
          &lt;td&gt;NCP_CLOUD_FUNCTIONS_MANAGER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;ListBuckets&lt;/td&gt;
          &lt;td&gt;ObjectStorage 버킷 리스트 조회&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;NCP_OBJECT_STORAGE_VIEWER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;createAutoScalingGroup&lt;/td&gt;
          &lt;td&gt;Auto Scaling Group 생성&lt;/td&gt;
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_AUTOSCALING_MANAGER&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;SMS API&lt;/td&gt;
          &lt;td&gt;Simple &amp; Easy Notification Service 내&lt;br /&gt;SMS 발신번호 등록 기능을 제외한&lt;br /&gt;모든 기능&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;NCP_SENS_MANAGER&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;geoLocation&lt;/td&gt;
          &lt;td&gt;지정한 IP의 위치 정보 조회&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;NCP_GEOLOCATION_MANAGER&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/div&gt;

## 참고 URL
1.  Ncloud Sub Account 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/ko/subaccount-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/ko/subaccount-overview&lt;/a&gt;

2.  Ncloud API 사용 가이드
	- &lt;a href=&quot;https://api.ncloud-docs.com/docs/api-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://api.ncloud-docs.com/docs/api-overview&lt;/a&gt;  


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}
</description>
            <pubDate>Tue, 19 Dec 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/management/ncloud-management-sub-account-api-gateway-access-control-guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/management/ncloud-management-sub-account-api-gateway-access-control-guide.html</guid>
            
            <category>account</category>
            
            <category>api</category>
            
            <category>security</category>
            
            
        </item>
        
        <item>
            <title>Linux 스토리지(디스크) 추가 상세 가이드</title>
            <description>## 개요
Ncloud(네이버 클라우드)에서 리눅스 서버에 디스크를 추가하는 것은 스토리지 즉, Block Storage를 생성해서 서버에 연결하는 작업이 필요합니다.

## 전체 과정 요약
스토리지(디스크)를 추가하는 전체 과정은 아래와 같이 하이퍼바이저별로 정리할 수 있으며, 각 단계별 상세 설명은 XEN 하이퍼바이저 기반 서버를 이용해서 진행하겠습니다.

{% tabs storage-add %}

{% tab storage-add XEN 하이퍼바이저 %}

``` bash
~# fdisk -l

~# fdisk /dev/xvdb

~# mkfs.xfs /dev/xvdb1

  - CentOS 5.x: mkfs.ext3 /dev/xvdb1
  - CentOS 6.x: mkfs.ext4 /dev/xvdb1
  - CentOS 7.x: mkfs.xfs /dev/xvdb1
  - Rocky Linux: mkfs.xfs /dev/xvdb1
  - Ubuntu : mkfs.ext4 /dev/xvdb1

~# mkdir /mnt/data

~# mount /dev/xvdb1 /mnt/data

~# df -hT

~# vim /etc/fstab
### =============================
UUID=1fd5s61f5d-*** 중략 ***-f84ew13 /mnt/data xfs defaults 1 2

# 또는
/dev/xvdb1 /mnt/data ext4 defaults 1 2
### =============================
```

{% endtab %}

{% tab storage-add KVM 하이퍼바이저 %}

``` bash
~# fdisk -l

~# fdisk /dev/vdb

~# mkfs.xfs /dev/vdb1

  - CentOS 5.x: mkfs.ext3 /dev/vdb1
  - CentOS 6.x: mkfs.ext4 /dev/vdb1
  - CentOS 7.x: mkfs.xfs /dev/vdb1
  - Rocky Linux: mkfs.xfs /dev/vdb1
  - Ubuntu : mkfs.ext4 /dev/vdb1

~# mkdir /mnt/data

~# mount /dev/vdb1 /mnt/data

~# df -hT

~# vim /etc/fstab
### =============================
UUID=1fd5s61f5d-*** 중략 ***-f84ew13 /mnt/data xfs defaults 1 2

# 또는
/dev/xvdb1 /mnt/data ext4 defaults 1 2
### =============================
```

{% endtab %}
{% endtabs %}


## 스토리지 생성, 할당
우선은 네이버 클라우드 콘솔 [Server] - [Server]에서 해당 서버를 선택하고 
[서버 관리 및 설정 변경] - [스토리지 생성]을 선택합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

다음으로 [스토리지 생성] 화면에서 스토리지 종류, 이름, 적용서버, 크기 (최소 10GB, 최대 2000GB) 등을 선택하고 [추가] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-02.png&quot; width=&quot;685&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

앞에서 설정한 스토리지 정보를 다시 살펴보고 이상이 없으면 [확인] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-03.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

추가된 스토리지는 [Server] - [Server] 리스트에서 해당 서버를 클릭해 상세정보에서 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-04.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

## 스토리지 할당 확인
네이버 클라우드 콘솔에서 할당한 스토리지를 확인하기 위해 putty를 실행해 서버에 접속합니다.  
이후 과정은 모두 서버에 접속한 상태에서 진행하게 됩니다.

fdisk -l 명령어를 실행해보면 아래 화면처럼 /dev/xvdb 디스크가 할당된 것을 확인할 수 있습니다.

``` bash
~# fdisk -l
```

{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

## 디스크 파티션
다음 명령어를 입력해 할당된 디스크에 파티션을 생성합니다.  
파티션 설정에는 기본인 MBR 방식과 2TB 이상의 디스크를 인식하기 위해 사용하는 GPT 방식이 있는데, 네이버 클라우드는 최대 2,000GB까지만 지원하므로 여기서는 기본방식인 MBR을 사용하겠습니다.
``` bash
~# fdisk /dev/xvdb
```
&lt;br /&gt;
### 파티션 생성
파티션을 생성할 때는 여러 단계의 옵션이 있습니다. 일반적으로는 아래와 같은 단계로 진행하면 됩니다.

- 파티션을 새로 생성하기 위해 ‘n’을 입력

{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

- 생성할 파티션 타입에 따라 primary type이면 ‘p’, extended type이면 ‘e’를 입력.  
  (primary type으로 생성하는 것이 일반적이며, primary 영역의 파티션이 부족할 경우 추가로 extended type으로 생성)

{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

- 생성할 파티션 번호와 cylinder 영역을 입력 (일반적으로 추가할 disk 전체를 mount하게 되고, 이 경우 default값을 그대로 사용하므로 Enter 입력)

{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

- ‘w’를 입력해 해당 구성을 적용. 파티션 생성 완료.

{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-09.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

마지막으로 fdisk -l 명령어로 생성된 파티션을 다시 확인합니다.  
디스크가 /dev/xvdb1 장치로 인식된 것을 확인할 수 있습니다. 

{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

## 디스크 포맷
다음으로 파티션이 생성된 디스크를 포맷하면 되는데, OS별로 명령어가 다르므로 확인 후에 실행해야 합니다.  
여기서는 CentOS 7.x 기준으로 mkfs.xfs 명령어를 사용했습니다.
``` bash
~# mkfs.xfs /dev/xvdb1

- CentOS 5.x: mkfs.ext3 /dev/xvdb1
- CentOS 6.x: mkfs.ext4 /dev/xvdb1
- CentOS 7.x: mkfs.xfs /dev/xvdb1
- Rocky Linux: mkfs.xfs /dev/xvdb1
- Ubuntu : mkfs.ext4 /dev/xvdb1
```

{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

## 디스크 마운트
다음으로 디스크를 마운트할 포인트 즉, 디렉토리를 원하는 이름으로 생성하고 마운트를 합니다.  
아래에 있는 마운트 경로 (/mnt/data)는 예시입니다. 원하는 경로를 직접 설정하시면 됩니다.
``` bash
~# mkdir /mnt/data
~# mount /dev/xvdb1 /mnt/data
```
{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

- 마운트된 내역을 확인합니다.

``` bash
~# df -hT
```
{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-13.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

## 마운트 정보 등록
마운트 정보는 설정에 저장하지 않으면 서버가 리부팅될 때 사라지기 때문에 fstab에 저장합니다.  
마운트 정보를 등록할 때 장치명을 사용하는 방법과 장치의 UUID를 사용하는 방법이 있는데, 경우에 따라서는 장치명이 변경될 수도 있어, 이를 대비해 가능하면 UUID로 등록합니다.

### UUID 확인
UUID를 확인하려면 blkid 명령어를 사용합니다.  
여기서 확인한 UUID를 별도로 복사해두었다가 fstab에 입력하게 됩니다.
``` bash
~# blkid /dev/xvdb1
```
{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-14.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

vi로 /etc/fstab 파일을 열면 다음과 같습니다.  
서버 생성과 함께 장착된 기본 디스크도 UUID로 입력된 것을 확인할 수 있습니다.
``` bash
~# vi /etc/fstab
```
{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-15.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

앞에서 확인하고 복사해둔 추가 디스크의 UUID와 기타 정보를 입력합니다.  
입력을 완료한 후 fstab 파일을 저장하고 빠져 나옵니다.  
(fstab에 입력할때 사용하는 디스크 정보 옵션에 대한 정리는 아래에서 다시 확인할 수 있습니다.)

``` bash
### /etc/fstab

UUID=29f58417-*** 중략 ***38d0f /mnt/data xfs defaults 1 2

# 또는
/dev/xvdb1 /mnt/data ext4 defaults 1 2

```
{% include image.html file=&quot;compute/ncloud-compute-server-storage-add-detail-process-16.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) Linux 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}


## fstab 설정 상세정보

/etc/fstab은 부팅 단계에서 마운트되어야 할 볼륨 정보들이 저장되는 곳입니다.  
(OS 이미지에 따라 파일 시스템이 다르기 때문에 주의해야 합니다.)

파일의 각 항목이 의미하는 바는 아래와 같으며 각 항목은 Tab 또는 Space Bar로 구분합니다.

(장치명) (마운트 포인트) (파일시스템 종류) (옵션) (dump 설정) (fsck 설정)

+ 장치명: 장치명은 장치의 UUID를 사용하거나 /dev/xvdb1와 같은 장치이름을 사용합니다.

+ 마운트 포인트: 볼륨을 마운트하고자 하는 위치입니다. 예시에서는 /mnt/data 디렉토리에 마운트했습니다.

+ 파일시스템 종류: OS별로 기본 파일시스템이 다르므로 알맞게 입력합니다.

  - CentOS 5.x : ext3
  - CentOS 6.x : ext4
  - CentOS 7.x : xfs
  - Rocky Linux : xfs  
  - Ubuntu Server / Desktop : ext4

+ 옵션: 예시에서는 default 옵션을 사용하였으며, 해당 옵션에는 rw, nouser, auto, exec, suid 속성이 포함됩니다.  
  각 속성의 내용은 다음과 같습니다. (필요한 옵션만 사용할 시, 각 옵션을 쉼표(,)로 구분하여 작성해주시면 됩니다.)

  - auto : 부팅 시 자동 마운트
  - rw : 읽기, 쓰기 모두 가능하도록 마운트
  - nouser : root 계정만 마운트 가능
  - exec : 파일 실행을 허용
  - suid : SetUID와 SetGID를 허용

+ dump 설정: dump 명령으로 백업을 할 것인지에 대한 설정

  - 0: dump되지 않는 파일 시스템
  - 1: dump 가능한 파일 시스템

+ fsck 설정: 부팅시에 fsck 명령으로 파일시스템에 대한 무결성 검사를 할 것인지에 대한 설정

  - 0 : 부팅 시 fsck 실행하지 않음
  - 1 : 부팅 시 root 파일 시스템을 우선 체크
  - 2 : 부팅 시 root 이외의 파일 시스템을 우선 체크

## 참고 URL
1. Ncloud Block Storage 생성, 추가 가이드
- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/blockstorage-create-vpc&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/blockstorage-create-vpc&lt;/a&gt;

## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}
</description>
            <pubDate>Thu, 07 Dec 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_server_storage_add_detail_process.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_server_storage_add_detail_process.html</guid>
            
            <category>linux</category>
            
            <category>storage</category>
            
            
        </item>
        
    </channel>
</rss>
