<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>3RDEYESYSTEM Technical Documentations</title>
        <description>써드아이시스템(3rdeyesys) 기술문서 사이트입니다 - Ncloud 프리미엄 파트너</description>
        <link>https://docs.3rdeyesys.com/</link>
        <atom:link href="https://docs.3rdeyesys.com/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Wed, 05 Jul 2023 15:42:10 +0900</pubDate>
        <lastBuildDate>Wed, 05 Jul 2023 15:42:10 +0900</lastBuildDate>
        <generator>Jekyll v4.2.2</generator>
        
        
        <item>
            <title>http 접속 시에 https로 강제 리다이렉트 시키는 방법 - Apache/Ubuntu</title>
            <description>## 개요
웹사이트 SSL 인증서를 설치하고 https 접속을 유도할 때 http로 접속하면 https로 강제로 리다이렉트 시키는 방법을 사용하는 경우가 많습니다.  
웹페이지 소스에서 http 접속 여부를 판단해서 redirect 시키는 방법 등 여러가지 있을 수 있는데 여기서는 Apache 설정으로 쉽게 할 수 있는 방법을 소개합니다.  

SSL 인증서가 설치되어 있다는 가정하에 우선 Linux Ubuntu에서 설정하는 방법을 확인해보겠습니다.

## Rewrite 모듈 설치
혹시 Apache에 이미 `mod_rewrite` 가 로드 되어 있다면 설치하지 않아도 됩니다.

``` bash
~# a2enmod rewrite
```

## Apache conf 파일 수정

**/etc/apache2/sites-enabled/000-default.conf** 의 Vritual host에 다음 코드를 추가하고 Apache를 재시작하면 됩니다.
``` apache
RewriteEngine On
RewriteCond %{HTTPS} !on
RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
```

000-default.conf 파일에 실제로 적용하면 다음과 비슷한 모습이 되겠습니다.
``` apache
&lt;VirtualHost *:80&gt;
	DocumentRoot &quot;/ncp/data/www/&quot;
	ServerName www.test.com

	RewriteEngine On
	RewriteCond %{HTTPS} !on
	RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
&lt;/VirtualHost&gt;
```

### 리다이렉트 HTTP 상태코드 설정
https로 리다이렉트 시킬때 HTTP 상태코드를 설정할 수 있습니다. 보통은 [**301, 영구 리다이렉션**]을 사용하지만 서비스 상황에 따라서는 다른 상태코드로 설정해야 하는 경우가 있습니다.  
설정하는 방법은 위에서 확인한 [**000-default.conf**] 설정값 중에서 아래 [**HTTP 상태코드**] 부분을 수정하면 됩니다.

``` apache
# 설정 방법
RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=HTTP 상태코드,L]

# 302 리다이렉트
RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=302,L]

# 307 리다이렉트
RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=307,L]
```


## Apache 재시작
``` bash
~# systemctl restart apache2
```
이렇게 재시작하고 http로 접속을 해보면 https로 전환되는 것을 확인할 수 있습니다.


## Apache 재시작 오류 - SSLEngine
위 내용처럼 아파치 재시작 명령어를 입력하면 끝입니다만, 재시작이 되지 않고 오류 메시지가 뜨는 경우가 있습니다.
``` bash
~# systemctl restart apache2
Job for apache2.service failed because the control process exited with error code. 
See &quot;systemctl status apache2.service&quot; and &quot;journalctl -xe&quot; for details.
```

오류 메시지에 나온 것 처럼 상세 내용을 확인해봅니다.
``` bash
~# systemctl status apache2.service
```
상세 오류 메시지 중에서 핵심 내용만 살펴보면 다음과 같습니다.
``` bash
Dec 04 16:09:44 test-lamp apachectl[11924]: AH00526: Syntax error on line 36 of /etc/apache2/sites-enabled/000-default.conf:
Dec 04 16:09:44 test-lamp apachectl[11924]: Invalid command &apos;SSLEngine&apos;, perhaps misspelled or defined by a module not included in the server configuration
```

위 오류 메시지에 나온 /etc/apache2/sites-enabled/000-default.conf 파일을 찾아가서 SSLEngine을 확인해보면 다음과 같습니다.
``` apache
&lt;VirtualHost *:443&gt;
    ServerName www.test.com
    ServerAdmin web@test.com

    {==SSLEngine on==}
    SSLCertificateFile /etc/******/server.crt
    SSLCertificateKeyFile /etc/******/server.key

    ###중략###
&lt;/VirtualHost&gt;
```

확인해보면 SSLEngine on 명령어가 제대로 동작하지 못해서 생긴 문제라는 것을 알 수 있습니다.     
즉, SSL 모듈이 제대로 활성화 되지 않았기에 활성화 해주면 문제가 해결됩니다.  
(나중에 살펴보면 socache_shmcb 모듈이 활성화되지 않았기 때문임을 알 수 있습니다)

## SSL 엔진 모듈 활성화
``` bash
~# a2enmod ssl
```

그리고 나서 다시 Apache를 재시작 하면 됩니다.
``` bash
~# systemctl restart apache2
```

이제 http로 접속하셔서 https로 전환되는지 확인해보시기 바랍니다.</description>
            <pubDate>Wed, 05 Jul 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_server_http_to_https_ubuntu.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_server_http_to_https_ubuntu.html</guid>
            
            <category>apache</category>
            
            <category>ubuntu</category>
            
            
        </item>
        
        <item>
            <title>http 접속 시에 https로 강제 리다이렉트 시키는 방법 - Apache/CentOS</title>
            <description>## 개요
웹사이트 SSL 인증서를 설치하고 https 접속을 유도할 때 http로 접속하면 https로 강제로 리다이렉트 시키는 방법을 사용하는 경우가 많습니다.  
웹페이지 소스에서 http 접속 여부를 판단해서 redirect 시키는 방법 등 여러가지 있을 수 있는데 여기서는 Apache 설정으로 쉽게 할 수 있는 방법을 소개합니다.  

SSL 인증서가 설치되어 있다는 가정하에 우선 Linux CentOS에서 설정하는 방법을 확인해보겠습니다.

## Apache conf 파일 수정

**/etc/httpd/conf/httpd.conf** 의 Vritual host에 다음 코드를 추가하고 Apache를 재시작하면 됩니다.
``` apache
RewriteEngine On
RewriteCond %{HTTPS} !on
RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
```

httpd.conf 파일에 실제로 적용하면 다음과 비슷한 모습이 되겠습니다.
``` apache
&lt;VirtualHost *:80&gt;
	DocumentRoot &quot;/ncp/data/www/&quot;
	ServerName www.test.com

	RewriteEngine On
	RewriteCond %{HTTPS} !on
	RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
&lt;/VirtualHost&gt;
```

### 리다이렉트 HTTP 상태코드 설정
https로 리다이렉트 시킬때 HTTP 상태코드를 설정할 수 있습니다. 보통은 [**301, 영구 리다이렉션**]을 사용하지만 서비스 상황에 따라서는 다른 상태코드로 설정해야 하는 경우가 있습니다.  
설정하는 방법은 위에서 확인한 [**httpd.conf**] 설정값 중에서 아래 [**HTTP 상태코드**] 부분을 수정하면 됩니다.

``` apache
# 설정 방법
RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=HTTP 상태코드,L]

# 302 리다이렉트
RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=302,L]

# 307 리다이렉트
RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=307,L]
```

## Apache 재시작
``` bash
root@test-lamp-2:~# systemctl restart  httpd.service
```
이렇게 재시작하고 http로 접속을 해보면 https로 전환되는 것을 확인할 수 있습니다.


## Apache 재시작 오류
위 내용처럼 아파치 재시작 명령어를 입력하면 끝입니다만, 재시작이 되지 않고 오류 메시지가 뜨는 경우가 있습니다.
``` bash
root@test-lamp-2:~# systemctl restart  httpd.service
Job for httpd.service failed because the control process exited with error code.  
See &quot;systemctl status httpd.service&quot; and &quot;journalctl -xe&quot; for details.
```

오류 메시지에 나온 것 처럼 상세 내용을 확인해봅니다.
``` bash
root@test-lamp-2:~# systemctl status httpd.service
```
상세 오류 메시지 중에서 핵심 내용만 살펴보면 다음과 같습니다.
``` bash
Dec 04 17:24:48 test-lamp-2 httpd[3217]: httpd: Syntax error on line 552 of /etc/httpd/conf/httpd.conf: Could not open configuration ...irectory
```

위 오류 메시지에 나온 /etc/httpd/conf/httpd.conf 파일을 찾아가서 해당 라인을 확인해보면 다음과 같습니다.
``` apache
#&lt;IfModule ssl_module&gt;
# Secure (SSL/TLS) connections
Include conf/extra/httpd-ssl.conf
#&lt;/IfModule&gt;
```

위에 나온 Include conf/extra/httpd-ssl.conf 라인을 주석처리 하면 해결이 됩니다.

``` apache
#&lt;IfModule ssl_module&gt;
# Secure (SSL/TLS) connections
#Include conf/extra/httpd-ssl.conf
#&lt;/IfModule&gt;
```

그리고 나서 다시 Apache를 재시작 하면 됩니다.
``` bash
root@test-lamp-2:~# systemctl restart  httpd.service
```

이제 http로 접속하셔서 https로 전환되는지 확인해보시기 바랍니다.



## SSL 모듈 설치
혹시 Apache에 mod_ssl 가 설치되어 있지 않다면 설치하셔야 합니다.

``` bash
~# yum -y install mod_ssl
```

``` bash
========================================================================
 Package   Arch       Version                 Repository   Size
========================================================================
Installing:
 mod_ssl    x86_64   1:2.4.6-97.el7.centos   updates    114 k

Transaction Summary
========================================================================
Install  1 Package

Total download size: 114 k
Installed size: 224 k

Downloading packages:
mod_ssl-2.4.6-97.el7.centos.x86_64.rpm                    | 114 kB  00:00:00
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : 1:mod_ssl-2.4.6-97.el7.centos.x86_64        1/1
  Verifying  : 1:mod_ssl-2.4.6-97.el7.centos.x86_64        1/1

Installed:
  mod_ssl.x86_64 1:2.4.6-97.el7.centos

Complete!
```</description>
            <pubDate>Wed, 05 Jul 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_server_http_to_https_centos.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_server_http_to_https_centos.html</guid>
            
            <category>apache</category>
            
            <category>centos</category>
            
            
        </item>
        
        <item>
            <title>Jenkins 서버 설치 가이드 | Rocky Linux</title>
            <description>## 개요
Ncloud (네이버 클라우드)의 Classic 환경에서는 Jekins 서버 이미지를 제공하고 있지만, VPC 환경에서는 제공하지 않기에 VPC 환경 록키 리눅스(Rocky Linux) 서버에 Jekins 서버를 설치하는 과정을 정리해보겠습니다.

## Jenkins란
Jenkins는 지속적 통합(Continuous Integration, CI)과 지속적 배포(Continuous Delivery, CD)를 위한 대표적인 도구로 빌드, 테스트, 배포 프로세스를 자동화하여 소프트웨어 품질 향상과 개발 생산성 향상에 도움을 주는 도구입니다.

## Jenkins 특징

- 지속적 통합을 사용하여 빌드, 테스트, 배포 과정을 자동화하여 개발 생산성을 향상할 수 있습니다.
- 자동화 테스트를 통하여 소프트웨어 품질을 향상할 수 있습니다.
- 지속적인 통합을 통해 안정적인 릴리즈를 빠르게 배포할 수 있습니다.


## 설치 과정 

### 패키지 저장소 추가
먼저 Jenkins의 패키지 저장소를 추가합니다.

```bash
~# wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### GPG 키 추카
그런 다음 Jenkins GPG 키를 다음과 같이 추가 합니다.

```bash
~# rpm --import \
    https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

## 패키지 업데이트
그리고, 패키지 관련한 보안-버그 수정 사항만 최소한으로 업데이트를 진행합니다.

``` bash
~# dnf -y upgrade-minimal
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### JAVA 설치
Jenkins를 구동하기 위해서 필요한 JAVA 11 버전을 설치합니다.

```bash
~# dnf -y install java-11-openjdk
```
{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### JAVA 버전 선택 {#java-version-select}
현재 시스템에 설치된 JAVA는 기본 설치 버전인 [**java-1.8.0**]과 좀 전에 설치한 [**java-11**] 이렇게 2가지인데, Jenkins는 [**java-11**] 버전을 사용하므로 다음 명령어로 [**java-11**] 버전이 기본으로 적용되도록 설정을 변경하겠습니다.  
명령어 입력 후 나타난 선택화면에서 [**java-11**] 버전에 해당하는 2번을 입력합니다. 그리고, 변경이 제대로 되었는지 java 버전을 확인합니다.

``` bash
~# update-alternatives --config java
~# java -version
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### Jenkins 설치
모든 준비가 끝났으면 Jenkins를 설치합니다.

```bash
~# dnf -y install jenkins
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### Jenkins 서비스 시작
Jekins 서비스를 시작하고 정상 작동을하고 있는지 다음과 같이 확인합니다.

``` bash
~# systemctl daemon-reload
~# systemctl enable jenkins
~# systemctl start jenkins
~# systemctl status jenkins
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-07.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-08.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}


## 방화벽 ACG 설정
Jekins 서버가 사용하는 기본 포트는 8080 입니다. Ncloud 방화벽 ACG에서 8080 포트를 허용해줍니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}


## 초기 설정

### Port 변경
{% include callout_v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;Jenkins의 기본 접속 Port는 8080인데 /etc/sysconfig/jenkins 의 JENKINS_PORT= 항목에서 변경 할 수 있습니다.&quot; %} 

``` bash
~# vi /etc/sysconfig/jenkins
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### 초기 패스워드 확인

설치가 완료 되면 http://{서버 IP주소}:8080 으로 접속하면 아래의 스크린샷처럼 초기 어드민 패스워드를 입력하는 화면이 나타납니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-11.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

초기 어드민 패스워드는 **/var/lib/jenkins/secrets/initialAdminPassword** 파일에 기록되어 있습니다.  
cat 명령어로 초기 패스워드를 확인합니다.

```bash
~# cat /var/lib/jenkins/secrets/initialAdminPassword
```

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

## 플러그인 설치
플러그인 설치는 추천 플러그인을 설치하는 옵션과 직접 선택해서 설치하는 옵션이 있습니다. 일단 여기서는 추천 플러그인을 선택하겠습니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

추천 플러그인을 선택하면 아래와 같이 설치과정이 나타납니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-14.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

직접 플러그인을 선택할 경우 아래와 같이 여러 플러그인 중에서 설치하고 싶은 플러그인을 선택할 수 있습니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-15.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}


## 어드민 계정 정보 입력
플러그인 설치를 마치면 아래와 같이 어드민 계정 정보를 입력하게 됩니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-16.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}


## 설치 완료
필요한 정보를 모두 입력하고 나면 마지막으로 Jekins URL을 확정하고 저장합니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-17.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

설치가 모두 끝났습니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-18.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

이제 Jekins에 접속하면 아래와 같은 화면을 확인할 수 있습니다.

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-19.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}


## 오류 상황
위 순서대로 설치를 진행했다면 문제 없이 설치가 되겠지만, 혹시나 설치 중에 중요한 과정을 빠뜨렸을 경우 아래아 같이 [**Jenkins**]를 시작하려고 할 때 오류가 발생하게 됩니다.

```  bash
~# systemctl start jenkins

Job for jenkins.service failed because the control process exited with error code.
See &quot;systemctl status jenkins.service&quot; and &quot;journalctl -xe&quot; for details.
```
{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-20.png&quot; width=&quot;840&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### 오류 원인 분석 
위 오류 메시지에서 2가지 방법으로 상세한 오류 내용을 확인해보겠습니다.

- 우선 첫번째 명령 [**systemctl status jenkins.service**]으로 확인을 해보았으나 별다른 내용은 나오지 않습니다.

``` bash
~# systemctl status jenkins.service

● jenkins.service - Jenkins Continuous Integration Server
   Loaded: loaded (/usr/lib/systemd/system/jenkins.service; enabled; vendor preset: disabled)
   Active: failed (Result: exit-code) since Fri 2023-06-30 17:08:01 KST; 1min 25s ago
  Process: 6494 ExecStart=/usr/bin/jenkins (code=exited, status=1/FAILURE)
 Main PID: 6494 (code=exited, status=1/FAILURE)

Jun 30 17:08:01 jenkins-test systemd[1]: Failed to start Jenkins Continuous Integration Server.
Jun 30 17:08:01 jenkins-test systemd[1]: jenkins.service: Service RestartSec=100ms expired, scheduling restart
Jun 30 17:08:01 jenkins-test systemd[1]: jenkins.service: Scheduled restart job, restart counter is at 5.
Jun 30 17:08:01 jenkins-test systemd[1]: Stopped Jenkins Continuous Integration Server.
Jun 30 17:08:01 jenkins-test systemd[1]: jenkins.service: Start request repeated too quickly.
Jun 30 17:08:01 jenkins-test systemd[1]: jenkins.service: Failed with result &apos;exit-code&apos;.
Jun 30 17:08:01 jenkins-test systemd[1]: Failed to start Jenkins Continuous Integration Server.
Jun 30 17:08:03 jenkins-test systemd[1]: jenkins.service: Start request repeated too quickly.
Jun 30 17:08:03 jenkins-test systemd[1]: jenkins.service: Failed with result &apos;exit-code&apos;.
Jun 30 17:08:03 jenkins-test systemd[1]: Failed to start Jenkins Continuous Integration Server.
```
{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-21.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

- 다음으로 [**journalctl -xe**] 명령을 입력해보니 상당히 긴 로그가 나오는데, 차근차근 살펴보다 보니 원인을 찾을 수 있었는데, 그 부분만 발췌해보면 아래와 같습니다.

``` bash
~# journalctl -xe

#------------- 중간 생략 --------------#
-- Unit jenkins.service has begun starting up.
Jun 30 17:37:41 jenkins-test jenkins[7588]: jenkins: invalid Java version: openjdk version &quot;1.8.0_352&quot;
Jun 30 17:37:41 jenkins-test jenkins[7588]: OpenJDK Runtime Environment (build 1.8.0_352-b08)
Jun 30 17:37:41 jenkins-test jenkins[7588]: OpenJDK 64-Bit Server VM (build 25.352-b08, mixed mode)
Jun 30 17:37:41 jenkins-test systemd[1]: jenkins.service: Main process exited, code=exited, status=1/FAILURE
Jun 30 17:37:41 jenkins-test systemd[1]: jenkins.service: Failed with result &apos;exit-code&apos;.
-- Subject: Unit failed
-- Defined-By: systemd
-- Support: https://lists.freedesktop.org/mailman/listinfo/systemd-devel
--
-- The unit jenkins.service has entered the &apos;failed&apos; state with result &apos;exit-code&apos;.
Jun 30 17:37:41 jenkins-test systemd[1]: Failed to start Jenkins Continuous Integration Server.
-- Subject: Unit jenkins.service has failed
-- Defined-By: systemd
-- Support: https://lists.freedesktop.org/mailman/listinfo/systemd-devel
--
-- Unit jenkins.service has failed.
--
-- The result is failed.
#------------- 중간 생략 --------------#
```

{% include callout-v2.html type=&quot;warning&quot; level=&quot;3&quot; content=&quot;
오류 로그 중에서 핵심이 되는 부분은 바로 이 문장입니다. &lt;br /&gt;
**`jenkins: invalid Java version: openjdk version &apos;1.8.0_352&apos;`**
&quot; %}

{% include image.html file=&quot;dev-tools/ncloud-dev-tools-jenkins-install-guide-rocky-linux-22.png&quot; width=&quot;845&quot; alt=&quot;Ncloud VPC 환경에서 Rocky Linux에 Jenkins 서버를 설치하는 방법&quot; caption=&quot;&quot; %}

### 오류 해결
즉, **오류 원인은 JAVA 버전**이었습니다. 현재의 Jenkins는 [java-11] 버전을 사용하는데, `[java-11]을 설치하지 않았거나` 현재 시스템에 JAVA가 [java-11] 뿐만 아니라 [java-1.8.0] 버전도 함께 설치되어 있는데, `[java-1.8.0] 버전이 기본 버전으로 설정된 상태여서 생기는 문제`입니다.  

위쪽 설치 단계에서 확인했던 아래 명령으로 JAVA 기본 버전을 [java-11]로 변경해주고 Jenkins를 시작하면 문제가 없습니다. 

- **[JAVA 기본 버전 변경하기 &lt;i class=&quot;fa-solid fa-arrow-up-from-bracket&quot;&gt;&lt;/i&gt;](#java-version-select)**

``` bash
~# update-alternatives --config java
~# java -version
```



## 참고 URL
1. Jeins Redhat Packages
    - &lt;a href=&quot;https://pkg.jenkins.io/redhat-stable/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all&quot;&gt;https://pkg.jenkins.io/redhat-stable/&lt;/a&gt;

2. Jenkins User Documentation
    - &lt;a href=&quot;https://www.jenkins.io/doc/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all&quot;&gt;https://www.jenkins.io/doc/&lt;/a&gt;


</description>
            <pubDate>Mon, 03 Jul 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/dev-tools/ncloud-dev-tools-jenkins-server-install-guide-rocky-linux.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/dev-tools/ncloud-dev-tools-jenkins-server-install-guide-rocky-linux.html</guid>
            
            <category>github</category>
            
            
        </item>
        
        <item>
            <title>Rocky Linux에서 NginX 설치, 설정하는 방법</title>
            <description>## 개요
Ncloud (네이버 클라우드) Rocky Linux (록키 리눅스) 서버에 NginX 최신 버전을 Package로 설치하고 기본 설정을 하는 방법에 대한 내용을 정리해보겠습니다.  


## 서버 환경

{% include callout_v2.html type=&quot;secondary&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; OS: Rocky Linux 8.6 &lt;br /&gt;
&amp;#8259; NginX: NginX 1.23.1 &lt;br /&gt; 
&amp;#8259; 테스트 사이트: nginx-test.com
&quot; %}

## 서버 준비
Ncloud 콘솔에서 Rocky Linux 8.6 서버를 아래와 같이 준비했습니다.

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 설치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## 패키지 업데이트
우선 패키지 관련한 보안-버그 수정 사항만 최소한으로 업데이트를 해보겠습니다.

``` bash
~# dnf -y upgrade-minimal
```
{% include note.html title=&quot;dnf&quot; content=&quot;Dandified YUM의 약자인 dnf는 기존의 yum 패키지 관리자가 갖고 있던 여러 단점들을 수정, 업그레이드해서 
Fedora 18 이후 버전에서 사용되고 있으며, Rocky Linux도 마찬가지로 dnf를 기본 패키지 관리자로 사용하고 있습니다. 물론 호환성을 위해서 yum 명령어도 사용할 수 있습니다.
&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### 리포지토리 설정 파일 추가
NginX 최신버전(mainline)을 설치하기 위해서는 epel-release 리포지토리 패키지가 필요하고, epel-release 리포지토리 패키지를 설치하기 위해서는 Extras 저장소 설정 파일이 필요합니다.  
우선, Extras 저장소 설정 파일을 준비합니다. 이미 생성되어 있는 경우에는 다음 단계로 넘어가도 되고, 그렇지 않을 경우 아래와 같은 내용으로 파일을 생성합니다.

``` bash
~# vi /etc/yum.repos.d/Rocky-Extras.repo
```

``` conf
# Rocky-Extras.repo

[extras]
name=Rocky Linux $releasever - Extras
#mirrorlist=https://mirrors.rockylinux.org/mirrorlist?arch=$basearch&amp;repo=extras-$releasever
baseurl=http://repo.ncloud.com/rocky/$releasever/extras/$basearch/os/
gpgcheck=1
enabled=1
countme=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-28.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

## EPEL 저장소 패키지 설치
다음으로 epel-release 저장소 패키지를 설치하겠습니다.

``` bash
~# dnf -y install epel-release
```

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## NginX 버전 선택
설치할 NginX 버전 버전을 선택합니다.

### NginX 버전 리스트
우선, Ncloud Rocky Linux 8.6에서 지원하는 NginX 버전을 확인합니다.  
리스트를 살펴보면 1.14가 기본 버전인 것을 알 수 있습니다.

``` bash
~# dnf module list nginx
```

- nginx 1.14 (default)
- nginx 1.16
- nginx 1.18
- nginx 1.20
- nginx mainline

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### 버전 활성화 정보 초기화
다음으로 위에서 확인했던 nginx 버전 활성화 정보를 초기화 합니다. 현재 활성화 된 버전이 존재하느냐에 따라 나타나는 메시지가 다릅니다.

``` bash
~# dnf module reset nginx
```

- 활성화 된 버전이 없을 때
{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

- 활성화 된 버전이 있을 때
{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### mainline 버전 활성화
최신 버전인 mainline 버전을 활성화합니다.

``` bash
~# dnf module enable nginx:mainline
```

{% include callout_v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;NginX는 stable, mainline 두가지 버전이 있습니다. 
NginX의 공식 설명에 따르면 버그 수정이나 보안 패치 등은 항상 mainline 버전에 먼저 적용되기 때문에 mainline을 사용하는 것을 추천한다고 합니다. &lt;br /&gt;
stable 버전을 사용하는 주된 경우는 **third-party 모듈**을 사용하고 있어서 신규 버전에서 **호환성 문제**가 발생할 가능성이 걱정될 때라고 합니다.&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}


## NginX 설치
NginX를 설치합니다. 설치된 버전은 다음과 같습니다.

``` bash
~# dnf -y install nginx
~# nginx -v
```
- NginX: 1.23.1

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## 디렉토리 설정
다음으로 홈으로 사용할 디렉토리를 생성하고, 해당 디렉토리의 소유권을 설정하겠습니다.  
그리고, NginX가 정상 작동하는지 확인해보기 위해 설치시에 포함된 index.html을 포함한 파일들을 홈 디렉토리로 복사합니다.

``` bash
# 테스트 사이트 홈 디렉토리 생성
~# mkdir -p /ncloud/data/www/nginx-test/

# 해당 디렉토리에 nginx에 권한 부여
~# chown -R nginx:nginx /ncloud/data/www/nginx-test

# nginx 샘플 페이지를 사이트 디렉토리로 복사
~# cp /usr/share/nginx/html/*.* /ncloud/data/www/nginx-test/

# 복사된 파일들 확인
~# ls -al /ncloud/data/www/nginx-test/
```
{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}



## 환경 설정

### 설정 파일 위치
NginX 환경 설정 파일의 위치는 **/etc/nginx/** 디렉토리입니다. **tree** 명령으로 해당 디렉토리에서 **conf**와 관련된 파일 리스트와 디렉토리 구조를 확인하면 다음과 같습니다.

``` bash
~# tree -P *conf* /etc/nginx/
```

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-16.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### 기본 설정 파일
위에서 확인할 수 있는 파일들 중에서 기본 환경 설정 파일은 **/etc/nginx/nginx.conf** 입니다.  
**nginx.conf** 파일을 열어보면 아래와 같이 **server {...}**로 시작되는 사이트 설정에 관련된 부분도 있지만,  
**include /etc/nginx/conf.d/*.conf** 와 같이 **conf.d** 디렉토리에 있는 설정 파일을 모두 불러오도록 되어 있습니다.  

물론, 사이트 설정을 **nginx.conf** 파일에 직접 설정해도 되지만, 여러 개의 사이트를 설정해야 하는 경우도 생각해서 **conf.d 디렉토리**에 사이트 이름별로 환경 설정 파일을 별도로 만들어서 진행하도록 하겠습니다. 

``` bash
~# vi /etc/nginx/nginx.conf
```

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-09.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### 기본 설정 주석 처리
**server {...}** 부분을 모두 주석 처리합니다.

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

### 환경 설정 파일 생성
**nginx-test.com** 이라는 도메인의 사이트 설정을 **nginx-test.conf** 설정 파일을 생성해서 저장합니다.

``` bash
~# vi /etc/nginx/conf.d/nginx-test.conf
```

``` nginx
  server {
    listen    80;
    listen    [::]:80;

    # 사이트 도메인 설정
    server_name    nginx-test.com www.nginx-test.com;

    # 홈 디렉토리, 기본 문서 설정
    root      /ncloud/data/www/nginx-test;
    index     index.html index.htm;

    # 404 error 페이지 설정
    error_page 404 /404.html;
      location = /404.html {
    }

    # 50x error 페이지 설정
    error_page 500 502 503 504 /50x.html;
      location = /50x.html {
      root    /ncloud/data/www/nginx-test;
    }

    # .htaccess 파일 접근 금지 설정
    location ~ /\.ht {
      deny    all;
    }
}
```

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}


## NginX 실행
설정을 모두 마쳤으면 NginX를 시작하고 상태를 확인합니다.

``` bash
~# systemctl enable nginx
~# systemctl start nginx
~# systemctl status nginx
```
{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

## hosts 파일 수정
지금과 같이 테스트용으로 임의 설정한 도메인(**nginx-test.com**)으로 접속하게 될 경우에는 hosts 파일을 수정해야 합니다.  
`실제 도메인을 사용할 경우에는 아래 과정이 필요 없기에` [다음 단계로 바로 이동&lt;i class=&quot;fa-solid fa-turn-down&quot;&gt;&lt;/i&gt;](#https-access-test)하시면 됩니다. 

윈도우 10에서 hosts 파일은 C:\Windows\System32\drivers\etc 에 존재하는데 직접 수정할 수가 없으므로 다음과 같은 단계를 거쳐야 합니다.

1. C:\Windows\System32\drivers\etc\hosts 파일을 임의의 작업 폴더 (예: D:\Work)로 복사합니다.
2. 복사한 hosts 파일을 수정해서 123.456.789.123 nginx-test.com 처럼 접속할 IP 주소와 도메인을 추가합니다.
3. 수정한 파일을 C:\Windows\System32\drivers\etc 위치로 덮어쓰기 합니다.
4. 덮어쓰기 할 때 관리자 권한이 필요하다는 안내 메시지가 나타나면 [계속] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-14.png&quot; width=&quot;745&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-ssl-setting-guide-centos-05.png&quot; width=&quot;710&quot; alt=&quot;Ncloud CentOS 서버에 NginX SSL 인증서를 설정하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-ssl-setting-guide-centos-06.png&quot; width=&quot;710&quot; alt=&quot;Ncloud CentOS 서버에 NginX SSL 인증서를 설정하는 방법&quot; caption=&quot;&quot; %}


## 사이트 접속 {#https-access-test}
NginX가 정상 작동하면 아래와 같이 서버 접속 화면을 확인할 수 있습니다.

{% include image.html file=&quot;compute/lemp/ncloud-server-nginx-install-setting-guide-rocky-linux-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버에 NginX를 Package로 치하고 기본 설정을 하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1.  Rocky Linux NginX 설치 기본 가이드
	- &lt;a href=&quot;https://docs.rockylinux.org/guides/web/nginx-mainline/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.rockylinux.org/guides/web/nginx-mainline/&lt;/a&gt;

2.  Rocky Linux NginX Multi Site 설치 가이드
	- &lt;a href=&quot;https://docs.rockylinux.org/guides/web/nginx-multisite/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.rockylinux.org/guides/web/nginx-multisite/&lt;/a&gt;</description>
            <pubDate>Thu, 29 Jun 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud-compute-lemp-nginx-install-setting-rocky-linux-guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud-compute-lemp-nginx-install-setting-rocky-linux-guide.html</guid>
            
            <category>rocky_linux</category>
            
            <category>lemp</category>
            
            <category>nginx</category>
            
            <category>install</category>
            
            
        </item>
        
        <item>
            <title>Ncloud에서 제공하는 록키 리눅스(Rocky Linux) 서버 소개</title>
            <description>## 개요
Rocky Linux (록키 리눅스)는 CentOS의 서비스 지원 종료로 대안으로 떠오른 CentOS 기반의 리눅스 OS입니다.  
Ncloud (네이버 클라우드)는 이 록키 리눅스의 핵심 파트너로 선정되어 국내에서 록키 리눅스 인프라와 기술지원을 위해 협력해왔고, 드디어 Ncloud 콘솔에서 록키 리눅스를 제공하기 시작했기에 간단하게 소개해보려고 합니다.

## 제공 버전
Ncloud에서는 현재 Rocky Linux 8.6 버전을 VPC 환경에서 제공하고 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

## 설치할 소프트웨어
록키 리눅스 서버를 실행하고 보통 자주 사용하게 되는 아래의 소프트웨어들을 설치하고 확인해보겠습니다.
- Apache
- PHP
- NGINX
- MariaDB (MySQL)

## 접속 화면
서버를 생성하고 접속하면 아래와 같이 Ncloud 로고가 크게 표시된 화면을 볼 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

## 패키지 업데이트
우선 패키지 관련한 보안-버그 수정 사항만 최소한으로 업데이트를 해보겠습니다.

``` bash
~# dnf -y upgrade-minimal
```
{% include note.html title=&quot;dnf&quot; content=&quot;Dandified YUM의 약자인 dnf는 기존의 yum 패키지 관리자가 갖고 있던 여러 단점들을 수정, 업그레이드해서 
Fedora 18 이후 버전에서 사용되고 있으며, Rocky Linux도 마찬가지로 dnf를 기본 패키지 관리자로 사용하고 있습니다. 물론 호환성을 위해서 yum 명령어도 사용할 수 있습니다.
&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

## Apache, PHP 설치
설치할 소프트웨어 중에서 Apache와 PHP를 동시에 설치해보겠습니다.  

``` bash
~# dnf -y install httpd php
```

설치된 버전은 다음과 같습니다.
- Apache: 2.4.37
- PHP: 7.2.24

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### 접속화면
설치 완료 후에 웹브라우저로 접속해보면 다음과 같이 Apache 로고가 포함된 화면을 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-06.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### PHP 버전 리스트
Ncloud Rocky Linux 8.6에서 지원하는 PHP 버전은 다음과 같이 확인해볼 수 있습니다.  
리스트를 확인해보면 7.2버전이 기본이고, 현재 활성화된 버전도 7.2버전인 것을 알 수 있습니다.

``` bash
~# dnf module list php
```

- PHP 7.2 (default)
- PHP 7.3
- PHP 7.4
- PHP 8.0

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-19.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

## PHP 버전 변경
기본으로 설치된 **7.2** 버전에서 다른 버전으로 변경하는 방법에 대해 알아보겠습니다. 여기서는 **8.0**으로 변경해보겠습니다.

### 버전 활성화 정보 초기화
우선 위에서 확인했던 php 버전 활성화 정보를 초기화 합니다.

``` bash
~# dnf module reset php
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-20.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}


### PHP 8.0 활성화
다음으로 8.0 버전을 활성화 합니다.

``` bash
~# dnf module enable php:8.0
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-21.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### PHP 8.0 설치
마지막으로 8.0 버전을 설치하고 버전을 확인해봅니다.

``` bash
~# dnf -y install php
~# php -v
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-22.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

## NginX 설치
다음으로 NginX 최신버전(mainline)으로 설치해보겠습니다.  
NginX 최신버전(mainline)을 설치하기 위해서는 epel-release 리포지토리 패키지가 필요하고, epel-release 리포지토리 패키지를 설치하기 위해서는 Extras 저장소 설정 파일이 필요합니다.

### 리포지토리 설정 파일 추가
우선, Extras 저장소 설정 파일 준비합니다. 이미 생성되어 있는 경우에는 다음 단계로 넘어가도 되고, 그렇지 않을 경우 아래와 같은 내용으로 파일을 생성합니다.

``` bash
~# vi /etc/yum.repos.d/Rocky-Extras.repo
```

``` conf
# Rocky-Extras.repo

[extras]
name=Rocky Linux $releasever - Extras
#mirrorlist=https://mirrors.rockylinux.org/mirrorlist?arch=$basearch&amp;repo=extras-$releasever
baseurl=http://repo.ncloud.com/rocky/$releasever/extras/$basearch/os/
gpgcheck=1
enabled=1
countme=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-28.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### EPEL 리포지토리 패키지 설치
다음으로, NginX 최신 버전을 설치하기 위해 epel-release 리포지토리 패키지를 설치하겠습니다.

``` bash
~# dnf -y install epel-release
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### NginX 버전 리스트
위 준비사항이 모두 완료되었으면, Ncloud Rocky Linux 8.6에서 지원하는 NginX 버전을 확인합니다.  
리스트를 살펴보면 1.14가 기본 버전이고, 현재 활성화된 버전도 1.14인 것을 알 수 있습니다.

``` bash
~# dnf module list nginx
```

- nginx 1.14 (default)
- nginx 1.16
- nginx 1.18
- nginx 1.20
- nginx mainline

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-23.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### 버전 활성화 정보 초기화
우선 위에서 확인했던 nginx 버전 활성화 정보를 초기화 합니다.  
혹시 활성화된 버전이 없을 경우에는 별다른 변화 없이 과정이 완료됩니다.

``` bash
~# dnf module reset nginx
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-24.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### mainline 버전 활성화
최신 버전인 mainline 버전을 활성화합니다.

``` bash
~# dnf module enable nginx:mainline
```
{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### 설치
NginX 설치합니다. 설치된 버전은 다음과 같습니다.

``` bash
~# dnf -y install nginx
~# nginx -v
```
- NGINX: 1.23.1

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### 접속화면
설치 완료 후에 nginx를 실행 시키고, 웹브라우저로 접속해보면 다음과 같이 NGINX 로고가 포함된 화면을 확인할 수 있습니다.

``` bash
~# systemctl enable nginx
~# systemctl start nginx
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

## MariaDB (MySQL) 설치

### MariaDB 버전 리스트
우선, Ncloud Rocky Linux 8.6에서 지원하는 MariaDB 버전을 확인합니다.  
리스트를 살펴보면 10.3이 기본 버전인 것을 알 수 있습니다.

``` bash
~# dnf module list mariadb
```

- mariadb 10.3 (default)
- mariadb 10.5

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-27.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### 설치
Rocky Linux에서는 기본 DB가 MariaDB이고, 설치할 때도 [**mariadb-server**]로 설치하게 됩니다.  
여기서는 기본 버전으로 설치하겠습니다.

``` bash
~# dnf -y install mariadb-server
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

MariaDB 데몬을 시작합니다.  
그런데 자세히 보시면 생성된 symlink가 [**mysql.service**]인 것을 확인할 수 있습니다. 즉, MariaDB를 실행할 때는 [**mysql**] 명령을 입력하면 된다는 뜻입니다.

``` bash
~# systemctl enable mariadb
~# systemctl start mariadb
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-13.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### DB 접속
[**mysql**] 명령을 입력하면 아래와 같이 MariaDB 서버에 접속됩니다.  
설치된 DB 서버 버전은 다음과 같습니다.
- MariaDB: 10.3.32

``` bash
~# mysql
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-14.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}


## 웹 콘솔
Rocky Linux는 웹브라우저에서 서버에 접속해서 서버를 관리할 수 있는 웹 콘솔을 제공하는데, 처음 서버에 접속했던 콘솔화면을 보면 아래와 같이 웹 콘솔을 활성화하는 방법이 안내되어 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

아래 명령어를 입력하면 [**9090**] 포트로 접속할 수 있는 웹 콘솔이 활성화됩니다.
``` bash
~# systemctl enable --now cockpit.socket
```
{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-16.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### 웹 콘솔 접속
먼저, ACG에서 [**9090**] 포트를 오픈하고, [**https://{서버 IP}:9090**]으로 접속하면 아래와 같은 화면을 볼 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-17.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

### 웹 콘솔 화면
웹 콘솔에 접속하면 서버 상태와 시스템 정보, CPU-메모리 사용량 등을 확인할 수 있고, 그 외에도 여러 가지 기능을 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-18.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}


## 버전 활성화 오류 해결 방법
[dnf module enable &lt;module_name&gt;] 명령으로 다른 버전을 활성화하려고 할 때 아래와 같은 오류가 발생하는 경우가 있습니다.  
오류 메시지 하단에 보면 [**dnf module reset &lt;module_name&gt;**] 명령을 입력하면 해결된다 합니다.

{% include warning.html title=&quot;Error&quot; content=&quot;It is not possible to switch enabled streams of a module unless explicitly enabled via configuration option module_stream_switch. 
It is recommended to rather remove all installed content from the module, and reset the module using &apos;**dnf module reset \&lt;module_name\&gt;**&apos; command. After you reset the module, you can install the other stream.
&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-25.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}


명령을 입력하고 처리가 완료되면 [**dnf module enable \&lt;module_name\&gt;:\&lt;module_version\&gt;**] 명령을 다시 입력하면 됩니다.
``` bash
#예시
~# dnf module reset php
~# dnf module reset nginx
```
{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-26.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-guide-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드)에서 제공하기 시작한 록키 리눅스 소개&quot; caption=&quot;&quot; %}


## 참고 URL
1.  Rocky Linux 공식 가이드
	- &lt;a href=&quot;https://docs.rockylinux.org/guides/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.rockylinux.org/guides/&lt;/a&gt;

2.  Rocky Linux Apache 설정
	- &lt;a href=&quot;https://docs.rockylinux.org/guides/web/apache-sites-enabled/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.rockylinux.org/guides/web/apache-sites-enabled/&lt;/a&gt;

2.  Rocky Linux NGINX 설정
	- &lt;a href=&quot;https://docs.rockylinux.org/guides/web/nginx-multisite/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.rockylinux.org/guides/web/nginx-multisite/&lt;/a&gt;

2.  Rocky Linux MariaDB 설치
	- &lt;a href=&quot;https://docs.rockylinux.org/guides/database/database_mariadb-server/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.rockylinux.org/guides/database/database_mariadb-server/&lt;/a&gt;		
</description>
            <pubDate>Thu, 29 Jun 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud-compute-server-rocky-linux-guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud-compute-server-rocky-linux-guide.html</guid>
            
            <category>linux</category>
            
            <category>apache</category>
            
            <category>php</category>
            
            <category>nginx</category>
            
            <category>mysql</category>
            
            <category>mariadb</category>
            
            <category>rocky_linux</category>
            
            
        </item>
        
        <item>
            <title>Ncloud Rocky Linux 서버 Repository 미러 사이트 오류 문제 해결 방법</title>
            <description>## 개요  
Ncloud (네이버 클라우드)에서 록키 리눅스(Rocky Linux) 8.6 서버를 제공하고 있는데, 패키지를 설치할 때 간혹 패키지 다운로드 사이트 또는 미러 사이트에서 8.6 버전에 대한 패키지 정보를 찾을 수 없다는 메시지가 나타나면서 패키지를 설치할 수 없는 경우가 있습니다.   
그렇다면 왜 이런 문제가 생기는지와 어떻게 하면 해결할 수 있는지를 정리해보겠습니다.

## 오류 상황
테스트로 아파치를 설치해보려고 했는데, 오류 메시지가 나타나면서 설치를 할 수 없었습니다. 또한 리포지토리 미러 사이트도 Ncloud 내부 서버가 아닌 록키 리눅스 공식 미러 사이트로 연결하려고 시도한 것을 확인할 수 있습니다.

``` bash
~# dnf -y install httpd

Rocky Linux 8.6 - Extras                                 5.4 kB/s |  20 kB     00:03
Errors during downloading metadata for repository &apos;extras&apos;:
  - Status code: 404 for https://mirrors.rockylinux.org/mirrorlist?arch=x86_64&amp;repo=extras-8.6 (IP: 151.101.26.132)
  - Status code: 404 for https://mirrors.rockylinux.org/mirrorlist?arch=x86_64&amp;repo=extras-8.6 (IP: 146.75.94.132)
Error: Failed to download metadata for repo &apos;extras&apos;: Cannot prepare internal mirrorlist: Status code: 404 for https://mirrors.rockylinux.org/mirrorlist?arch=x86_64&amp;repo=extras-8.6 (IP: 151.101.26.132)
```
{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

## 미러 사이트 확인
오류 메시지에 나온 공식 미리 사이트에 접속해보니 [**AppStream**], [**extras**] 등 모든 8.6 버전에 대한 정보가 사라진 것을 확인할 수 있었습니다.

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

## 오류 상황 요약 정리
현재 확인되는 오류 상황을 정리해보면 다음과 같습니다.

1. 패키지를 검색하는 저장소가 [**AppStream**] 이나 [**BaseOS**]가 아닌 [**Extras**]로 변경되어 있다.
2. 리포지토리 미러 사이트를 Ncloud 내부 서버가 아닌 외부에 있는 록키 리눅스 공식 미러 사이트로 접속시도 하고 있다.
3. 외부에 있는 록키 리눅스 공식 미러 사이트에서는 공식 지원이 종료되는 8.6 버전에 대한 데이터가 이미 삭제되어 있다. 

## 원인 분석
원인 분석을 하기 위해 서버의 리포지토리 설정을 확인해보겠습니다.

### 리포지토리 설정 - 오류 서버
[**/etc/yum.repos.d/**] 디렉토리에 있는 리포지토리 설정 파일을 확인해보면 아래와 같이 다수의 파일이 존재하는 것을 확인할 수 있습니다.

``` bash
~# ls -al /etc/yum.repos.d/
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

- 위에서 확인한 설정 파일들 중에서 [**Rocky-Extras.repo**] 파일을 열어서 미러 사이트 주소를 확인해보면, Ncloud 내부 서버가 아닌 아래와 같이 록키 리눅스 공식 사이트로 설정되어 있는 것을 알 수 있습니다.

``` bash
~# vi /etc/yum.repos.d/Rocky-Extras.repo
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

### 리포지토리 설정 - 정상 서버
그렇다면 아무 문제 없는 정상적인 서버의 경우는 어떤지 비교해서 살펴보겠습니다.  

마찬가지로 [**/etc/yum.repos.d/**] 디렉토리에 있는 리포지토리 설정 파일을 확인해보면 오류가 발생한 서버와 달리 아래와 같이 [**Rocky-AppStream.repo**], [**Rocky-BaseOS.repo**] 이렇게 2가지 파일만 존재하는 것을 확인할 수 있습니다.

``` bash
~# ls -al /etc/yum.repos.d/
```
{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

- 또한 2가지 설정 파일들 중에서 [**Rocky-AppStream.repo**] 파일을 열어서 미러 사이트 주소를 확인해보면, 록키 리눅스 공식 사이트는 주석 처리가 되어 있고, [**baseurl**]이 [**repo.ncloud.com**] 이라는 Ncloud 내부 서버로 설정되어 있는 것을 알 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}


### 원인 추적
오류가 발생한 서버와 정상적인 서버의 차이점을 비교 추적해보니 오류가 발생한 서버에서는 서버 생성 후에 `패키지 업데이트`가 진행된 것을 알 수 있었습니다. 
서버 생성 후에 설치된 패키지들의 업데이트를 적용하기 위해 [**dnf upgrade**]를 실행했고, 그에 따라 리포지토리 정보가 변경되었다는 것을 알 수 있었습니다.

``` bash
~# dnf -y upgrade
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}


{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
[**dnf upgrade**]와 [**dnf update**]의 차이점에 대해 [**man dnf**] 명령어로 매뉴얼을 살펴보면 Rocky Linux에서 패키지 업데이트를 위한 기본 명령어는 [**dnf upgrade**]이며, [**dnf update**]는 더 이상 사용되지 않는 별칭이라고 합니다.
&quot; %}

``` bash
~# man dnf
#--- 중략 ---#
Upgrade Command
       Command: upgrade
       Aliases: up
       Deprecated aliases: update, upgrade-to, update-to, localupdate
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}


## 해결 방법
이 문제를 해결하는 방법은 몇가지가 있는데 차례대로 정리해보겠습니다.

### 방법-1
첫번째 방법은 [**Rocky-Extras.repo**] 리포지토리 설정파일의 주소를 Ncloud 내부 서버로 변경하는 방법입니다.

``` conf
# Rocky-Extras.repo

#mirrorlist=https://mirrors.rockylinux.org/mirrorlist?arch=$basearch&amp;repo=AppStream-$releasever
baseurl=http://repo.ncloud.com/rocky/$releasever/extras/$basearch/os/
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

- 주소를 변경 후에 아파치를 설치해보면 문제 없이 잘 설치 되는 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-09.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}


### 방법-2
두번째 방법은 패키지를 설치할 때 미러 사이트 주소가 변경된 [**Extras**] 저장소를 비활성화하는 옵션을 적용하는 방법입니다.

``` bash
~# dnf -y install httpd --disablerepo=extras
```
{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

## 사전 예방책
위 방법들은 패키지 업데이트 후에 문제를 해결하는 방법이므로, 사전에 이런 문제가 생기지 않도록 하는 것도 선택지 중의 하나입니다. 가능한 방법은 다음 2가지 입니다.
- 패키지 업데이트를 진행하지 않는 방법
- 보안-버그 수정 사항만 최소한으로 업데이트 하는 방법

### 패키지 최소 업데이트
보안-버그 수정 사항만 최소한으로 업데이트 하는 [**upgrade-minimal**] 옵션으로 업데이트를 했을 경우에는 아래와 같이 리포지토리 파일에 변화가 없어서 이후 패키지 설치에 오류가 생기지 않습니다.

``` bash
~# dnf -y upgrade-minimal
```

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-12.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-13.png&quot; sub-class=&quot;docimage-no-top&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Rocky Linux 서버 리포지토리 미러 사이트 오류 문제 해결 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1.  Rocky Linux 서버 소개
	- &lt;a href=&quot;/compute/ncloud-compute-server-rocky-linux-guide.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud-compute-server-rocky-linux-guide.html&lt;/a&gt;

2.  Rocky Linux 미러 사이트 리스트
	- &lt;a href=&quot;https://mirrors.rockylinux.org/mirrormanager/mirrors/Rocky&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://mirrors.rockylinux.org/mirrormanager/mirrors/Rocky&lt;/a&gt;
</description>
            <pubDate>Thu, 29 Jun 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-troubleshooting.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud-compute-server-rocky-linux-repository-mirror-site-error-troubleshooting.html</guid>
            
            <category>linux</category>
            
            <category>rocky_linux</category>
            
            
        </item>
        
        <item>
            <title>Ncloud VPC 환경에서 무료 서버(Micro Type) 이용하는 방법</title>
            <description>## 개요 
Ncloud (네이버 클라우드)는 체험 및 테스트 용도로 **최초 결제 수단 등록 월부터 1년간 무료**로 사용할 수 있는 Micro 타입 서버를 제공하고 있습니다. 전에는 Classic 환경에서만 이용할 수 있었는데, 최근 업데이트 이후 VPC 환경에서도 이용할 수 있게 되었기에, VPC 환경에서 무료 서버인 Micro 타입 서버를 생성하는 과정을 정리해보겠습니다.

## Micro 타입 서버 특징
- 스펙: vCPU 1개, 메모리 1GB
- `계정당 1대`만 이용 가능
- 체험용으로 가용성 및 성능 보장 불가
- 거주지 국가가 한국인 경우만 제공
- `신규 가입 후 최초 결제 수단 등록 월부터 1년간 무료` 제공, 1년이 지나면 **월요금제**로 과금
- 최초 결제 수단 등록 월은 포털 마이페이지 &gt; 결제수단 관리에서 확인
- Network Interface는 1개만 이용 가능
- 3세대(g3) 서버로 **KVM** 하이퍼바이저 기반의 서버만 제공
- 기본 스토리지는 **10 GB까지만 무료**이며, 용량을 늘리거나 추가하는 스토리지의 경우 유료 과금


## 서버 생성
[**VPC**] 환경에서 서버(Server)를 생성하려면 사전에 [**VPC**]와 [**Subnet**]이 생성되어 있어야 하는데, 혹시 처음 [**VPC**] 환경에 접속하셔서 [**VPC**]와 [**Subnet**]이 존재하지 않는 경우는 아래 문서를 보고 미리 생성하고 오셔야 합니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&lt;a href=&apos;/compute/ncloud_compute_server_vpc_create.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;VPC 환경에서 서버 생성하는 방법 (VPC, Subnet 생성 포함)&lt;/a&gt;
&quot; %}

## Server 서비스 위치
[**Server**] 서비스는 [**Console**] - [**Services**] - [**Compute**]에 위치해 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- [**Server**] - [**Server**]에서 [**서버 생성**] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-02.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

## 서버 생성 콘솔 선택
Ncloud 서버 생성 콘솔화면은 신규 기능이 업데이트 되면서 2가지를 선택할 수 있습니다. Micro 타입 서버는 **KVM** 하이퍼바이저 기반의 서버이므로  [**신규 콘솔 화면**]으로 진행하겠습니다.

- 기존 콘솔 화면: **XEN, RHV** 하이퍼바이저 기반의 서버(g1,g2)를 생성할 수 있습니다.
- 신규 콘솔 화면: **XEN, RHV** 하이퍼바이저 기반의 서버(g1,g2)뿐만 아니라 **KVM** 기반 및 다양한 성능을 제공하는 기본 스토리지로 서버(**g3**)를 생성할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-03.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

## 서버 이미지 선택
Micro 타입 서버를 생성하려면 하이퍼바이저 기준으로 [**KVM**] 서버 이미지를 선택하면 됩니다. 현재 Ncloud에서 제공되는 [**KVM**] 서버 이미지는 아래와 같이 [**CentOS 7.8**], [**Ubuntu 20.04**] 이렇게 2가지 입니다. 여기서는 Ubuntu 20.04로 생성해보겠습니다.

{% include image.html file=&quot;compute/ncloud-compute-micro-type-server-create-vpc-guide-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 무료 서버(Micro Type) 이용하는 방법&quot; caption=&quot;&quot; %}

## 서버 설정
서버 설정 단계에서는 [**VPC**]와 [**Subnet**]을 선택하고  [**서버 스펙**]과 [**요금제**], [**Network Interface**], [**공인 IP 할당 여부**] 등을 선택하게 됩니다. `서버는 1년간 무료이지만, 공인 IP를 할당하게 되면 공인 IP 비용이 청구됩니다.`

{% include image.html file=&quot;compute/ncloud-compute-micro-type-server-create-vpc-guide-02.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 무료 서버(Micro Type) 이용하는 방법&quot; caption=&quot;&quot; %}

## 스토리지 설정
KVM 하이퍼바이저 기반인 Micro 타입서버는 기본 스토리지 10GB까지만 무료로 제공되며, 용량을 늘릴 경우 비용이 발생합니다.

{% include image.html file=&quot;compute/ncloud-compute-micro-type-server-create-vpc-guide-03.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 무료 서버(Micro Type) 이용하는 방법&quot; caption=&quot;&quot; %}

## 인증키 설정
인증키 이름을 입력하고, [**인증키 생성 및 저장**] 버튼을 클릭해서 인증키를 로컬 PC에 다운로드 받아서 안전한 곳에 보관해야 합니다. 기존에 사용하고 있던 인증키가 있을 경우에는 [**보유하고 있는 인증키 이용**]을 선택하면 됩니다.

{% include warning.html title=&quot;인증키&quot; content=&quot;인증키는 해당 서버의 **관리자 비밀번호**를 확인하는데 사용되므로 **안전한 곳에 잘 보관**해야 합니다.&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-20.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

## 네트워크 접근 설정
네트워크 접근은 [**ACG**]로 설정하게 되는데, `ACG(Access Control Group)는 서버 간 네트워크 접근 제어 및 관리를 할 수 있는 IP/Port 기반 필터링 방화벽 서비스`로, 서버에 별도의 복잡한 방화벽 구축없이 간단하게 서버에 대한 네트워크 접근 제어를 할 수 있습니다.  
[**VPC**]를 생성하면 자동으로 생성되는 **기본 ACG**를 선택하거나 별도로 생성한 ACG가 있을 경우 해당 ACG를 선택하면 됩니다. **적용할 ACG는 최대 3개**까지 선택할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-micro-type-server-create-vpc-guide-04.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 무료 서버(Micro Type) 이용하는 방법&quot; caption=&quot;&quot; %}

## 서버 생성 완료
모든 단계를 마치고 나면 아래와 같이 서버가 생성된 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-micro-type-server-create-vpc-guide-05.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 무료 서버(Micro Type) 이용하는 방법&quot; caption=&quot;&quot; %}

## 서버 접속
생성된 서버에 접속해서 vCPU와 Memory 상태를 확인해보면 다음과 같습니다.

``` bash
~# grep -c processor /proc/cpuinfo
~# free
```

{% include image.html file=&quot;compute/ncloud-compute-micro-type-server-create-vpc-guide-06.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 무료 서버(Micro Type) 이용하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1.  Ncloud 서버 접속 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/server-access-vpc&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/server-access-vpc&lt;/a&gt;

2.  Ncloud 서버 인증키 변경하는 방법
	- &lt;a href=&quot;/compute/ncloud-compute-server-change-authentication-key.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud-compute-server-change-authentication-key.html&lt;/a&gt;
</description>
            <pubDate>Wed, 21 Jun 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud-compute-micro-type-server-create-vpc.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud-compute-micro-type-server-create-vpc.html</guid>
            
            <category>linux</category>
            
            <category>vpc</category>
            
            
        </item>
        
        <item>
            <title>Classic 환경 Micro 타입 서버에서 사용할 수 없는 서비스</title>
            <description>## 개요
Ncloud (네이버 클라우드) Classic 환경에서 제공하는 서버 타입 중에서 Micro 타입의 서버는 신규 가입 후 최초 결제수단 등록월부터 1년간 무료로 제공되는 체험용 서버입니다.
계정당 1대만 이용 가능하며 1년이 지나면 유료로 전환됩니다.

## 제한되는 서비스
Classic 환경 Micro 타입의 서버에서 사용할 수 없는 서비스는 다음과 같습니다.

- mssql
- LAMP, WordPress, LEMP 등
- Network Interface
- Private Subnet


### MSSQL 
mssql 중에서 mssql 2017 Express은 무료로 제공되는 서비스이지만, mssql이 1년 무료제공 서버인 Micro서버에서는 설치가 되지 않기 때문에, compact 이상의 유료 서버를 이용해야 합니다.
즉, mssql 2017 Express는 무료이나 서버와 그에 따른 하드 디스크 비용은 유료입니다.

### LAMP
LAMP (Linux + Apache, Mysql, PHP)의 경우 Micro 타입의 서버에 설치를 할 수 없고, Standard 이상의 서버에서만 설치할 수 있는데, 대신 네이버 클라우드에서는 LAMP 등 많이 사용되는 오픈 소스 소프트웨어가 설치된 서버를 쉽게 이용할 수 있도록 해주는 서비스인 Application Server Launcher를 제공하고 있습니다.

Application Server Launcher에서는 원하는 소프트웨어의 이미지를 선택하기만 하면 쉽게 Micro 타입의 서버를 세팅하고 이용할 수 있습니다.

{% include callout_v2.html type=&quot;success&quot; level=&quot;2&quot; content=&quot;다만, Application Server Launcher에서 생성한 서버도 Micro 타입의 서버이기 때문에 계정당 1개만 제공되는 Micro 타입 서버 기준에 따라 Micro 타입의 서버는 더 이상 추가할 수 없습니다.&quot; %}


Application Server Launcher에서 OS버전(CentOS, Ubuntu)별로 제공되는 애플리케이션은 다음과 같습니다.

- Drupal (CMS)
- Joomla! (CMS)
- Magento (E-Commerce)
- Shadowsocks (VPN)
- LAMP (Web Stack)
- WordPress (CMS)
- Jenkins (Dev Tools)


### Private Subnet
Private Subnet을 구성해서 서버환경을 만들려고 해도 Micro 서버 타입은 Network Interface를 추가할 수 없고, 그에 따라 Private Subnet도 적용할 수 없습니다.


## 참고 URL
1.  Ncloud 서버 사용 준비 - 제공되는 서버 스펙
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/server-spec&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/server-spec&lt;/a&gt;

</description>
            <pubDate>Tue, 20 Jun 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_server_micro_type_limit.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_server_micro_type_limit.html</guid>
            
            <category>limit</category>
            
            
        </item>
        
        <item>
            <title>Ncloud 서버에 SSH Key를 이용해 접속하는 방법</title>
            <description>## 개요 
리눅스 서버에 접속하는 방법은 [**아이디-패스워드**]로 접속하는 방법과 [**SSH Key**]를 이용해 접속하는 방법이 있습니다.  
Ncloud (네이버 클라우드)에서는 기본으로 [**아이디-패스워드**]로 접속하는 방법을 제공하고 있으므로 여기서는 다른 방법인 [**SSH Key**]를 이용해 서버에 접속하는 방법을 정리해보게겠습니다.

## 테스트 서버 준비
테스트로 사용할 서버는 [**Rocky Linux 8.6**] 서버로 생성했습니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

## SSH Key 생성
우선 Ncloud 제공하는 [**아이디-패스워드**] 방식으로 서버에 접속한 후, 아래의 명령으로 SSH key를 생성합니다.

``` bash
~# ssh-keygen -t rsa -m pem
```

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

### 상세 설명
위의 SSH Key 생성 화면에서 몇가지를 좀 더 자세히 살펴보겠습니다.

- Key 저장 위치 설정  
아래 스샷처럼 생성된 [**SSH Key**]를 어느 위치에 저장할 것인지 확인하는 단계입니다. 아무것도 입력하지 않고 Enter 키를 입력하면 기본 저장 위치인 [/root/.ssh/id_rsa]에 저장됩니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-24.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- Key 파일 암호 설정  
보안을 좀 더 강화하려면 [**SSH Key**]를 사용할 때 암호(passphrase)를 입력하도록 설정할 수 있습니다. 아무것도 입력하지 않으면 암호 없이 사용하게 됩니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-25.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}


### 생성된 Key 확인
Key가 생성된 디렉토리로 이동해서 살펴보면 [**id_rsa**], [**id_rsa.pub**] 이렇게 2개의 파일이 생성된 것을 확인할 수 있습니다.

- id_rsa: Private Key
- id_rsa.pub: Public Key

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

## Key 파일명 변경
mv 명령어를 사용해 [**SSH Key**] 인증에서 사용할 파일명으로 변경 합니다.

```bash
~# mv id_rsa id_rsa.pem
~# mv id_rsa.pub authorized_keys
```
{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-23.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

## Private Key 복사
위에서 생성된 [**Private Key**]인 [**id_rsa.pem**] 파일을 로컬 PC로 가져오는 방법은 크게 2가지가 있는데 편하신 방법을 사용하면 되겠습니다. 

1. 암호화 텍스트로 구성된 파일의 내용을 복사해서 로컬 PC 텍스트 편집기에 붙여넣고 새로운 파일로 저장하는 방법
2. [**WinSCP**], [**FileZilla**] 등의 SFTP 프로그램을 이용해서 파일을 로컬 PC로 전송하는 방법

### 방법 1: 텍스트 복사
[**id_rsa.pem**] 파일은 암호화된 텍스트로 구성된 파일이므로 파일 내용을 확인해서 복사합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-26.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- 복사한 내용을 로컬 PC의 텍스트 편집기에 붙여 넣고 저장합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-27.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

### 방법 2: WinSCP 접속
[**WinSCP**]로 서버에 접속하면 처음에는 파일이나 디렉토리가 전혀 보이지 않습니다. 즉, 인증키 파일이 저장된 [**.ssh**] 디렉토리가 숨겨진 디렉토리이기 때문입니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-04.png&quot; width=&quot;844&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- 숨겨진 디렉토리를 확인하기 위해 [**옵션**] - [**설정**] 메뉴에 들어갑니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-05.png&quot; width=&quot;844&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- [**설정**] 창에서 [**패널**]을 선택하면 위쪽에 [**숨김 파일 표시**] 옵션이 있는데 이 옵션을 체크하고 [확인] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-06.png&quot; width=&quot;547&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

#### Key 전송
[**숨김 파일 표시**] 옵션을 체크하면 아래와 같이 [**.ssh**] 디렉토리를 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-07.png&quot; width=&quot;844&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- [**.ssh**] 디렉토리에 들어가서 [**id_rsa.pem**] 파일을 로컬 PC로 전송합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-08.png&quot; width=&quot;844&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

## PPK 파일 변환
[**SSH Key**] 인증으로 서버에 접속할 때 주로 사용하는 프로그램이 [**PuTTY**]인데, [**Putty**]에서는 [**PEM**] 파일이 아니라 [**PPK**]파일을 사용하기 때문에 [**PEM**] 파일을 [**PPK**]파일로 변환해야 합니다. 이럴 때 사용하는 것이 [**PuTTY Key Generator**] 즉, [**PuTTYgen**]인데, [**PuTTY**] 통합 설치 파일에 포함되어 있습니다.

### PuTTY 설치
[**PuTTYgen**] 사이트에 접속해서 [**PuTTY**]를 다운로드 받고 설치합니다.
- &lt;a href=&quot;https://www.puttygen.com/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://www.puttygen.com/&lt;/a&gt;

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- 설치가 완료되었으면 로컬 PC에서 [**PuTTYgen**]을 찾아서 실행합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-10.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

### Key 변환
우선 위에서 로컬 PC로 전송받았던 [**id_rsa.pem**]을 파일을 불러오기 위해 [**PuTTYgen**] 화면에서 가운데에 있는 [**Load**] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-11.png&quot; width=&quot;602&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- 파일 선택창에서 파일 확장자를 [**All Files**]로 선택 하고 [**id_rsa.pem**] 파일을 선택하고 [**열기**] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-12.png&quot; width=&quot;844&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- [**Notice**] 팝업에서 [**확인**] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-13.png&quot; width=&quot;337&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- [**Save private key**] 버튼을 눌러 PPK 파일로 변환합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-14.png&quot; width=&quot;602&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- Key 파일에 암호 즉, [**passphrase**]가 없을 경우 경고 팝업이 뜨는데 [**예**] 버튼을 클릭해서 다음 단계로 넘어 갑니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-15.png&quot; width=&quot;292&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- 파일명을 입력 후 [**저장**] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-16.png&quot; width=&quot;844&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

## 서버 접속
이제 위에서 변환 저장한 Key 파일로 서버에 접속해보겠습니다.


### PuTTY 설정
우선, [**PuTTY**] 프로그램을 실행합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-17.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- [**Host Name (or IP address)**]에 접속할 서버의 IP를 입력합니다. 또는 [**계정@서버IP**] 형식으로 미리 로그인 계정을 입력해두는 방법도 있습니다. 
(예: 123.456.789.012 또는 root@123.456.789.012)

{% tabs putty-configuration %}

{% tab putty-configuration IP만 입력 %}

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-18.png&quot; width=&quot;452&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}
{% endtab %}

{% tab putty-configuration 계정@IP 입력 %}

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-28.png&quot; width=&quot;452&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}
{% endtab %}

{% endtabs %}

- 좌측의 Category에서 [**Conncetion**] - [**SSH**] - [**Auth**] - [**Credentials**] 설정 메뉴에서 [**Private key file for authentication**] 항목에 위에서 변환 저장했던 파일을 선택하기 위해 [**Browser**] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-19.png&quot; width=&quot;452&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- 위에서 저장했던 test-key.PPK 파일을 선택 합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-20.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

- 다음으로 아래쪽에 있는 [**Open**] 버튼을 클릭해서 서버에 접속합니다.

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-21.png&quot; width=&quot;452&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

## 서버 접속 완료
그러면 아래와 같이 비밀번호 입력 없이 [**Authenticating with public key &quot;imported-openssh-key&quot;**]라는 메시지가 나타나면서 서버에 접속됩니다.  
(PuTTY 접속 설정 [**Host Name**]에 IP만 입력했을 경우에는 [**login as**]에 로그인 계정을 입력해야 합니다.)

{% tabs ssh-key-connect %}

{% tab ssh-key-connect IP만 입력 %}

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-22.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

{% endtab %}

{% tab ssh-key-connect 계정@IP 입력 %}

{% include image.html file=&quot;compute/ncloud-compute-server-connect-by-ssh-key-29.png&quot; width=&quot;840&quot; alt=&quot;Ncloud (네이버 클라우드) Linux 서버에 SSH Key로 접속하는 방법&quot; caption=&quot;&quot; %}

{% endtab %}

{% endtabs %}



## 참고 URL
1.  Ncloud 서버 접속 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/server-access-vpc&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/server-access-vpc&lt;/a&gt;

2.  Ncloud 서버 인증키 변경하는 방법
	- &lt;a href=&quot;/compute/ncloud-compute-server-change-authentication-key.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud-compute-server-change-authentication-key.html&lt;/a&gt;
</description>
            <pubDate>Mon, 19 Jun 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud-compute-server-connect-by-ssh-key.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud-compute-server-connect-by-ssh-key.html</guid>
            
            <category>linux</category>
            
            <category>password</category>
            
            
        </item>
        
        <item>
            <title>Windows 서버 스토리지(디스크) 추가 상세 가이드</title>
            <description>## 개요
**Ncloud (네이버 클라우드)는** 스토리지 당 **최대 2TB**까지 확장할 수 있으며, **최대 16개**의 스토리지를 이용할 수 있습니다.  
이번에는 Windows 서버에 스토리지 즉, 디스크를 추가하는 방법에 대해 정리해보겠습니다.

## 테스트 환경
Windows Server 2016 (64-bit) English Edition 으로 진행 되었습니다. 추가 스토리지는 총 10G disk 총 4개 입니다.

## 스토리지 생성

- 서버 &gt; 서버 관리 및 설정 변경 &gt; 스토리지생성

{% include image.html file=&quot;compute/ncloud_compute_server_windows_storage_add_detail_process_01.png&quot; width=&quot;745&quot; alt=&quot;cloud Windows 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}



- 스토리지 생성에 필요한 내용을 입력합니다.
- 크기는 스토리지 하나 당 **10GB~2000GB까지** 사용할 수 있습니다.

{% include image.html file=&quot;compute/ncloud_compute_server_windows_storage_add_detail_process_02.png&quot; width=&quot;695&quot; alt=&quot;cloud Windows 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

- 사용 될 추가디스크를 생성합니다.

{% include image.html file=&quot;compute/ncloud_compute_server_windows_storage_add_detail_process_03.png&quot; width=&quot;680&quot; alt=&quot;cloud Windows 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

## 윈도우 서버 디스크 관리

- 디스크관리(윈도우키+r) : diskmgmt.msc

{% include image.html file=&quot;compute/ncloud_compute_server_windows_storage_add_detail_process_04.png&quot; width=&quot;450&quot; alt=&quot;cloud Windows 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

### 디스크 초기화
- initializeDisk를 선택하여 디스크를 초기화 합니다.

{% include image.html file=&quot;compute/ncloud_compute_server_windows_storage_add_detail_process_05.png&quot; width=&quot;805&quot; alt=&quot;cloud Windows 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

### 초기화 방식 선택
- 두 가지 방식 중 하나를 선택합니다.

{% include image.html file=&quot;compute/ncloud_compute_server_windows_storage_add_detail_process_06.png&quot; width=&quot;805&quot; alt=&quot;cloud Windows 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

#### MBR과  GPT 차이

| MBR | GTP |
| :---: | :---: |
| 주파티션을 4개까지 생성 가능 | 주 파티션을 128개까지 생성 가능 |
| 디스크 용량 최대 2TB까지 인식 | 디스크 용량 최대 9.4ZB까지 인식 |
| BIOS가 설치된 PC에서 사용 | UEFI 또는 EFI가 설치된 PC에서 사용 가능 |
| Windows 32비트와 64비트 사용 가능 | Windows 32비트 사용 불가 |


### 볼륨 생성
- 새 단순 볼륨 생성하기

{% include image.html file=&quot;compute/ncloud_compute_server_windows_storage_add_detail_process_09.png&quot; width=&quot;805&quot; alt=&quot;cloud Windows 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}

- 추가한 총 4개의 디스크 단순 볼륨 생성을 하였습니다.

{% include image.html file=&quot;compute/ncloud_compute_server_windows_storage_add_detail_process_10.png&quot; width=&quot;805&quot; alt=&quot;cloud Windows 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}


## 디스크 추가 확인
- 아래와 같이 추가 생성한 디스크 추가가 완료되었습니다.

{% include image.html file=&quot;compute/ncloud_compute_server_windows_storage_add_detail_process_11.png&quot; width=&quot;837&quot; alt=&quot;cloud Windows 서버 스토리지(디스크) 추가 상세 가이드&quot; caption=&quot;&quot; %}</description>
            <pubDate>Thu, 15 Jun 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_server_windows_storage_add_detail_process.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_server_windows_storage_add_detail_process.html</guid>
            
            <category>windows</category>
            
            <category>storage</category>
            
            
        </item>
        
    </channel>
</rss>
