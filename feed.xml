<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>3RDEYESYSTEM Technical Documentations</title>
        <description>써드아이시스템(3rdeyesys) 기술문서 사이트입니다 - Ncloud 프리미엄 파트너</description>
        <link>https://docs.3rdeyesys.com/</link>
        <atom:link href="https://docs.3rdeyesys.com/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Mon, 18 Sep 2023 15:17:02 +0900</pubDate>
        <lastBuildDate>Mon, 18 Sep 2023 15:17:02 +0900</lastBuildDate>
        <generator>Jekyll v4.2.2</generator>
        
        
        <item>
            <title>Ncloud Security Monitoring WAF 서비스 요금 정보</title>
            <description>## 개요
Ncloud (네이버 클라우드) Security Monitoring 서비스는 무료인 Basic 서비스와 유료인 Managed 서비스가 있고, 그 중에서 유료 서비스인 Managed 서비스는 IDS, Anti-DOS, WAF, Anti-Virus, IPS 등 4가지 서비스를 모두 제공하고 있는데 그 중에서 WAF(Web Application Firewall) 서비스의 이용 요금 구성과 신청 시 주의 사항에 대해 정리해보겠습니다.

## 구성
WAF 서비스 장비는 [**WAF VM + WAF LB**]로 구성되어 있습니다. 따라서 사용 요금도 WAF VM 요금과 WAF LB 요금이 별도로 청구됩니다.

{% include image.html file=&quot;security/ncloud-security-security-monitoring-waf-guide-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) Security Monitoring WAF 구성도&quot; caption=&quot;&quot; %}


## 요금
&lt;div class=&quot;col-sm-12&quot;&gt;
&lt;table class=&quot;simple_table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;상품명&lt;/th&gt;
      &lt;th&gt;과금 구간 (Mbps)&lt;/th&gt;
      &lt;th&gt;가격 (월 요금, VAT별도)&lt;/th&gt;
      &lt;th&gt;비고&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
        &lt;td rowspan=&quot;4&quot;&gt;WAF VM&lt;/td&gt;
        &lt;td&gt;0 ~ 100 이하&lt;/td&gt;
        &lt;td style=&quot;text-align:right;&quot;&gt;974,800 원&lt;/td&gt;
        &lt;td rowspan=&quot;4&quot;&gt;리전 단위 판매&lt;br /&gt;이중화 기본 제공&lt;br /&gt;(요금은 이중화 가격)&lt;/td&gt;
    &lt;/tr&gt; 
    &lt;tr&gt;        
        &lt;td&gt;100 초과 ~ 300 이하&lt;/td&gt;
        &lt;td style=&quot;text-align:right;&quot;&gt;1,174,800 원&lt;/td&gt;        
    &lt;/tr&gt; 
    &lt;tr&gt;        
        &lt;td&gt;300 초과 ~ 500 이하&lt;/td&gt;
        &lt;td style=&quot;text-align:right;&quot;&gt;1,474,800 원&lt;/td&gt;        
    &lt;/tr&gt;
    &lt;tr&gt;        
        &lt;td&gt;500 초과 ~ 1,000 이하&lt;/td&gt;
        &lt;td style=&quot;text-align:right;&quot;&gt;2,274,800 원&lt;/td&gt;        
    &lt;/tr&gt;  
    &lt;tr&gt;
        &lt;td&gt;WAF LB&lt;/td&gt;
        &lt;td&gt;WAF LB 1개당&lt;/td&gt;
        &lt;td style=&quot;text-align:right;&quot;&gt;25,200 원&lt;/td&gt;
        &lt;td&gt;WAF LB개수는 WAF 모니터링을 신청하려는&lt;br /&gt;도메인 개수 또는 인증서 개수를 의미&lt;/td&gt;
    &lt;/tr&gt; 
  &lt;/tbody&gt;
&lt;/table&gt;  
&lt;/div&gt;

### 과금 구간 기준
과금 구간을 결정, 변경하게 되는 기준은 **`월 기준 in/out 트래픽 중에서 Peak 트래픽입`**니다. 그러므로 월 기준으로 단 한번이라도 신청 구간을 초과할 경우 과금 기준이 변경될 수 있습니다.

## 요금 예시

&lt;div class=&quot;col-sm-12&quot;&gt;
&lt;table class=&quot;simple_table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;해당 월 Peak 트래픽&lt;/th&gt;   
      &lt;th&gt;도메인 또는&lt;br /&gt;인증서 개수&lt;/th&gt;   
      &lt;th&gt;WAF VM 요금 (VAT 별도)&lt;/th&gt;      
      &lt;th&gt;WAF LB 요금 (VAT 별도)&lt;/th&gt;
      &lt;th&gt;합계 (VAT 별도)&lt;br /&gt;&lt;br /&gt;(WAF VM 요금 + WAF LB 요금)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;    
    &lt;tr&gt;
        &lt;td&gt;160 Mbps&lt;/td&gt;        
        &lt;td&gt;1개&lt;/td&gt;
        &lt;td style=&quot;text-align:right;&quot;&gt;1,174,800 원&lt;/td&gt;        
        &lt;td style=&quot;text-align:right;&quot;&gt;25,200 원&lt;/td&gt;
        &lt;td style=&quot;text-align:right;&quot;&gt;1,200,000 원&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;160 Mbps&lt;/td&gt;        
        &lt;td&gt;2개&lt;/td&gt;
        &lt;td style=&quot;text-align:right;&quot;&gt;1,174,800 원&lt;/td&gt;        
        &lt;td style=&quot;text-align:right;&quot;&gt;50,400 원&lt;/td&gt;
        &lt;td style=&quot;text-align:right;&quot;&gt;1,225,200 원&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;300 Mbps&lt;/td&gt;        
        &lt;td&gt;1개&lt;/td&gt;
        &lt;td style=&quot;text-align:right;&quot;&gt;1,174,800 원&lt;/td&gt;        
        &lt;td style=&quot;text-align:right;&quot;&gt;25,200 원&lt;/td&gt;
        &lt;td style=&quot;text-align:right;&quot;&gt;1,200,000 원&lt;/td&gt;
    &lt;/tr&gt; 
    &lt;tr&gt;
        &lt;td&gt;301 Mbps&lt;/td&gt;        
        &lt;td&gt;1개&lt;/td&gt;
        &lt;td style=&quot;text-align:right;&quot;&gt;1,474,800 원&lt;/td&gt;        
        &lt;td style=&quot;text-align:right;&quot;&gt;25,200 원&lt;/td&gt;
        &lt;td style=&quot;text-align:right;&quot;&gt;1,500,000 원&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;  
&lt;/div&gt;

{% include callout-v2.html type=&quot;warning&quot; level=&quot;3&quot; content=&quot;WAF 이용 요금은 고객 서비스의 서버 정지와 무관하게 청구됩니다. 서버 정지와 함께 Security Monitoring 서비스의 WAF 계약도 함께 해지해야 과금되지 않습니다.&quot; %}

{% include callout-v2.html type=&quot;info&quot; level=&quot;3&quot; content=&quot;SLA 수준이 낮은 [단일구성 WAF서비스]를 이용하고자 하시면, 고객지원으로 문의하셔야 합니다.&quot; %}

## WAF 신청 시 주의 사항

### VPC

- **`Application Load Balancer 사용 필수`**: WAF는 Reverse Proxy 방식으로 사용자별 별도의 WAF 플랫폼을 구성하여 제공하고, HTTP/HTTPS 트래픽에 대한 보안 모니터링을 제공합니다. 따라서 Application Load Balancer를 사용하는 HTTP/HTTPS 서비스에만 제공이 가능합니다.
- **`서비스 도메인 필수`**: WAF 서비스를 사용하려면 사용자 서비스 도메인의 CNAME을 WAF Load Balancer 도메인 정보로 수정하여 트래픽이 WAF를 향하도록 설정해야 합니다. 그러므로 서비스 도메인이 있어야 서비스를 신청할 수 있습니다.
- **서비스 인증서 전달**: HTTPS 서비스 모니터링을 위해 WAF Load Balancer에 인증서를 설치해야 하며, 서비스 신청 시 사용자 서비스의 인증서도 함께 전달해야 합니다.
- **HTTP 80 리스너 설정**: WAF VM과 사용자 서비스 Application Load Balancer 간의 통신은 HTTP 80 port 공인 통신을 사용합니다. 그러므로 사용자 서비스 Application Load Balancer에 HTTP 80 리스너를 기본으로 구성해야 합니다.
- **리다이렉션 설정**: WAF Load Balancer에서 80 포트에 대한 443 리다이렉트 설정도 기본으로 지원하고 있습니다. 따라서 WAF 서비스를 정상적으로 사용하려면 사용자의 Application Load Balancer나 서버에서 HTTP -&gt; HTTPS 리다이렉트가 있는 경우 삭제해야 합니다.
- **HTTP 프로토콜 설정**: HTTPS 모니터링 신청 시, 신청한 Application Load Balancer 리스너에 HTTP 프로토콜 설정이 필요합니다.
- **CNAME 설정**: WAF(V2) 제공을 위해서 고객 대상 도메인에 CNAME 설정을 해야 합니다. 고객 대상 도메인이 Base 도메인인 경우, CNAME 설정이 불가능하오니 A레코드에 WAF VIP로 설정합니다. 그리고, WAF 구성 후 고객에게 CNAME에 등록할 WAF Load Balancer 도메인 설정 정보 전달 예정입니다.


### Classic
- **HTTP/HTTPS 표준 프로토콜 사용 필수**: WAF는 HTTP/HTTPS 표준 프로토콜을 사용하는 웹 서비스에 대한 보안 모니터링을 제공합니다. 따라서 네이버 클라우드 플랫폼의 Load Balancer를 사용 중인 서비스에 대한 모니터링을 하려면 Load Balancer Protocol을 반드시 HTTP, HTTPS로 설정해야 합니다. 만약 TCP, SSL로 설정하는 경우 WAF 서비스를 사용할 수 없습니다.



## 참고 URL
1. Ncloud Security Monitoring 서비스 안내
- &lt;a href=&quot;https://www.ncloud.com/product/security/securityMonitoring&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://www.ncloud.com/product/security/securityMonitoring&lt;/a&gt;

2. Ncloud Security Monitoring 가이드 
- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/securitymonitoring-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/securitymonitoring-overview&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}</description>
            <pubDate>Mon, 18 Sep 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/security/ncloud-security-security-monitoring-waf-price-info.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/security/ncloud-security-security-monitoring-waf-price-info.html</guid>
            
            <category>security</category>
            
            <category>monitoring</category>
            
            
        </item>
        
        <item>
            <title>설치형 PostgreSQL DB 설치, 접속 가이드 | Rocky Linux</title>
            <description>## 개요
PostgreSQL은 설치 후에 DB에 접속할 때 MySQL등 다른 DB와 달리 [**OS와 PostgreSQL 양쪽에 동일한 계정을 생성**]하거나 
[**인증관련 환경설정 파일을 수정**]해야 접속할 수 있는데 이 두가지 방법을 [**Rocky Linux**]에서 적용하는 과정을 정리해보겠습니다.

## 테스트 환경
- Rocky Linux 8.8
- PostgreSQL 13.12


## 설치
기본 배포 버전으로 테스트할 수도 있지만, 여기서는 **PostgreSQL 13** 최신 버전을 설치해보겠습니다.

### 리포지토리 버전 확인
우선 Rocky Linux에서 지원하는 기본 버전들을 확인해보면 아래와 같이 PostgreSQL [**9.6**], [**10**], [**12**], [**13**], [**15**] 인 것을 확인할 수 있습니다.

``` bash
~# dnf module list postgresql
```

{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}

### 기본 버전 비활성화
**PostgreSQL 13** 최신 버전을 사용하기 위해 기본 버전들은 모두 비활성화합니다. 비활성화 처리 후 리스트를 다시 조회해보면 [**disabled**]를 뜻하는 [**X**]로 변경된 것을 확인할 수 있습니다.

``` bash
~# dnf -qy module disable postgresql
~# dnf module list postgresql
```

{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-03.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}


### 리포지토리 설치
[**PostgreSQL 13**] 설치 정보가 담겨 있는 리포지토리 RPM을 설치합니다.

``` bash
~# dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm
```
{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}



### PostgreSQL 설치
[**PostgreSQL 13**]을 설치합니다.

``` bash
~# dnf install -y postgresql13-server
```
{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}

### 기본 DB 생성
[**initdb**] 명령으로 기본 DB를 생성하고 올바르게 생성되었는지 로그를 확인해보겠습니다.

``` bash
~# cd /usr/pgsql-13/bin/
~# postgresql-13-setup initdb
~# cat /var/lib/pgsql/13/initdb.log
```
{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}

### PostgreSQL 시작
``` bash
~# systemctl enable postgresql-13
~# systemctl start postgresql-13
~# systemctl status postgresql-13
```
{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}

## DB 접속
기본 마스터 계정인 [**postgres**]로 [**PostgreSQL**]에 접속합니다.

``` bash
~# su postgres
bash$ psql
```
{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}


### 유저 생성
테스트용 계정 [testuser]를 생성하고 [**\du**] 명령으로 생성된 유저를 확인합니다.

``` sql
postgres=# create user testuser password &apos;test123$&apos; superuser;
postgres=# \du 
```
{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}

### DB 생성 및 소유자 지정
테스트용 DB를 생성하고 소유자를 지정한 후에 [**\l**] 명령으로 생성된 DB를 확인합니다.  

``` sql
postgres=# create database testdb owner testuser;
postgres=# \l
postgres=# \q
bash$
``` 
{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-09.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}


### 접속 시도 - 인증 오류
위에서 생성한 계정으로 접속을 시도해보면, 아래와 같이 인증 오류가 발생합니다.  
다음 단계에서는 이 인증 오류를 **해결하는 방법 2가지**를 확인해보겠습니다.

``` bash
~# psql -U testuser -d testdb
psql: error: FATAl: Peer authentication failed for user &quot;testuser&quot;
```
{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}


## 인증 오류 해결
인증 문제를 해결하고 [**PostgreSQL**]에 접속하는 방법은 크게 2가지가 있는데 한가지씩 확인해보겠습니다.


### 방법1 - 동일한 계정 생성
우선, 처음에 DB 생성 후에 추가했던 [**PostgreSQL**] 유저 계정과 동일한 계정을 OS 사용자에도 추가하는 방법입니다.  

아래와 같이 DB 유저와 동일한 [testuser] 계정을 생성하겠습니다.
``` bash
~# adduser testuser
~# passwd testuser
```
{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}

- **DB 접속**  
새로 생성한 [**testuser**] 계정으로 전환한 후에 접속을 해보면 문제 없이 접속되는 것을 확인할 수 있습니다.

``` bash
~# su testuser
~$ psql -U testuser -d testdb
```
{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}


### 방법2 - 인증 설정 파일 수정
다음으로 인증 관련 설정 파일인 [**pg_hba.conf**] 파일을 수정해서 접속하는 방법을 확인해보겠습니다.  

[**pg_hba.conf**] 파일을 열어보면 아래와 같이 DB 접근 설정 항목들이 있는데 [**local**]과 IPv4용 [**host**]의 METHOD 항목을 보시면 각각 [**peer**]과 [**scram-sha-256**]으로 설정되어 있는 것을 확인할 수 있습니다.  

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;여기서 [**peer**]는 운영 체제에서 클라이언트의 운영 체제 사용자 이름과 요청한 데이터베이스 사용자 이름이 일치하는지 확인하는 옵션입니다.&quot; %}

이 항목을 [**scram-sha-256**] 또는 [**md5**]로 수정합니다.

``` bash
~# vim /var/lib/pgsql/13/data/pg_hba.conf
```

- 수정 전
{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-13.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}

- 수정 후
{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-14.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}

- **DB 재시작 후 접속**  
설정 파일을 수정했으면 [**PostgreSQL**]을 재시작하고 다시 접속해봅니다.  
이번에는 문제 없이 DB 유저 생성 시 입력했던 패스워드를 입력하고 접속 가능한 것을 확인할 수 있습니다.

``` bash
~# systemctl restart postgresql-13
~# psql -U testuser -d testdb
```
{% include image.html file=&quot;database/ncloud-database-postgresql-install-connect-guide-rocky-linux-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 설치형 PostgreSQL DB를 설치하고, 접속하는 방법&quot; caption=&quot;&quot; %}


## 기본 배포 버전 설치
[**PostgreSQL 13**] 최신 버전이 아닌 기본 배포 버전을 설치하려면 아래와 같은 방법으로 설치를 하면 됩니다.  
나머지 인증 방법은 위에서 설명한 내용과 동일합니다.

``` bash
~# dnf install -y postgresql-server
~# cd /usr/bin/
~# postgresql-setup --initdb
~# systemctl enable postgresql
~# systemctl start postgresql
~# systemctl status postgresql
```

### OS별 배포 버전
2023년 9월 13일 기준 Red Hat family OS별로 설치되는 배포 버전은 다음과 같습니다.

- RHEL / Rocky Linux 9 : 15, 13
- RHEL / Rocky Linux / OL 8	: 15, 13, 12, 10 and 9.6 via modules
- RHEL / CentOS / SL / OL 7	: 9.2
- RHEL / CentOS / SL / OL 6	: 8.4
- Fedora 37	: 14
- Fedora 36	: 14



## pg_hba.conf 파일 Method 옵션
[**pg_hba.conf**] 설정 파일의 Method 옵션 리스트는 아래와 같습니다.

- **trust**: 무조건 접속을 허용합니다. 이 방법을 사용하면 PostgreSQL 데이터베이스 서버에 연결할 수 있는 모든 사람이 암호나 다른 인증 없이 원하는 PostgreSQL 사용자로 로그인할 수 있습니다. 

- **reject**: 무조건 연결을 거부합니다. 이것은 그룹에서 특정 호스트 를 &quot; 필터링 &quot;reject 하는 데 유용합니다. 예를 들어 한 라인은 특정 호스트의 연결을 차단할 수 있고 나중 라인은 특정 네트워크의 나머지 호스트가 연결할 수 있도록 합니다.

- **scram-sha-256**: SCRAM-SHA-256 인증을 수행해 사용자의 암호를 확인합니다. 

- **md5**: SCRAM-SHA-256 또는 MD5 인증을 수행해 사용자의 암호를 확인합니다. 

- **password**: 클라이언트가 인증을 위해 암호화되지 않은 암호를 제공하도록 요구합니다. 암호는 네트워크를 통해 일반 텍스트로 전송되기 때문에 신뢰할 수 없는 네트워크에서는 사용해서는 안 됩니다. 

- **gss**: GSSAPI를 사용해 사용자를 인증합니다. 이것은 TCP/IP 연결에만 사용할 수 있습니다. GSSAPI 암호화와 함께 사용할 수 있습니다.

- **sspi**: SSPI를 사용해 사용자를 인증합니다. 이것은 Windows에서만 사용할 수 있습니다. 

- **ident**: 클라이언트의 ident 서버에 연결하여 클라이언트의 운영 체제 사용자 이름을 얻고 요청한 데이터베이스 사용자 이름과 일치하는지 확인합니다. ID 인증은 TCP/IP 연결에서만 사용할 수 있습니다. 로컬 연결에 대해 지정된 경우 피어 인증이 대신 사용됩니다. 

- **peer**: 운영 체제에서 클라이언트의 운영 체제 사용자 이름을 가져와서 요청한 데이터베이스 사용자 이름과 일치하는지 확인합니다. 이것은 로컬 연결에만 사용할 수 있습니다. 

- **lda**: LDAP 서버를 사용해 인증 합니다. 

- **radius**: RADIUS 서버를 사용해 인증합니다. 

- **cert**: SSL 클라이언트 인증서를 사용해 인증합니다. 

- **pam**: 운영 체제에서 제공하는 PAM(Pluggable Authentication Modules) 서비스를 사용해 인증합니다. 

- **bsd**: 운영 체제에서 제공하는 BSD 인증 서비스를 사용해 인증합니다. 



## 참고 URL
1. PostgreSQL OS별 다운로드 안내
	- &lt;a href=&quot;https://www.postgresql.org/download/linux/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://www.postgresql.org/download/linux/&lt;/a&gt;

2. PostgreSQL pg_hba.conf 파일 옵션 안내
	- &lt;a href=&quot;https://www.postgresql.org/docs/current/auth-pg-hba-conf.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://www.postgresql.org/docs/current/auth-pg-hba-conf.html&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}  
</description>
            <pubDate>Wed, 13 Sep 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud-database-postgresql-install-connect-guide-rocky-linux.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud-database-postgresql-install-connect-guide-rocky-linux.html</guid>
            
            <category>database</category>
            
            <category>vpc</category>
            
            <category>postgresql</category>
            
            
        </item>
        
        <item>
            <title>Ncloud VPC 환경에서 무료 서버(Micro Type) 이용하는 방법</title>
            <description>## 개요 
Ncloud (네이버 클라우드)는 체험 및 테스트 용도로 **최초 결제 수단 등록 월부터 1년간 무료**로 사용할 수 있는 Micro 타입 서버를 제공하고 있습니다. 전에는 Classic 환경에서만 이용할 수 있었는데, 최근 업데이트 이후 VPC 환경에서도 이용할 수 있게 되었기에, VPC 환경에서 무료 서버인 Micro 타입 서버를 생성하는 과정을 정리해보겠습니다.

## Micro 타입 서버 특징
- 스펙: vCPU 1개, 메모리 1GB
- `계정당 1대`만 이용 가능
- 체험용으로 가용성 및 성능 보장 불가
- 거주지 국가가 한국인 경우만 제공
- `신규 가입 후 최초 결제 수단 등록 월부터 1년간 무료` 제공, 1년이 지나면 **월요금제**로 과금
- 최초 결제 수단 등록 월은 포털 마이페이지 &gt; 결제수단 관리에서 확인
- Network Interface는 1개만 이용 가능
- 3세대(g3) 서버로 **KVM** 하이퍼바이저 기반의 서버만 제공
- 기본 스토리지는 **10 GB까지만 무료**이며, 용량을 늘리거나 추가하는 스토리지의 경우 유료 과금


## 서버 생성
[**VPC**] 환경에서 서버(Server)를 생성하려면 사전에 [**VPC**]와 [**Subnet**]이 생성되어 있어야 하는데, 혹시 처음 [**VPC**] 환경에 접속하셔서 [**VPC**]와 [**Subnet**]이 존재하지 않는 경우는 아래 문서를 보고 미리 생성하고 오셔야 합니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&lt;a href=&apos;/compute/ncloud_compute_server_vpc_create.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;VPC 환경에서 서버 생성하는 방법 (VPC, Subnet 생성 포함)&lt;/a&gt;
&quot; %}

## Server 서비스 위치
[**Server**] 서비스는 [**Console**] - [**Services**] - [**Compute**]에 위치해 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

- [**Server**] - [**Server**]에서 [**서버 생성**] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-02.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

## 서버 생성 콘솔 선택
Ncloud 서버 생성 콘솔화면은 신규 기능이 업데이트 되면서 2가지를 선택할 수 있습니다. Micro 타입 서버는 **KVM** 하이퍼바이저 기반의 서버이므로  [**신규 콘솔 화면**]으로 진행하겠습니다.

- 기존 콘솔 화면: **XEN, RHV** 하이퍼바이저 기반의 서버(g1,g2)를 생성할 수 있습니다.
- 신규 콘솔 화면: **XEN, RHV** 하이퍼바이저 기반의 서버(g1,g2)뿐만 아니라 **KVM** 기반 및 다양한 성능을 제공하는 기본 스토리지로 서버(**g3**)를 생성할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-03.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

## 서버 이미지 선택
Micro 타입 서버를 생성하려면 하이퍼바이저 기준으로 [**KVM**] 서버 이미지를 선택하면 됩니다. 현재 Ncloud에서 제공되는 [**KVM**] 서버 이미지는 아래와 같이 [**Rocky Linux 8.8**], [**Ubuntu 20.04**], [**CentOS 7.8**] 이렇게 3가지 입니다. 여기서는 Ubuntu 20.04로 생성해보겠습니다.

{% include image.html file=&quot;compute/ncloud-compute-micro-type-server-create-vpc-guide-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 무료 서버(Micro Type) 이용하는 방법&quot; caption=&quot;&quot; %}

## 서버 설정
서버 설정 단계에서는 [**VPC**]와 [**Subnet**]을 선택하고  [**서버 스펙**]과 [**요금제**], [**Network Interface**], [**공인 IP 할당 여부**] 등을 선택하게 됩니다. `서버는 1년간 무료이지만, 공인 IP를 할당하게 되면 공인 IP 비용이 청구됩니다.`

{% include image.html file=&quot;compute/ncloud-compute-micro-type-server-create-vpc-guide-02.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 무료 서버(Micro Type) 이용하는 방법&quot; caption=&quot;&quot; %}

## 스토리지 설정
KVM 하이퍼바이저 기반인 Micro 타입서버는 기본 스토리지 10GB까지만 무료로 제공되며, 용량을 늘릴 경우 비용이 발생합니다.

{% include image.html file=&quot;compute/ncloud-compute-micro-type-server-create-vpc-guide-03.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 무료 서버(Micro Type) 이용하는 방법&quot; caption=&quot;&quot; %}

## 인증키 설정
인증키 이름을 입력하고, [**인증키 생성 및 저장**] 버튼을 클릭해서 인증키를 로컬 PC에 다운로드 받아서 안전한 곳에 보관해야 합니다. 기존에 사용하고 있던 인증키가 있을 경우에는 [**보유하고 있는 인증키 이용**]을 선택하면 됩니다.

{% include warning.html title=&quot;인증키&quot; content=&quot;인증키는 해당 서버의 **관리자 비밀번호**를 확인하는데 사용되므로 **안전한 곳에 잘 보관**해야 합니다.&quot; %}

{% include image.html file=&quot;compute/ncloud-compute-vpc-server-create-guide-20.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud VPC 환경에서 서버를 생성하는 방법&quot; caption=&quot;&quot; %}

## 네트워크 접근 설정
네트워크 접근은 [**ACG**]로 설정하게 되는데, `ACG(Access Control Group)는 서버 간 네트워크 접근 제어 및 관리를 할 수 있는 IP/Port 기반 필터링 방화벽 서비스`로, 서버에 별도의 복잡한 방화벽 구축없이 간단하게 서버에 대한 네트워크 접근 제어를 할 수 있습니다.  
[**VPC**]를 생성하면 자동으로 생성되는 **기본 ACG**를 선택하거나 별도로 생성한 ACG가 있을 경우 해당 ACG를 선택하면 됩니다. **적용할 ACG는 최대 3개**까지 선택할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-micro-type-server-create-vpc-guide-04.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 무료 서버(Micro Type) 이용하는 방법&quot; caption=&quot;&quot; %}

## 서버 생성 완료
모든 단계를 마치고 나면 아래와 같이 서버가 생성된 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-compute-micro-type-server-create-vpc-guide-05.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 무료 서버(Micro Type) 이용하는 방법&quot; caption=&quot;&quot; %}

## 서버 접속
생성된 서버에 접속해서 vCPU와 Memory 상태를 확인해보면 다음과 같습니다.

``` bash
~# grep -c processor /proc/cpuinfo
~# free
```

{% include image.html file=&quot;compute/ncloud-compute-micro-type-server-create-vpc-guide-06.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) VPC 환경에서 무료 서버(Micro Type) 이용하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1.  Ncloud 서버 접속 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/server-access-vpc&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/server-access-vpc&lt;/a&gt;

2.  Ncloud 서버 인증키 변경하는 방법
	- &lt;a href=&quot;/compute/ncloud-compute-server-change-authentication-key.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud-compute-server-change-authentication-key.html&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}
</description>
            <pubDate>Mon, 11 Sep 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud-compute-micro-type-server-create-vpc.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud-compute-micro-type-server-create-vpc.html</guid>
            
            <category>linux</category>
            
            <category>vpc</category>
            
            
        </item>
        
        <item>
            <title>Classic 환경에서 AutoScaling 설정하는 방법</title>
            <description>## 개요
AutoScaling 서비스는 미리 등록한 설정에 따라 서버 수를 자동으로 증가 또는 감소시켜 안정적인 서비스를 유지하면서 비용을 절감할 수 있도록 해주는 서비스입니다.  
여기서는 네이버 클라우드 Classic 환경에서 AutoScaling 설정하는 방법을 정리해보겠습니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_classic_30.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## 기본 설정
Auto Scaling 설정은 우선 [Auto Scaling] - [Launch Configuration]에서  
[Launch Configuration 생성] 버튼을 클릭하는 것으로 시작합니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_01.jpg&quot; width=&quot;700&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


### 서버 이미지 선택
서버 이미지는 네이버 클라우드에서 제공하는 기본 이미지를 선택할 수도 있고, 기존 서버로 만들어 둔 [내 서버 이미지]를 사용할 수도 있습니다. 여기서는 기본 이미지를 사용하는 것으로 하겠습니다.

{% include callout_v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;현재 Classic 환경 AutoScaling에서 지원하는 Linux 서버 이미지 버전은 다음과 같습니다. &lt;br /&gt;
&amp;#8259; CentOS 7.3, 7.8 &lt;br /&gt;
&amp;#8259; Ubuntu 18.04
&quot; %}

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_classic_02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


### 서버 설정
스토리지 종류와 서버 타입 등을 선택합니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_03.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


### 이름 설정
Launch Configuration의 이름을 입력합니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_04.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


### 인증키 설정
인증키는 기존에 보유하고 있던 인증키를 이용해도 되고, 새로운 인증키를 설정해도 됩니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_05.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


### 네트워크 접근 설정 (ACG)
ACG 설정도 기존에 보유하고 있던 ACG 중에서 선택해도 되고, 새로운 ACG를 생성해도 됩니다. 여기서는 새로운 ACG를 생성하는 방법으로 진행하겠습니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_06.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


ACG 이름을 입력하고, [myIp]를 클릭, 허용할 포트를 입력한 후 [추가] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_07.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


### 최종 확인
지금까지 설정한 정보를 마지막으로 확인 한 후에 이상이 없으면 [Launch Configuration 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_08.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}



## Group 생성
다음으로 Auto Scaling Group을 생성합니다. [Auto Scaling] - [Auto Scaling Group]에서 [Auto Scaling Group 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_09.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


### Launch Configuration 선택
위에서 생성했던 Launch Configuration을 선택합니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_10.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


### 그룹 설정
여기서는 생성될 서버들의 이름과 최소, 최대 개수 등을 설정합니다.  
Auto Scaling Group당 최대 30대의 서버를 생성할 수 있고, Zone, NAT Gateway 설정은 생성 후 변경할 수 없으며, 변경이 필요하면 새로 생성하여 사용해야 합니다.  

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_11.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


- **서버이름 Prefix** : 최대7자까지 지정할 수 있고, 나머지 이름의 뒷부분은 영문,숫자의 조합으로 무작위로 자동 생성됩니다.
- **서버 용량** : 최소, 최대, 기대 용량은 서버 대수를 의미하며 각각 **0~30까지 입력 가능**합니다.
- **쿨다운 기본값** : 새로운 서버가 생성되었다고 해도, init script 실행이나 업데이트 설치 등의 이유로 실제 서비스를 수행할 수 있을 정도로 준비되기까지는 시간이 소요될 수 있습니다. 
  즉, 쿨다운(Cooldown) 시간이란 실제 Scaling이 수행 중이거나 수행 완료된 이후에 모니터링 이벤트 알람이 발생하더라도 반응하지 않고 무시하도록 설정한 기간입니다.  
  **값을 입력하지 않으면 기본값인 300초가 적용됩니다**.

- **헬스체크 보류기간** : 서버 인스턴스가 생성되어 상태가 ‘운영 중’으로 바뀌었더라도, 서버의 업데이트 설치 등 작업에 의해서 헬스 체크에 정상 응답하지 못하는 경우가 생길 수 있습니다. 
  이런 경우 헬스 체크 보류 기간을 지정하면 해당 기간 동안에는 헬스 체크에 실패하더라도 서버에 이상이 있다고 판단하지 않습니다.  
  **값을 입력하지 않으면 기본값인 300초가 적용됩니다**.

&lt;br /&gt;

### 정책/일정 설정
정책과 일정을 여기서 바로 설정할 수도 있고 나중에 설정할 수도 있습니다. 여기서는 [나중에 설정]으로 선택하고 아래쪽에서 다시 살펴보겠습니다. 

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_12.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


### 통보 설정
통보 설정을 여기서 바로 설정할 수도 있고 나중에 설정할 수도 있습니다. 여기서는 [나중에 설정]으로 선택하고 아래쪽에서 다시 살펴보겠습니다. 

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_13.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


### 최종확인
생성된 Group 설정값들을 마지막으로 확인하고 [Auto Scaling Group 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_14.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


## 서버 생성 확인
위에서 Auto Scaling Group을 생성하면 아래와 같이 즉시 서버가 생성되는 것을 확인할 수 있습니다. 처음에는 [기대용량]에 입력한 개수만큼 서버가 생성됩니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_15.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}



## 설정 관리 - 정책
위에서 나중에 설정하기로 하고 넘어갔던 Auto Scaling Group의 정책, 일정, 이력, 통보 설정 등을 확인해보겠습니다.  
[Auto Scaling Group]에서 해당 그룹을 선택하고, [설정 및 관리] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_16.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


### 정책 설정
먼저 [정책] 탭을 선택하고, [생성] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_17.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


우선 서버를 증가시킬 정책으로 increase라는 이름을 입력하고, 증가시킬 서버 개수를 입력 후 [추가] 옵션을 선택하고 [생성] 버튼을 클릭합니다. 

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_18.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


다음으로 서버를 감소시킬 정책으로 decrease라는 이름을 입력하고, 감소시킬 서버 개수를 입력 후 [반납] 옵션을 선택하고 [생성] 버튼을 클릭합니다. 

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_19.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


서버 증가, 감소를 위한 정책 2가지가 생성된 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_20.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


## 그룹 이벤트 설정
위에서 설정한 정책이 언제 실행되게할 것인가 즉, 서버에 어떤 이벤트가 발생했을 때 정책을 실행할 것인가를 결정하는 그룹 이벤트를 설정합니다.  
그룹 이벤트 설정은 [Classic] - [Monitoring] - [Group Event Setting]에서 할 수 있으며, 위에서 만든 Auto Scaling 그룹을 선택하고 [그룹 이벤트 설정] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_21.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


그룹 이벤트 설정 화면에 들어가면 위에서 만든 increase, decrease 2가지 정책이 리스트에 나타나는 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_22.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


정책이 발동되게 하는 이벤트는 여러가지가 있는데, 가장 많이 선택하는 것이 CPU 사용률입니다.  
여기서는 **CPU 사용률(used)이 60% 이상일 때 increase 정책**, **CPU 사용률(used)이 30% 이하일 때 decrease 정책**이 실행되도록 이벤트를 추가했습니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_23.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


## 설정 관리 - 일정
위에서는 서버에 설정한 이벤트가 발생했을 때 정책이 발동되도록 했지만, 그 외에도 특정한 시간대에 사용자가 몰리는 피크 타임이 일정하다면 해당 시간 전후로 서버를 늘리거나 감소시키는 방법도 가능합니다.  
여기 [일정] 탭에서 해당 내용을 설정해두면 피크 타임에 미리 서버를 증가시켜서 좀 더 안정적인 서비스가 가능하게 설정할 수 있습니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_24.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


## 설정 관리 - 이력
[이력] 탭에서는 서버가 생성되고 반납된 기록을 확인할 수 있습니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_25.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


## 설정 관리 - 통보
[통보] 탭에서는 서버가 생성되거나 반납될 때 지정한 담당자에게 SMS나 Email로 통보하도록 설정할 수 있습니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_26.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## 설정 관리 - 서버
[서버] 탭은 현재 작동중인 서버 리스트를 확인할 수 있습니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_27.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


## 중지 - 서버삭제
마지막으로, Auto Scaling을 중지하고, 작동중인 서버를 한번에 모두 삭제하는 방법을 확인해보겠습니다.  

[Auto Scaling] - [Auto Scaling Group]에서 해당 그룹을 선택하고 상단에 있는 [수정] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_28.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud(네이버 클라우드) Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


여기서 **[최소 용량], [최대 용량], [기대 용량] 항목의 값을 모두 0으로 설정**하면, 현재 작동중인 서버가 모두 반납되고, 더 이상 서버가 추가로 생성되지 않아서 Auto Scaling이 중지되게 됩니다.  
사실 [최소 용량], [기대 용량] 2가지 항목만 0으로 설정해도 되지만, 혹시나 모르는 상황을 위해서 깔끔하게 3가지 항목 모두 0으로 설정합니다.

{% include image.html file=&quot;compute/autoscaling/ncp_server_autoscaling_guide_classic_29.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud Classic 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## 서비스 제한사항
Auto Scaling 설정과 서버 스펙 등에 대한 제한 사항을 정리해보겠습니다.

### 스펙 및 서비스 환경 제한 사항
- 총 디스크 사이즈 150GB 이하 서버만 가능
- Windows OS는 Windows 2016. 2019만 지원
- 내 서버 이미지의 경우, 원본 서버의 부팅 디스크 크기가 50GB인 경우만 지원(100GB 디스크에 대해서는 추후 지원 예정)

### 설정 제한 사항
- 고객별 생성 가능한 Auto Scaling Group 최대 수: 10
- 고객별 생성 가능한 Launch Configuration 최대 수: 100
- Auto Scaling Group당 생성 가능한 스케줄(Scheduled Action) 최대 수: 100
- Auto Scaling Group당 생성 가능한 Scaling Policy 최대 수: 10
- Auto Scaling Group당 생성 가능한 최대 서버 수: 30대
- Auto Scaling Group당 연결 가능한 Load Balancer 최대 수 : 10


## 용어 정리
Auto Scaling에서 사용되는 주요 용어들을 정리해보겠습니다.

| 용어 | | 설명|
| :----: | :----: | :---- |
| Scale-in / Scale-out | | Auto Scaling Group을 생성하여 고객이 설정한 Policy에 따라 사용하고 있는 가상 서버의 자동 확장(Scale-out) 및 자동 축소(Scale-in)하도록 제공합니다. |
| Auto Scaling Group | | 여러 개의 서버 인스턴스들을 Auto Scaling Group 이라는 하나의 그룹으로 묶어 놓게 됩니다. |
| Launch Configuration | | Auto Scaling Group에서 가상 서버를 시작 구성하는 데 사용하는 템플릿입니다. Auto Scaling Group을 생성할 때는 Launch Configuration을 지정해야 합니다. |
| Auto Scaling Group의 최소 용량/최대 용량 | | Auto Scaling Group의 최소/최대 서버 수를 말합니다. 최소 서버 수의 경우, 항상 이 값과 같거나 이 값보다 더 큰 서버 수가 유지됩니다. 서버를 한 대도 보유하지 않을 수 있게 하려면 0으로 설정합니다. |
| 기대 용량 (Desired Capacity) | | 서버의 수는 기대 용량값에 따라서 조정됩니다. 이 값은 최소 용량 이상, 최대 용량 이하여야 합니다. 이 값이 지정되어 있지 않으면 초기에 최소 용량만큼 서버를 생성합니다. |
| 쿨다운 기본값(초) (Default Cooldown) | | Default Cooldown(초) 새로운 서버가 생성되었다고 해도, Init-Script 실행이나 업데이트 설치 등의 이유로 실제 서비스를 수행할 수 있을 정도로 준비되기까지는 시간이 소요될 수 있습니다. 쿨다운(Cooldown) 시간이란 실제 Scaling이 수행 중이거나 수행 완료된 이후에 모니터링 이벤트 알람이 발생하더라도 무시하도록 설정한 기간입니다. |
| 헬스체크 | | Auto Scaling Group의 가상 서버에 주기적인 상태 확인을 수행하여 상태가 비정상인 가상 서버를 식별하도록 Health Check를 합니다. |
| 헬스체크 보류 기간 | |	서버가 생성되어 ‘운영중’으로 변경되었더라도 서버의 업데이트 설치 등 작업에 의해서 헬스 체크에 정상 응답하지 못하는 경우가 생길 수 있습니다. 이런 경우 헬스 체크 보류기간을 지정하면 해당 기간 동안에는 헬스 체크에 실패하더라도 서버 헬스에 이상이 있다고 판단하지 않습니다. |
| 헬스체크 유형 | | 서버와 Load Balancer 둘 중에 선택할 수 있습니다. Auto Scaling Group 설정에서 Load Balancer 이름을 지정한 경우에는 헬스 체크 유형 역시 Load Balancer로 설정합니다. 이런 경우 Auto Scaling은 Load Balancer 헬스 체크 방식과 기준에 따라 서버의 상태를 판단합니다. |
| 반납 정책 | | Auto Scaling 과정에서 추가된 서버에 대한 Scale-in 작업에 대해, 고객이 API 질의 형식으로먼저 반납할 서버를 지정할 수 있습니다. 기본 설정은 먼저 생성된 서버부터 반납합니다. |
| Policy | | Auto Scaling이 일어나는 방식을 정의하고 있는데, 이를 ‘Policy’로 정의하고 있습니다. Auto Scale-out 이 발생할 때, 몇 대의 가상 서버를 늘릴 것인지, 반대로 Scale-in이 발생할 때 몇 대의 가상서버를 줄일 것인지를 정의합니다. 대수로 정의할 수 도 있고, %로 정의할 수도 있습니다. |

## 참고 URL
1.  Ncloud Auto Scaling 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/compute-autoscaling-autoscalingoverview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/compute-autoscaling-autoscalingoverview&lt;/a&gt;

2. VPC 환경에서 Auto Scaling 설정하기
    - &lt;a href=&quot;/compute/ncloud-compute-autoscaling-vpc-guide.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud-compute-autoscaling-vpc-guide.html&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}  	</description>
            <pubDate>Wed, 06 Sep 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_autoscaling_classic_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_autoscaling_classic_guide.html</guid>
            
            <category>autoscaling</category>
            
            <category>classic</category>
            
            
        </item>
        
        <item>
            <title>VPC 환경에서 AutoScaling 설정하는 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드)  VPC 환경에서 AutoScaling 설정하는 방법을 정리해보겠습니다.  

AutoScaling 서비스는 미리 등록한 설정에 따라 서버 수를 자동으로 증가 또는 감소시켜 안정적인 서비스를 유지하면서 비용을 절감할 수 있도록 해주는 서비스입니다. 

그런데, 언제 서버 수를 증가, 감소 시킬 것인 가에 대한 이벤트 설정이 **Classic 환경의 경우 오토스케일 그룹에 속한 서버들의 평균값을 기준**으로 하지만, 
**VPC 환경의 경우 이 방법 말고도 특정 서버를 지정해서 해당 서버를 기준으로 이벤트 설정을 할 수도** 있습니다.

그래서 여기서는 사전에 준비된 서버를 기준으로 AutoScaling이 작동되는 것을 살펴보겠습니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_42.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## 기준 서버 생성
AutoScaling 이벤트 설정의 기준이 되는 서버 1대를 아래와 같이 미리 생성하겠습니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_16.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## 설정 순서
Auto Scaling 설정 순서를 요약하면 다음과 같습니다.

{% include callout_v2.html type=&quot;warning&quot; level=&quot;3&quot; content=&quot;
1. Auto Scaling Launch Configuration 설정 &lt;br /&gt;
2. Auto Scaling Group 설정 &lt;br /&gt;
3. Cloud Insight Monitoring Event Rule 설정 &lt;br /&gt;
&quot; %}


## Launch Configuration 설정
Auto Scaling 설정은 우선 [Auto Scaling] - [Launch Configuration]에서 [Launch Configuration 생성] 버튼을 클릭하는 것으로 시작합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### 서버 이미지 선택
서버 이미지는 Ncloud(네이버 클라우드) 에서 제공하는 기본 이미지를 선택할 수도 있고, 기존에 사용하던 서버로 만들어 둔 [내 서버 이미지]를 사용할 수도 있습니다. 여기서는 기본 이미지를 사용하는 것으로 하겠습니다.

{% include callout_v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;현재 VPC 환경 AutoScaling에서 지원하는 Linux 서버 이미지 버전은 다음과 같습니다. &lt;br /&gt;
&amp;#8259; CentOS 7.3, 7.8 &lt;br /&gt;
&amp;#8259; Rocky Linux 8.6, 8.8 &lt;br /&gt;
&amp;#8259; Ubuntu 16.04, 18.04, 20.04
&quot; %}

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

#### Windows 서버 이미지 버전

{% include callout_v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;현재 AutoScaling에서 지원하는 Windows 서버 이미지 버전은 다음과 같습니다. &lt;br /&gt;
&amp;#8259; Windows Server 2016 64bit English Edition &lt;br /&gt;
&amp;#8259; Windows Server 2019 64bit English Edition
&quot; %}

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_03.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### 서버 설정
스토리지 종류와 서버 타입 등을 선택합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_04.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### 이름 설정
Launch Configuration의 이름을 입력합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_05.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### 인증키 설정
인증키는 기존에 보유하고 있던 인증키를 이용해도 되고, 새로운 인증키를 설정해도 됩니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_06.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### 최종 확인
지금까지 설정한 내용이 이상 없는지 최종 확인을 하고 이상 없으면 [Launch Configuration 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_07.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## Auto Scaling Group 설정
다음으로 Auto Scaling Group을 생성합니다. [Auto Scaling] - [Auto Scaling Group]에서 [Auto Scaling Group 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### Launch Configuration 선택
위에서 생성했던 Launch Configuration을 선택합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### 그룹 설정
여기서는 VPC와 Subnet 등의 네트워크 환경을 선택하고,  생성될 서버들의 이름과 최소, 최대 개수 등을 설정합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_10.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

- **서버이름 Prefix** : 최대7자까지 지정할 수 있고, 나머지 이름의 뒷부분은 영문,숫자의 조합으로 무작위로 자동 생성됩니다.
- **서버 용량** : 최소, 최대, 기대 용량은 서버 대수를 의미하며 각각 **0~30까지 입력 가능**합니다.
- **쿨다운 기본값** : 새로운 서버가 생성되었다고 해도, init script 실행이나 업데이트 설치 등의 이유로 실제 서비스를 수행할 수 있을 정도로 준비되기까지는 시간이 소요될 수 있습니다. 
  즉, 쿨다운(Cooldown) 시간이란 실제 Scaling이 수행 중이거나 수행 완료된 이후에 모니터링 이벤트 알람이 발생하더라도 반응하지 않고 무시하도록 설정한 기간입니다.  
  **값을 입력하지 않으면 기본값인 300초가 적용됩니다**.

- **헬스체크 보류기간** : 서버 인스턴스가 생성되어 상태가 ‘운영 중’으로 바뀌었더라도, 서버의 업데이트 설치 등 작업에 의해서 헬스 체크에 정상 응답하지 못하는 경우가 생길 수 있습니다. 
  이런 경우 헬스 체크 보류 기간을 지정하면 해당 기간 동안에는 헬스 체크에 실패하더라도 서버에 이상이 있다고 판단하지 않습니다.  
  **값을 입력하지 않으면 기본값인 300초가 적용됩니다**.
- **헬스체크 유형** : 헬스체크 유형은 [**서버**]와 [**로드밸런서**] 중에서 선택할 수 있습니다.

### 로드밸런서 연결

{% include callout-v2.html type=&quot;info&quot; level=&quot;3&quot; content=&quot;
Auto Scaling으로 생성된 서버가 로드밸런서에 자동으로 연결되도록 하려면 [**헬스 체크 유형**]을 [**로드밸런서**]로 선택하고 [**Target Group**] 항목에서 원하는 로드밸런서의 Target Group을 선택하면 됩니다.
&quot; %}

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_41.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

- VPC 환경에서 로드밸런서를 생성하는 방법은 아래 문서를 참고하시면 됩니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/networking/ncloud_networking_load_balancer_application_lb.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;VPC 환경에서 Application Load Balancer 생성하는 방법&lt;/a&gt;
&quot; %}

### 네트워크 접근 설정
네트워크 접근에 필요한 ACG를 설정하고 선택합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_11.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### 정책/일정 설정
정책과 일정을 여기서 바로 설정할 수도 있고 나중에 설정할 수도 있는데, 
우선은 [정책 설정]에서 [서버 수 증가 정책]과 [서버 수 감소 정책]을 설정합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_12.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### 통보 설정
서버가 생성될 때 또는 서버가 반납될 때 언제 통보를 받을 것인지 선택하고, 누가 언제 통보 받을 것인지 설정합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

#### 통보 대상 설정 
먼저 [통보대상 관리 그룹]을 선택하고, 다음으로 관리자와 통보 방법을 선택합니다.  
[통보대상 관리 그룹]이 설정되지 않았을 경우에는 [통보대상관리] 버튼을 클릭해 통보를 받을 대상의 그룹을 설정합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_14.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### 최종 확인
지금까지 설정한 Auto Scaling Group 내역을 확인하고 이상이 없으면 [Auto Scaling Group 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_15.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## Event Rule 설정
지정한 서버를 모니터링 하다가 설정한 조건에 해당되면 즉, 지정한 Event가 발생하면 Auto Scaling 설정을 적용해 서버를 증가시키거나 감소시키기 위한 감시 규칙인 [Event Rule]을 설정합니다.  

### 서버 증가 Event Rule 생성
VPC에서는 [Cloud Insight]로 모니터링을 하게 되므로 Event Rule 설정도 [Cloud Insight(Monitoring)] - [Configuration] - [Event Rule]에서 [Event Rules 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_17.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

#### 감시 상품 선택
Cloud Insight는 Server 뿐만 아니라 Load Balancer, Object Storage도 감시할 수 있는데 여기서는 처음에 생성했던 서버를 감시할 것이니 [Server(VPC)]를 선택합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_18.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

#### 감시 대상 설정
맨 처음에 생성했던 서버를 선택합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_19.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

#### 감시 항목 및 조건 설정
감시 항목 설정에서 [전체 보기]를 선택하고, [SERVER] 탭에서 [Metric ID]를 [cpu]로 검색한 후 평균 CPU 사용률 항목인 [SERVER/avg_cpu_used_rto]에서 [Level]과 [Condition], [Method], [Duration]을 선택합니다.

먼저 서버를 증가시키는 경우에 해당하는 감시 항목을 설정하겠습니다.  
아래의 설정 내용은 &quot;**평균 CPU 사용률이 1분간 50% 이상일 경우 경고 수준으로 이벤트 통보를 한다**&quot;라는 설정입니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_22.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

#### 액션 설정
앞에서 설정한 이벤트가 발생했을 경우 어떤 액션을 취할 것인지 설정하게 되는데 앞에서 [Auto Scaling Group] 설정에서 생성했던 정책을 선택하면 됩니다.  
여기서는 [CPU 사용률 50% 이상]인 경우이므로 서버를 증가시키는 정책을 선택합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_23.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

#### 최종 확인
설정한 내용이 이상 없는지 최종 확인하고, 규칙 이름을 입력한 후에 [생성] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_24.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### 서버 감소 Event Rule 생성
앞에서 생성한 [서버 증가 Event Rule]과 같은 방식으로 [서버 감소 Event Rule]을 생성합니다.  

아래의 설정 내용은 &quot;**평균 CPU 사용률이 1분간 10% 이하일 경우 정보 알림 수준으로 이벤트 통보를 한다**&quot;라는 설정입니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_25.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

#### 액션 설정
여기서는 [CPU 사용률 10% 이하]인 경우이므로 서버를 감소시키는 정책을 선택합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_26.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

#### 최종 확인
설정한 내용이 이상 없는지 최종 확인하고, 규칙 이름을 입력한 후에 [생성] 버튼을 클릭합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_27.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### Event Rule 생성 완료
서버 증가과 감소에 대한 Event Rule 2가지가 모두 생성된 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_28.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## Stress Tool 설정
CPU 사용률에 따른 Auto Scaling 작동 여부를 테스트 하기 위해 서버에 Stress Tool을 설치해보겠습니다.

### EPEL 리포지토리 설정
Stress Tool을 설치하기 위해서는 다음 명령어로 [EPEL 리포지토리]를 설정해야 합니다.

``` bash
~# yum -y install epel-release
```
{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_29.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### Stress Tool 설치

``` bash
~# yum -y install stress
```
{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_30.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## Stress Tool 실행

### CPU 코어 개수 확인
CPU에 강제로 부하를 발생 시키기 위해서는 서버의 CPU 코어 개수를 확인해서 모든 코어에 부하를 발생시키는 것이 좋습니다.  
CPU 코어 개수를 확인하는 방법은 아래 명령어를 입력하면 됩니다.

``` bash
~# grep -c processor /proc/cpuinfo
```
{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_31.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### 명령어 테스트
CPU에 부하를 주는 명령어를 테스트 해보겠습니다.

``` bash
~# stress --cpu 2 --timeout 60 --verbose
```

위 옵션의 내용은 다음과 같습니다.

- cpu: 몇 개의 코어에 부하를 발생 시킬 것인가
- timeout: 몇 초 동안 부하를 발생 시킬 것인가
- verbose: 상세 로그를 표시

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_32.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### CPU 부하 발생
부하 발생 테스트를 마쳤으니 실제 Auto Scaling 테스트를 위해 300초 즉, 5분 동안 부하를 발생 시켜보겠습니다.

``` bash
~# stress --cpu 2 --timeout 300 --verbose
```
{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_33.png&quot; width=&quot;840&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## 서버 증가 확인
Stress Tool로 부하를 발생 시키고 서버 리스트를 확인해보면 아래와 같이 Auto Scaling 설정에서 지정한 대로 서버가 생성되고 있는 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_34.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## CPU 사용률 확인
[Cloud Insight]에서 서버 사용률을 확인해 보면 아래와 같이 5분간 CPU 사용률이 100%까지 올라간 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_35.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## 서버 반납 확인
Stress Tool로 부하를 발생 시키도록 설정한 5분이 지난 후에 서버 리스트를 보면 Auto Scaling으로 생성되었던 서버가 반납되고 있는 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_36.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## 이벤트 발생 확인
[Cloud Insight] - [Event]에서 서버 증가, 감소 관련 이벤트가 제대로 발생했는지 아래와 같이 그래프와 리스트로 확인할 수 있습니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_37.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

## 이벤트 통보 확인
이벤트 통보에서 설정한 대로 아래와 같이 Email로 Auto Scaling 이벤트 발생과 완료에 대한 통보 메일이 도착한 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_38.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}



## 서비스 제한사항
Auto Scaling 설정과 서버 스펙 등에 대한 제한 사항을 정리해보겠습니다.

### 스펙 및 서비스 환경 제한 사항
- 총 디스크 사이즈 150GB 이하 서버만 가능
- Windows OS는 Windows 2016. 2019만 지원
- 내 서버 이미지의 경우, 원본 서버의 부팅 디스크 크기가 50GB인 경우만 지원(100GB 디스크에 대해서는 추후 지원 예정)

### 설정 제한 사항
- 고객별 생성 가능한 Auto Scaling Group 최대 수: 10
- 고객별 생성 가능한 Launch Configuration 최대 수: 100
- Auto Scaling Group당 생성 가능한 스케줄(Scheduled Action) 최대 수: 100
- Auto Scaling Group당 생성 가능한 Scaling Policy 최대 수: 10
- Auto Scaling Group당 생성 가능한 최대 서버 수: 30대
- Auto Scaling Group당 연결 가능한 Load Balancer 최대 수 : 10


## 상세 모니터링
Ncloud(네이버 클라우드) 에서는 기본 모니터링 외에 [상세 모니터링]도 지원하는데, [상세 모니터링]에서는 좀 더 자세하고 다양한 모니터링 항목 (Extended Metric)을 지원합니다.  

예를 들어 CPU 사용과 관련한 모니터링 항목에서도 아래와 같이 [CPU idle ratio average] 항목들도 확인할 수 있습니다.
{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_39.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

또한, 위와 같이 [Server] 탭에서는 CPU들의 평균 값을 모니터링할 수 있는 것에 비해, 상세 모니터링을 적용하면 아래와 같이 [CPU] 탭에서 CPU 코어별로 각각 모니터링을 할 수도 있습니다.
{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_40.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

### 상세 모니터링 설정
상세 모니터링을 적용하는 방법은 서버를 선택하고 [서버 관리 및 설정 변경] 메뉴에서 [상세 모니터링 설정 변경] 메뉴를 선택합니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_20.png&quot; width=&quot;845&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}

#### 상세 모니터링 신청
상세 모니터링 신청 팝업에서 [예] 버튼을 클릭하면 상세 모니터링이 적용됩니다. 상세 모니터링 신청 후 실제 데이터가 수집되기까지는 약간의 시간이 소요되므로 잠시 기다렸다 확인해보면 됩니다.

{% include image.html file=&quot;compute/autoscaling/ncloud_server_autoscaling_guide_vpc_21.png&quot; width=&quot;480&quot; alt=&quot;Ncloud(네이버 클라우드) VPC 환경에서 AutoScaling 설정하는 방법&quot; caption=&quot;&quot; %}


## 용어 정리
Auto Scaling에서 사용되는 주요 용어들을 정리해보겠습니다.

| 용어 | | 설명|
| :----: | :----: | :---- |
| Scale-in / Scale-out | | Auto Scaling Group을 생성하여 고객이 설정한 Policy에 따라 사용하고 있는 가상 서버의 자동 확장(Scale-out) 및 자동 축소(Scale-in)하도록 제공합니다. |
| Auto Scaling Group | | 여러 개의 서버 인스턴스들을 Auto Scaling Group 이라는 하나의 그룹으로 묶어 놓게 됩니다. |
| Launch Configuration | | Auto Scaling Group에서 가상 서버를 시작 구성하는 데 사용하는 템플릿입니다. Auto Scaling Group을 생성할 때는 Launch Configuration을 지정해야 합니다. |
| Auto Scaling Group의 최소 용량/최대 용량 | | Auto Scaling Group의 최소/최대 서버 수를 말합니다. 최소 서버 수의 경우, 항상 이 값과 같거나 이 값보다 더 큰 서버 수가 유지됩니다. 서버를 한 대도 보유하지 않을 수 있게 하려면 0으로 설정합니다. |
| 기대 용량 (Desired Capacity) | | 서버의 수는 기대 용량값에 따라서 조정됩니다. 이 값은 최소 용량 이상, 최대 용량 이하여야 합니다. 이 값이 지정되어 있지 않으면 초기에 최소 용량만큼 서버를 생성합니다. |
| 쿨다운 기본값(초) (Default Cooldown) | | Default Cooldown(초) 새로운 서버가 생성되었다고 해도, Init-Script 실행이나 업데이트 설치 등의 이유로 실제 서비스를 수행할 수 있을 정도로 준비되기까지는 시간이 소요될 수 있습니다. 쿨다운(Cooldown) 시간이란 실제 Scaling이 수행 중이거나 수행 완료된 이후에 모니터링 이벤트 알람이 발생하더라도 무시하도록 설정한 기간입니다. |
| 헬스체크 | | Auto Scaling Group의 가상 서버에 주기적인 상태 확인을 수행하여 상태가 비정상인 가상 서버를 식별하도록 Health Check를 합니다. |
| 헬스체크 보류 기간 | |	서버가 생성되어 ‘운영중’으로 변경되었더라도 서버의 업데이트 설치 등 작업에 의해서 헬스 체크에 정상 응답하지 못하는 경우가 생길 수 있습니다. 이런 경우 헬스 체크 보류기간을 지정하면 해당 기간 동안에는 헬스 체크에 실패하더라도 서버 헬스에 이상이 있다고 판단하지 않습니다. |
| 헬스체크 유형 | | 서버와 Load Balancer 둘 중에 선택할 수 있습니다. Auto Scaling Group 설정에서 Load Balancer 이름을 지정한 경우에는 헬스 체크 유형 역시 Load Balancer로 설정합니다. 이런 경우 Auto Scaling은 Load Balancer 헬스 체크 방식과 기준에 따라 서버의 상태를 판단합니다. |
| 반납 정책 | | Auto Scaling 과정에서 추가된 서버에 대한 Scale-in 작업에 대해, 고객이 API 질의 형식으로먼저 반납할 서버를 지정할 수 있습니다. 기본 설정은 먼저 생성된 서버부터 반납합니다. |
| Policy | | Auto Scaling이 일어나는 방식을 정의하고 있는데, 이를 ‘Policy’로 정의하고 있습니다. Auto Scale-out 이 발생할 때, 몇 대의 가상 서버를 늘릴 것인지, 반대로 Scale-in이 발생할 때 몇 대의 가상서버를 줄일 것인지를 정의합니다. 대수로 정의할 수 도 있고, %로 정의할 수도 있습니다. |
| Basic Metric | | 기본적으로 제공되는 모니터링 항목 |
| Extended Metric | | 상세모니터링을 신청하면 제공되는 모니터링 항목 |

## 참고 URL
1.  Ncloud(네이버 클라우드) Auto Scaling 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/compute-autoscaling-autoscalingoverview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/compute-autoscaling-autoscalingoverview&lt;/a&gt;

2. Classic 환경에서 Auto Scaling 설정하기
    - &lt;a href=&quot;/compute/ncloud_compute_autoscaling_classic_guide.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/compute/ncloud_compute_autoscaling_classic_guide.html&lt;/a&gt;

2. Cloud Insight Basic/Extended Metric 정리
    - &lt;a href=&quot;https://api.ncloud-docs.com/docs/management-cloudinsight-productinfo&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://api.ncloud-docs.com/docs/management-cloudinsight-productinfo&lt;/a&gt;    


## 문서 업데이트 내역
{% include doc-history.html width=&quot;60%&quot; %}  	</description>
            <pubDate>Tue, 05 Sep 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud-compute-autoscaling-vpc-guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud-compute-autoscaling-vpc-guide.html</guid>
            
            <category>autoscaling</category>
            
            <category>vpc</category>
            
            
        </item>
        
        <item>
            <title>Rocky Linux 서버에 MySQL 5.7 설치하는 방법</title>
            <description>## 개요
록키 리눅스(Rocky Linux)는 기본 데이터베이스가 MariaDB인데, 상황에 따라 MySQL이 필요한 경우가 있습니다. 이번에는 그 중에서 MySQL 5.7 버전을 설치하는 방법을 정리해보겠습니다.

## 서버 준비
우선 Rocky Linux 서버를 준비합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### Rocky Linux 소개
록키 리눅스에 대한 간략한 소개는 아래 문서에서 확인할 수 있습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/compute/ncloud-compute-server-rocky-linux-guide.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt; Ncloud에서 제공하는 록키 리눅스(Rocky Linux) 서버 소개&lt;/a&gt;
&quot; %}

## 패키지 업데이트
우선 패키지 업데이트를 해보겠습니다.

``` bash
~# dnf -y upgrade-minimal
```
{% include note.html title=&quot;dnf&quot; content=&quot;Dandified YUM의 약자인 dnf는 기존의 yum 패키지 관리자가 갖고 있던 여러 단점들을 수정, 업그레이드해서 
Fedora 18 이후 버전에서 사용되고 있으며, Rocky Linux도 마찬가지로 dnf를 기본 패키지 관리자로 사용하고 있습니다. 물론 호환성을 위해서 yum 명령어도 사용할 수 있습니다.
&quot; %}

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


## MySQL Community 패키지 설치
MySQL 5.7 버전이 포함된 가장 최근의 Repository 설치 패키지는 mysql80-community-release-el7-10.noarch.rpm 입니다.

``` bash
~# dnf -y install https://dev.mysql.com/get/mysql80-community-release-el7-10.noarch.rpm
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


## MySQL 5.7 버전 리포지토리 활성화

### 버전 활성화 정보 초기화

``` bash
~# dnf module reset mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


### 기본 MySQL 버전 비활성화

``` bash
~# dnf module disable mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### MySQL 버전 확인
설치된 리포지토리에서 MySQL 버전을 확인해보면 5.7과 8.0이 존재하는 것을 확인할 수 있습니다.

``` bash
~# dnf repolist all | grep mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-19.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### MySQL 5.7 버전 활성화
설치된 MySQL Community 패키지에서 MySQL 8.0 버전은 비활성화 하고, 5.7 버전을 활성화 합니다.

``` bash
~# dnf config-manager --disable mysql80-community
~# dnf config-manager --enable mysql57-community
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 5.7 설치
MySQL 5.7 서버를 설치합니다.

``` bash
~# dnf -y install mysql-community-server
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 초기화
아래 명령어로 기본 데이터베이스 생성 등의 초기화 작업을 진행합니다. 다만 여기서는 초기화 할 때 --initialize-insecure 옵션으로 비밀번호는 설정하지 않고 아래쪽 MySQL 보안 설정 단계에서 [**mysql_secure_installation**] 명령으로 설정하도록 하겠습니다.

``` bash
~# mysqld --initialize-insecure --user=mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-09.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 데몬 시작
초기화를 마쳤으면 MySQL 데몬을 시작합니다.

``` bash
~# systemctl start mysqld
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 보안 설정
[**mysql_secure_installation**]은 MySQL의 기본 보안을 설정하는 명령으로, 설정되는 항목은 다음과 같습니다.

- root 계정 패스워드 설정
- 원격 호스트에서 root 계정 접속 차단
- 익명 계정 삭제
- 테스트 DB 등 삭제

``` bash
~# mysql_secure_installation
```

- 비밀번호를 설정할 때 비밀번호 유효성 검사 플러그인을 사용할 것인지 선택할 수 있는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 비밀번호 정책 수준 선택
제공되는 비밀번호 정책 수준은 [**LOW**], [**MEDIUM**], [**STRONG**]의 3가지가 있습니다.
- LOW: 8자 이상
- MEDIUM: 8자 이상, 숫자-대소문자-특수문자 포함
- STRONG: 8자 이상, 숫자-대소문자-특수문자 포함, dictionary file에 포함된 단어 사용 불가

여기서는 1을 입력해서 MEDIUM을 선택하겠습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

- 패스워드를 입력하면 패스워드의 복잡성 강도를 점수로 측정해주는데 이번 테스트에서는 100점을 받았습니다.  
그리고, 방금 입력했던 패스워드를 그대로 사용할 것인지 확인하는데 [**Y**]를 입력합니다.  
(혹시 입력했던 비밀번호를 변경하고 싶을 경우는 [**N**]를 입력합니다.)

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-13.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 익명 계정 삭제
다음으로 Anonymous Users 즉, 익명 계정들을 삭제할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-14.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 원격 호스트에서 root 계정 접속 차단
다음은 로컬이 아닌 원격에서 root 계정 로그인을 차단할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 테스트 DB 등 삭제
테스트 DB 등을 삭제할 것인지 묻는데 여기서도 [**Y**]를 입력합니다.
{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-16.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 설정 저장
마지막으로 지금까지 선택한 설정을 모두 적용할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-17.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 접속
위에서 설정했던 비번으로 접속해보면 [**5.7.43 MySQL Community Server**]인 것을 확인할 수 있습니다.

``` bash
~# mysql -u root -p
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-18.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## 참고 URL
1. MySQL Yum Repository 다운로드 페이지
	- &lt;a href=&quot;https://dev.mysql.com/downloads/repo/yum/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://dev.mysql.com/downloads/repo/yum/&lt;/a&gt;

2. Installing MySQL on Linux Using the MySQL Yum Repository
	- &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/linux-installation-yum-repo.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/linux-installation-yum-repo.html&lt;/a&gt; 

3. Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법
	- &lt;a href=&quot;/database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux.html&lt;/a&gt; 	 


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}  	</description>
            <pubDate>Mon, 04 Sep 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud-database-mysql-57-install-on-rocky-linux.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud-database-mysql-57-install-on-rocky-linux.html</guid>
            
            <category>database</category>
            
            <category>mysql</category>
            
            <category>install</category>
            
            <category>rocky_linux</category>
            
            
        </item>
        
        <item>
            <title>Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법</title>
            <description>## 개요
록키 리눅스(Rocky Linux)는 기본 데이터베이스가 MariaDB인데, 상황에 따라 MySQL이 필요한 경우가 있습니다. 이번에는 그 중에서 MySQL 8.0 최신 버전을 설치하는 방법을 정리해보겠습니다.

## 서버 준비
우선 Rocky Linux 서버를 준비합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### Rocky Linux 소개
록키 리눅스에 대한 간략한 소개는 아래 문서에서 확인할 수 있습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/compute/ncloud-compute-server-rocky-linux-guide.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt; Ncloud에서 제공하는 록키 리눅스(Rocky Linux) 서버 소개&lt;/a&gt;
&quot; %}

## 패키지 업데이트
우선 패키지 업데이트를 해보겠습니다.

``` bash
~# dnf -y upgrade-minimal
```
{% include note.html title=&quot;dnf&quot; content=&quot;Dandified YUM의 약자인 dnf는 기존의 yum 패키지 관리자가 갖고 있던 여러 단점들을 수정, 업그레이드해서 
Fedora 18 이후 버전에서 사용되고 있으며, Rocky Linux도 마찬가지로 dnf를 기본 패키지 관리자로 사용하고 있습니다. 물론 호환성을 위해서 yum 명령어도 사용할 수 있습니다.
&quot; %}

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL Community 최신 패키지 확인
MySQL Community Yum(Dnf) 최신 패키지는 아래 주소에서 확인할 수 있습니다.  
Rocky Linux는 CentOS 8 기반으로 만들어졌으므로 아래 다운로드 페이지에서 Red Hat Enterprise Linux 8 기반의 mysql80-community-release-el8-{버전}.noarch.rpm 리파지토리 버전을 확인합니다.  
**2023-09-04** 기준으로는 [**mysql80-community-release-el8-8.noarch.rpm**] 인것을 확인할 수 있습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;https://dev.mysql.com/downloads/repo/yum/&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt; https://dev.mysql.com/downloads/repo/yum/&lt;/a&gt;
&quot; %}

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-03.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


## MySQL Community 패키지 설치
위에서 확인한 MySQL 8.0의 최신 Repository 설치 패키지는 [**mysql80-community-release-el8-8.noarch.rpm**] 입니다.

``` bash
~# dnf -y install https://dev.mysql.com/get/mysql80-community-release-el8-8.noarch.rpm
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


## MySQL 8.0 버전 리포지토리 활성화

### 버전 활성화 정보 초기화

``` bash
~# dnf module reset mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


### 기본 MySQL 버전 비활성화

``` bash
~# dnf module disable mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


### MySQL 8.0 버전 확인
설치된 MySQL Community 패키지에 포함된 MySQL 버전을 확인해보겠습니다.  
mysql80-community-release-el8-{버전}.noarch.rpm 버전부터는 8.0 버전만 있고, 5.7 버전은 포함되어 있지 않습니다.

``` bash
~# dnf repolist all | grep mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 8.0 설치
MySQL 8.0 서버를 설치합니다.

``` bash
~# dnf -y install mysql-community-server
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 초기화
아래 명령어로 기본 데이터베이스 생성 등의 초기화 작업을 진행합니다. 다만 여기서는 초기화 할 때 --initialize-insecure 옵션으로 비밀번호는 설정하지 않고 아래쪽 MySQL 보안 설정 단계에서 [**mysql_secure_installation**] 명령으로 설정하도록 하겠습니다.

``` bash
~# mysqld --initialize-insecure --user=mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-09.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 데몬 시작
초기화를 마쳤으면 MySQL 데몬을 시작합니다.

``` bash
~# systemctl start mysqld
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 보안 설정
[**mysql_secure_installation**]은 MySQL의 기본 보안을 설정하는 명령으로, 설정되는 항목은 다음과 같습니다.

- root 계정 패스워드 설정
- 원격 호스트에서 root 계정 접속 차단
- 익명 계정 삭제
- 테스트 DB 등 삭제

``` bash
~# mysql_secure_installation
```

- 비밀번호를 설정할 때 비밀번호 유효성 검사 플러그인을 사용할 것인지 선택할 수 있는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 비밀번호 정책 수준 선택
제공되는 비밀번호 정책 수준은 [**LOW**], [**MEDIUM**], [**STRONG**]의 3가지가 있습니다.
- LOW: 8자 이상
- MEDIUM: 8자 이상, 숫자-대소문자-특수문자 포함
- STRONG: 8자 이상, 숫자-대소문자-특수문자 포함, dictionary file에 포함된 단어 사용 불가

여기서는 1을 입력해서 MEDIUM을 선택하겠습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

- 패스워드를 입력하면 패스워드의 복잡성 강도를 점수로 측정해주는데 이번 테스트에서는 100점을 받았습니다.  
그리고, 방금 입력했던 패스워드를 그대로 사용할 것인지 확인하는데 [**Y**]를 입력합니다.  
(혹시 입력했던 비밀번호를 변경하고 싶을 경우는 [**N**]를 입력합니다.)

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-13.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 익명 계정 삭제
다음으로 Anonymous Users 즉, 익명 계정들을 삭제할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-14.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 원격 호스트에서 root 계정 접속 차단
다음은 로컬이 아닌 원격에서 root 계정 로그인을 차단할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 테스트 DB 등 삭제
테스트 DB 등을 삭제할 것인지 묻는데 여기서도 [**Y**]를 입력합니다.
{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-16.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 설정 저장
마지막으로 지금까지 선택한 설정을 모두 적용할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-17.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 접속
위에서 설정했던 비번으로 접속해보면 [**8.0.34 MySQL Community Server**]인 것을 확인할 수 있습니다.

``` bash
~# mysql -u root -p
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-18.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## 참고 URL
1. MySQL Yum Repository 다운로드 페이지
	- &lt;a href=&quot;https://dev.mysql.com/downloads/repo/yum/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://dev.mysql.com/downloads/repo/yum/&lt;/a&gt;

2. Installing MySQL on Linux Using the MySQL Yum Repository
	- &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/linux-installation-yum-repo.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/linux-installation-yum-repo.html&lt;/a&gt;  

3. Rocky Linux 서버에 MySQL 5.7 설치하는 방법
	- &lt;a href=&quot;/database/ncloud-database-mysql-57-install-on-rocky-linux.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/database/ncloud-database-mysql-57-install-on-rocky-linux.html&lt;/a&gt;      


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}  	</description>
            <pubDate>Mon, 04 Sep 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux.html</guid>
            
            <category>database</category>
            
            <category>mysql</category>
            
            <category>install</category>
            
            <category>rocky_linux</category>
            
            
        </item>
        
        <item>
            <title>VPC환경에서 Cloud DB for MySQL 생성하기</title>
            <description>## 개요
Ncloud(네이버 클라우드)의 **Cloud DB for MySQL** 서비스는 MySQL 데이터베이스를 쉽고 간편하게 구축하고 관리할 수 있고 자동 Fail-Over, 자동백업, 네이버 서비스에서 검증된 최적화된 설정 등을 제공해주는 완전 관리형 클라우드 데이터베이스 서비스입니다.  

여기서는 VPC환경에서 **Cloud DB for MySQL** 서비스를 생성하는 과정을 정리해보겠습니다.


## 특징
- 기본 10GB 데이터 스토리지를 제공하며, 10GB 단위로 6,000GB까지 자동으로 용량이 증가합니다. 
- 하나의 마스터 DB마다 최대 10대의 슬레이브 DB를 생성할 수 있습니다.
- Load Balancer 상품을 통해 슬레이브 DB 서버들을 읽기 전용 복제본으로 사용함으로써 데이터베이스의 읽기 부하를 분산 시킬 수 있습니다.
- 매일 1회 고객이 원하는 시간에 DB를 자동으로 백업하며, 백업한 데이터를 최대 30일까지 보관할 수 있습니다.
- VPC 환경에서는 멀티 존으로 구성해 높은 안정성을 보장받을 수 있습니다.
- Cloud DB for MySQL 서비스는 완전 관리형 상품으로 사용자는 DB서버의 운영체제에 접근할 수 없습니다.

## DB 접속 방법 3가지
1. Private 도메인을 이용해 접속하는 방법
2. SSL VPN을 이용해 접속하는 방법
3. Public 도메인을 이용해 접속하는 방법

아래에서는 VPC환경에서 Private 도메인을 이용해 접속하는 방법을 설명하도록 하겠습니다.  
만약 네이버 클라우드 외부 환경에서  Cloud DB for MySQL로 접속하려면 Public 도메인을 사용해야 합니다. 하지만, DB 보안을 위해 특수한 상황인 아닌한 Private 도메인에서 생성하는 것을 권장합니다.

## VPC-Subnet 생성
이미 생성된 VPC와 Subnet이 있다면 이 단계는 건너띄고 다음 단계로 이동하시면 됩니다.

### VPC 생성
VPC환경에서 작업할 것이므로 우선 VPC를 생성합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-02.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### Subnet 생성
Subnet은 Cloud DB for MySQL을 위한 Private Subnet과 DB 접속 테스트 Server용 Public Subnet을 각각 생성합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-03.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### Cloud DB for MySQL을 위한 Private Subnet

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-04.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### 테스트용 Server를 위한 Public Subnet
{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-05.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

## 테스트 Server 생성
DB 서버 접속을 테스트 하기 위한 Server를 생성합니다. 여기서는 Rocky Linux 8.8 서버를 생성했습니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-06.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

## DB 서버 생성
[Database] - [Cloud DB for MySQL]에서 [DB Server 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-07.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### DB 서버 엔진 버전
DB 엔진 버전은 MySQL 최신 버전 중 네이버에서 안정성이 검증된 버전인 8.0.x 버전과 5.7.x 버전을 제공합니다. (기본값 8.0.32)

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-08.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### DB 서버 이름과 DB 서비스 이름
- DB Server 이름은 고객이 DB 서버를 구분하기 위한 명칭으로, 사용자가 입력한 이름 뒤에 001, 002와 같이 숫자를 붙여 서버를 구분하게 됩니다.
- 예를 들어 DB 서버 이름을 mydb라고 입력하면 생성되는 DB 서버 이름은 mydb-001, mydb-002와 같습니다.
- DB 서비스 이름은 역할별 DB 서버를 구분하기 위한 이름입니다.
- 일반적으로 하나의 액티브 마스터 DB, 스탠바이 마스터 DB, 다수의 슬레이브 DB로 구성되는 DB 서버군을 말하며, 동일한 데이터를 갖고 있는 DB 서버들을 하나의 DB 서비스라 말합니다.
- 예를 들어 &quot;쇼핑 메인 DB&quot;, &quot;게임 유저 DB&quot;와 같은 식으로 DB 서비스의 역할을 구분하기 위해 사용합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-09.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

{% include callout_v2.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;Cloud DB를 위한 ACG는 자동 생성됩니다(예: cloud-mysql-*)&quot; %}

### DB 서버 설정
DB 이름과 계정. 비번, 접속 포트 등을 설정합니다.  
HOST(IP) 설정에는 전체 허용을 뜻하는 [**%**]를 입력하고, 대신에 `접근 제한은 방화벽인 ACG에서 설정`하겠습니다.  
ACG 외에 추가로 접근 제한을 하고 싶은 경우에는 접근을 허용할 IP대역을 입력합니다. 
- 테스트용 서버의 Subnet 대역을 모두 허용하려면 [10.0.0.%]를 입력
- 만약 특정 서버 1대만 허용하려고 할 경우에는 앞에서 생성한 테스트 서버 IP처럼 [10.0.0.7]을 입력

{% include warning.html title=&quot;접속포트 설정&quot; content=&quot;DB 접속포트는 한번 설정하면 이후에 변경할 수 없으니 신중하게 설정하셔야 합니다.&quot; %}

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-10.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}


## ACG 설정
Cloud DB for MySQL을 생성할 때 자동 생성된 ACG [cloud-mysql-*]을 선택하고 ACG 설정을 클릭합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-11.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

Inbound 설정에 테스트용 Server의 Subnet 대역인 [**10.0.0.0/24**]를 접근소스에 입력합니다.  
또는 특정 서버 1대만 허용하려고 할 경우에는 앞에서 생성한 테스트 서버 IP처럼 [**10.0.0.7**]을 입력합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-12.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}



## MySQL Client 설치
DB 접속 테스트를 위해 생성한 Rocky Linux 8.8 서버에서 MySQL 8.0 Client를 설치합니다.

``` bash
# mysql 8.0
# {version-number} 확인 : https://dev.mysql.com/downloads/repo/yum/
# dnf -y install https://dev.mysql.com/get/mysql80-community-release-el8-{version-number}.noarch.rpm
~# dnf -y install https://dev.mysql.com/get/mysql80-community-release-el8-8.noarch.rpm
~# dnf module reset mysql
~# dnf module disable mysql
~# dnf repolist all | grep mysql
~# dnf -y install mysql-community-server
~# mysqld --initialize-insecure --user=mysql
~# systemctl start mysqld
~# mysql_secure_installation
```

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-13.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}


## DB 서버 접속
Cloud DB for MySQL에 접속하기 위한 주소인 [**Private 도메인**]을 확인 합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-14.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

테스트용 Server에서 Cloud DB for MySQL로 접속하는 방법은 다음과 같습니다.

``` bash
~# mysql -u [user_id] -p -h [Private 도메인명]
```
&lt;br /&gt;
DB에 접속해보면 처음 Cloud DB for MySQL 생성할 때 입력한 테이터베이스 [**testdb**]를 확인할 수 있습니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-15.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

## DB 서버 상세보기
[**DB 관리**] - [**DB 서버 상세보기**] 메뉴에서는 [**Process list**], [**Variables**], [**Status**], [**Database 관리**], [**DB Config 관리**], [**DB User 관리**], [**Backup 설정 관리**], [**DB Server Logs**] 등을 확인할 수 있습니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-16.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 
Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### Database 관리
[**Database 관리**] 메뉴에서는 Cloud DB 서버의 Database를 생성하거나 삭제할 수 있습니다. **추가, 삭제 작업은 한번에 10개까지 가능하고, 최대 1,000개까지 생성 및 조회할 수 있습니다**.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-17.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

- 콘솔이 아닌 터미널 환경에서 직접 Database를 생성하려면 다음과 같은 Stored Procedure를 사용해야 합니다.

``` bash
mysql&gt; CALL sys.ncp_create_db(&apos;생성할 DB명[필수]&apos;,&apos;Character Set[선택]&apos;,&apos;Collation[선택]&apos;);

--예제
--character set, collation 은 mysql 서버 default 설정으로 지정
mysql&gt; CALL sys.ncp_create_db(&apos;testdb&apos;,&apos;&apos;,&apos;&apos;);
```

### DB User 관리
DB 서버를 이용하다보면 여러 계정이 필요하게 됩니다. 이때 계정을 추가하기 위해 [DB 서버 상세보기] - [DB User 관리] 메뉴를 클릭합니다. 

USER_ID, HOST, DB 권한, 암호를 입력하고 DB User 추가 버튼을 클릭합니다.  
- 사용자가 변경한 DB 계정은 DB 서비스 전체에 적용됩니다.
- USER_ID + HOST(IP) 단위로 계정 추가 및 권한 관리를 합니다.
- DB 권한에서 DDL 권한은 CRUD 권한을 포함합니다.
- 콘솔에서 허용하지 않는 문자로 DB User를 생성한 경우는 콘솔에서 수정, 삭제가 불가능합니다.  
   DB 서버에 직접 접속 후 변경해 주세요. 
- 최대 1000개까지 계정을 추가 및 조회 할 수 있습니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-18.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

#### DB 계정 가져오기
DB Server에 생성된 계정 정보 가져오기를 수행하면 DB Server 에서 사용자가 직접 생성한 DB 계정 정보를 Console 에서 확인 및 삭제 할 수 있습니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-19.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1. Cloud DB for MySQL 기본 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/database-database-5-6&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/database-database-5-6&lt;/a&gt;

2. Cloud DB 서버 외부 접근 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/database-database-5-10&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/database-database-5-10&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}  
</description>
            <pubDate>Fri, 01 Sep 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud_database_cloud_db_for_mysql_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud_database_cloud_db_for_mysql_guide.html</guid>
            
            <category>database</category>
            
            <category>mysql</category>
            
            <category>clouddb</category>
            
            <category>vpc</category>
            
            
        </item>
        
        <item>
            <title>로드밸런서(Load Balancer) 인증서 교체하는 방법</title>
            <description>## 개요
Ncloud (네이버 클라우드) 로드밸런서(Load Balancer)에는 HTTPS 서비스가 필요할 때 로드밸런서에 인증서를 추가 하여 사용 할 수 있습니다.  
이때 인증서 만료, 멀티도메인 인증서로 교체 등의 여러가지 이유로 로드밸런서에 있는 기존의 인증서를 새로운 인증서로 교체해야 하는 경우가 있는데 VPC, Classic 환경별로 인증서를 교체하는 방법을 정리해보겠습니다.


## 테스트 인증서 준비
인증서 교체 테스트를 위한 테스트용 인증서 2개를 미리 준비했습니다.

- test1: 현재 적용중인 인증서
- test2:  새로 교체할 인증서

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

## VPC 환경
우선 VPC 환경에서 로드밸런서 인증서를 교체하는 방법을 정리해보겠습니다.  

인증서를 변경 할 로드밸런서를 선택한 후 [리스너 설정 변경] 클릭 합니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-02.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- 현재 테스트용 &apos;test1&apos; 인증서가 적용되어 있는 리스너를 선택 한 후 [인증서 변경]을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-03.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- [**default 인증서 선택**] 항목에서 교체할 인증서인 test2를 선택한 후 [**변경**] 버튼을 클릭합니다.


{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-04.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- 인증서 변경 팝업에서 [**변경**] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-05.png&quot; width=&quot;485&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- 그런 후에 다시 [**리스너 설정 변경**] 화면으로 돌아오면 아래와 같이 인증서가 test2로 변경된 것을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-06.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

## Classic 환경
다음으로는 Classic 환경에서 로드밸런서 인증서를 교체하는 방법을 정리해보겠습니다.  
인증서를 변경할 로드밸런서를 선택 후 [로드밸런서 설정 변경]을 클릭 합니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-07.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- [**SSL Certificate**] 항목을 보면 LB에 적용 되어있는 인증서가 **test1**임을 확인 할 수가 있습니다.  
이제 새로운 인증서를 적용 하기 위해 [**삭제**] 버튼을 클릭해 기존에 설정 해두었던 로드밸런서 설정을 삭제 합니다. 

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-08.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- 기존 설정을 삭제하고 나면 [**SSL Certificate**] 항목에 아래와 같이 인증서 정보가 사라진 것을 확인할 수 있습니다.  
다음으로 기존과 동일한 설정(로드밸런서 포트가 443)을 입력하고 [**추가**] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-09.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- [**추가**] 버튼을 클릭하면 [**SSL Certificate 입력**] 팝업이 나타나는데 여기서 [**SSL Certificate 선택**] 옵션에서 **test2**를 선택하고 [**확인**] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-10.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- 그러면 아래와 같이 기존에 설정되어 있던 &apos;tes1&apos; 인등서가 &apos;test2&apos; 인증서로 변경 되어 있는 것을 확인 할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-11.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}



## 참고 URL
1. VPC 환경에서 Application Load Balancer 생성하기
	- &lt;a href=&quot;/networking/ncloud_networking_load_balancer_application_lb.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/networking/ncloud_networking_load_balancer_application_lb.html&lt;/a&gt;

2. Ncloud Classic 환경에서 Load Balancer 생성하기
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/loadbalancer-classiclb-classic&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/loadbalancer-classiclb-classic&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}</description>
            <pubDate>Wed, 30 Aug 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/networking/ncloud-networking-load-balancer-certificate-change.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/networking/ncloud-networking-load-balancer-certificate-change.html</guid>
            
            <category>vpc</category>
            
            <category>classic</category>
            
            <category>load_balancer</category>
            
            
        </item>
        
        <item>
            <title>Proxy Protocol을 이용해 Client IP 확인하기 | Rocky Linux</title>
            <description>## 개요
Ncloud Load Balancer는 HTTP, HTTPS, TCP, SSL 이렇게 4가지의 프로토콜을 지원합니다.  
그런데, Load Balancer를 사용하면서 Client IP를 확인하려고 할 때 http, https 통신의 경우 X-Forwarded-For 헤더값이 지원되기에 Client IP를 확인할 수 있지만, 
TCP 통신의 경우 X-Forwarded-For 헤더를 사용할 수 없기에 Client IP를 확인하기 위해서는 Proxy Protocol 옵션을 활성화 시켜야 합니다.

여기서는 **Ncloud Network Proxy Load Balancer**의 TCP 프로토콜을 사용하면서 `Proxy Protocol 옵션을 활성화`시켜 **Rocky Linux 서버에서 Client IP를 기록**하는 방법을 소개하겠습니다.

## 테스트 환경
- VPC 환경
- Rocky Linux 8.6
- Apache 2.4.6
- Network Proxy Load Balancer
- Protocol/Port: TCP/80


## Rocky Linux 서버 설치
서버를 생성하고 Apache 웹서버와 개발용 추가 모듈이 포함된 **httpd-devel 패키지**를 설치하고 간단한 웹페이지를 만들어 접속해 보겠습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/compute/ncloud_compute_server_vpc_create.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;VPC 환경에서 서버 생성하는 방법&lt;/a&gt;
&quot; %}

```bash
~# dnf -y install httpd httpd-devel
```

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-33.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-34.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## Target Group 설정 
우선 Load Balancer를 생성하기 전에 Load Balancer에서 사용할 Target Group을 [**Load Balancer**] - [**Target Group**]에서 생성합니다.

- **Target Group 생성**  
Target Group의 이름를 입력하고 Target 유형은 [**VPC Server**]를 선택, 다음으로 VPC 대역을 선택합니다.  
그리고, `프로토콜은 PROXY_TCP를 선택`하고, 포트는 80포트를 사용하겠습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-03.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Health Check 설정**  
Health Check 할 프로토콜은 TCP를 선택합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-04.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Target 추가**  
앞에서 생성했던 서버를 선택하고 [**적용 Target**]쪽으로 이동시킵니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-35.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **설정 확인**  
설정 정보를 최종 확인하고 이상이 없으면 Target Group을 생성합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-36.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- 생성된 Target Group를 확인할 수 있습니다.
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-37.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## Network Proxy Load Balancer 생성
[Load Balancer]에서 [로드밸런서 생성] 버튼을 클릭하고  [네트워크 프록시 로드밸런서]를 선택합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **로드밸런서 설정**  
필요한 로드밸런서 설정을 선택하는데, 그 중에서 서브넷은 혹시 생성되어 있지 않으면 [서브넷 생성] 버튼을 클릭해 로드밸런서 전용 서브넷을 생성한 후에 다시 돌아옵니다. 여기서는 [10.0.4.0/24] 대역으로 설정했습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **리스너 설정**  
리스너는 TCP 프로토콜에 80 포트를 선택하고 추가합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-10.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Target Group 선택**  
Target Group는 위쪽에서 생성한 [Proxy-Protocol-TG] 을 선택합니다. 선택하면 해당 Target Group 설정 내용을 바로 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-38.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **설정 확인**  
선택한 설정을 최종 확인하고 이상이 없으면 [로드밸런서 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-39.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **생성 확인**  
생성된 로드밸런서의 정보를 확인합니다. 특히 접속 정보와 서브넷은 이후 테스트에 사용되므로 꼭 기억하거나 메모해 두는 것이 좋습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-40.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## ACG 설정
로드밸런서 → 서버 접속이 가능하도록 서버 ACG에 규칙을 추가합니다.  
서버에 적용된 ACG의 규칙 설정 화면에서 프로토콜은 TCP,  접근소스는 로드밸런서 IP 대역인 10.0.4.0/24, 포트는 80을 입력하고 추가합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-32.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## 로드밸런서 접속 테스트
위에서 생성된 로드밸런서 접속 주소로 접속을 해보면 아래와 같은 화면을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-41.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Apache 접속 로그 확인**  
Apache 접속 로그 파일은 아래의 위치에 존재하고, 원래는 네이버 클라우드 (Ncloud)의 상품 중 하나인 **Cloud Log Analytics**에서 로그를 수집해서 확인해아야 하지만, 
Rocky Linux는 아직 Cloud Log Analytics Agent를 지원하지 않아 서버에서 직접 로그를 확인해보았습니다.

- Rocky Linux Apache 로그파일 위치 : /var/log/httpd/access_log

Apache 접속 로그를 확인해보면 위에서 설정했던 **Load Balancer의 IP 대역 (10.0.4.xx)**이 기록된 것을 확인할 수 있습니다.  

다음에는 로드밸런서 IP가 아닌 실제 Client IP가 기록되도록 설정을 변경해 보겠습니다.

``` bash
~# cat /var/log/httpd/access_log
```
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-42.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}


## Proxy Protocol 설정
이제 실제 Client IP가 기록되도록 Proxy Protocol을 설정해보겠습니다.  
[Load Balancer] - [Target Group]에서 위에서 생성했던 Target Group를 선택하고 [TargetGroup 설정] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-43.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

Target Group 설정 화면에서 [ProxyProtocol] 옵션을 체크하고 확인 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-18.png&quot; width=&quot;680&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

위에서 정상적으로 접속이 되었던 로드밸런서 주소로 접속하면 [Bad Request] 메시지가 뜨는 것을 확인할 수 있습니다.  
다음으로는 서버 설정을 변경해야 합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-44.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## Apache 모듈 설치
Proxy Protocol을 사용할 때 필요한 Apache 모듈을 Rocky Linux 서버에 설치하겠습니다.

- **mod_myfixip 모듈 다운로드**  
아래 명령어로 mod_myfixip.c 파일을 다운로드 받습니다. 정상적으로 다운로드가 완료되면 **&apos;mod_myfixip.c&apos; saved** 라는 메시지를 확인할 수 있습니다.

```bash
# Apache 2.4
~# wget --no-check-certificate https://raw.githubusercontent.com/ggrandes/apache24-modules/master/mod_myfixip.c

# Apache 2.2
# wget --no-check-certificate https://raw.githubusercontent.com/ggrandes/apache22-modules/master/mod_myfixip.c
```

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-45.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **모듈 설치**  
이어서 /{아파치가 설치된 경로}/bin/apxs -c -i mod_myfixip.c 명령어로 모듈을 설치합니다.

```bash
~# /usr/bin/apxs -c -i mod_myfixip.c
```
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-46.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **httpd.conf 설정 변경**  
모듈 설치가 완료된 후에 httpd.conf 파일을 열어서 제일 아래쪽에 아래 코드를 추가합니다.  
RewriteIPAllow 항목에는 로드밸런서 IP 대역 (ex: 192.168.0.0/16, 10.31.0.0/16 등)을 입력합니다.  
여기서는 위에서 설정했던 로드밸런서 IP 대역인 `10.0.4.0/24`를 입력했습니다. 

``` bash
~# vim /etc/httpd/conf/httpd.conf
```
``` apache
LoadModule myfixip_module modules/mod_myfixip.so

&lt;IfModule mod_myfixip.c&gt;
  RewriteIPResetHeader off
  RewriteIPAllow 10.0.4.0/24
&lt;/IfModule&gt;
```

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-47.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Apache 재시작**  
설정을 마친 후에 Apache를 재시작합니다.

``` bash
~# systemctl restart httpd
```
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-48.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}


## 최종 접속 테스트
모든 설정을 모두 마친 후에 서버에 접속해봅니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-41.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## 최종 접속 로그 확인
Apache 접속 로그를 다시 확인해보면 이번에는 로드밸런서 IP가 아닌 Client IP가 기록된 것을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-49.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## 참고 URL

1. Proxy Protocol 설정하기
  - &lt;a href=&quot;https://guide.ncloud-docs.com/docs/loadbalancer-targetgroup-vpc#proxy-protocol-%EC%84%A4%EC%A0%95&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/loadbalancer-targetgroup-vpc#proxy-protocol-%EC%84%A4%EC%A0%95&lt;/a&gt;

2. Ubuntu 서버에서 Proxy Protocol을 이용해 Client IP 확인하기
  - &lt;a href=&quot;/networking/ncloud-networking-proxy-protocol-client-ip-logging-ubuntu.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-ubuntu.html&lt;/a&gt;

3. CentOS 서버에서 Proxy Protocol을 이용해 Client IP 확인하기
  - &lt;a href=&quot;/networking/ncloud-networking-proxy-protocol-client-ip-logging-centos.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-centos.html&lt;/a&gt;  


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}</description>
            <pubDate>Wed, 23 Aug 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-rocky-linux.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-rocky-linux.html</guid>
            
            <category>vpc</category>
            
            <category>load_balancer</category>
            
            <category>proxy</category>
            
            <category>rocky_linux</category>
            
            
        </item>
        
    </channel>
</rss>
