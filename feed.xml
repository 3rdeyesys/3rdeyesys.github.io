<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>3RDEYESYSTEM Technical Documentations</title>
        <description>써드아이시스템(3rdeyesys) 기술문서 사이트입니다 - Ncloud 프리미엄 파트너</description>
        <link>https://docs.3rdeyesys.com/</link>
        <atom:link href="https://docs.3rdeyesys.com/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Mon, 04 Sep 2023 18:18:38 +0900</pubDate>
        <lastBuildDate>Mon, 04 Sep 2023 18:18:38 +0900</lastBuildDate>
        <generator>Jekyll v4.2.2</generator>
        
        
        <item>
            <title>Rocky Linux 서버에 MySQL 5.7 설치하는 방법</title>
            <description>## 개요
록키 리눅스(Rocky Linux)는 기본 데이터베이스가 MariaDB인데, 상황에 따라 MySQL이 필요한 경우가 있습니다. 이번에는 그 중에서 MySQL 5.7 버전을 설치하는 방법을 정리해보겠습니다.

## 서버 준비
우선 Rocky Linux 서버를 준비합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### Rocky Linux 소개
록키 리눅스에 대한 간략한 소개는 아래 문서에서 확인할 수 있습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/compute/ncloud-compute-server-rocky-linux-guide.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt; Ncloud에서 제공하는 록키 리눅스(Rocky Linux) 서버 소개&lt;/a&gt;
&quot; %}

## 패키지 업데이트
우선 패키지 업데이트를 해보겠습니다.

``` bash
~# dnf -y upgrade-minimal
```
{% include note.html title=&quot;dnf&quot; content=&quot;Dandified YUM의 약자인 dnf는 기존의 yum 패키지 관리자가 갖고 있던 여러 단점들을 수정, 업그레이드해서 
Fedora 18 이후 버전에서 사용되고 있으며, Rocky Linux도 마찬가지로 dnf를 기본 패키지 관리자로 사용하고 있습니다. 물론 호환성을 위해서 yum 명령어도 사용할 수 있습니다.
&quot; %}

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


## MySQL Community 패키지 설치
MySQL 5.7 버전이 포함된 가장 최근의 Repository 설치 패키지는 mysql80-community-release-el7-10.noarch.rpm 입니다.

``` bash
~# dnf -y install https://dev.mysql.com/get/mysql80-community-release-el7-10.noarch.rpm
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


## MySQL 5.7 버전 리포지토리 활성화

### 버전 활성화 정보 초기화

``` bash
~# dnf module reset mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


### 기본 MySQL 버전 비활성화

``` bash
~# dnf module disable mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### MySQL 버전 확인
설치된 리포지토리에서 MySQL 버전을 확인해보면 5.7과 8.0이 존재하는 것을 확인할 수 있습니다.

``` bash
~# dnf repolist all | grep mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-19.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### MySQL 5.7 버전 활성화
설치된 MySQL Community 패키지에서 MySQL 8.0 버전은 비활성화 하고, 5.7 버전을 활성화 합니다.

``` bash
~# dnf config-manager --disable mysql80-community
~# dnf config-manager --enable mysql57-community
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 5.7 설치
MySQL 5.7 서버를 설치합니다.

``` bash
~# dnf -y install mysql-community-server
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 초기화
아래 명령어로 기본 데이터베이스 생성 등의 초기화 작업을 진행합니다. 다만 여기서는 초기화 할 때 --initialize-insecure 옵션으로 비밀번호는 설정하지 않고 아래쪽 MySQL 보안 설정 단계에서 [**mysql_secure_installation**] 명령으로 설정하도록 하겠습니다.

``` bash
~# mysqld --initialize-insecure --user=mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-09.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 데몬 시작
초기화를 마쳤으면 MySQL 데몬을 시작합니다.

``` bash
~# systemctl start mysqld
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 보안 설정
[**mysql_secure_installation**]은 MySQL의 기본 보안을 설정하는 명령으로, 설정되는 항목은 다음과 같습니다.

- root 계정 패스워드 설정
- 원격 호스트에서 root 계정 접속 차단
- 익명 계정 삭제
- 테스트 DB 등 삭제

``` bash
~# mysql_secure_installation
```

- 비밀번호를 설정할 때 비밀번호 유효성 검사 플러그인을 사용할 것인지 선택할 수 있는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 비밀번호 정책 수준 선택
제공되는 비밀번호 정책 수준은 [**LOW**], [**MEDIUM**], [**STRONG**]의 3가지가 있습니다.
- LOW: 8자 이상
- MEDIUM: 8자 이상, 숫자-대소문자-특수문자 포함
- STRONG: 8자 이상, 숫자-대소문자-특수문자 포함, dictionary file에 포함된 단어 사용 불가

여기서는 1을 입력해서 MEDIUM을 선택하겠습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

- 패스워드를 입력하면 패스워드의 복잡성 강도를 점수로 측정해주는데 이번 테스트에서는 100점을 받았습니다.  
그리고, 방금 입력했던 패스워드를 그대로 사용할 것인지 확인하는데 [**Y**]를 입력합니다.  
(혹시 입력했던 비밀번호를 변경하고 싶을 경우는 [**N**]를 입력합니다.)

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-13.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 익명 계정 삭제
다음으로 Anonymous Users 즉, 익명 계정들을 삭제할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-14.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 원격 호스트에서 root 계정 접속 차단
다음은 로컬이 아닌 원격에서 root 계정 로그인을 차단할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 테스트 DB 등 삭제
테스트 DB 등을 삭제할 것인지 묻는데 여기서도 [**Y**]를 입력합니다.
{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-16.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 설정 저장
마지막으로 지금까지 선택한 설정을 모두 적용할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-17.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 접속
위에서 설정했던 비번으로 접속해보면 [**5.7.43 MySQL Community Server**]인 것을 확인할 수 있습니다.

``` bash
~# mysql -u root -p
```

{% include image.html file=&quot;database/ncloud-database-mysql-57-install-on-rocky-linux-18.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 5.7 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## 참고 URL
1. MySQL Yum Repository 다운로드 페이지
	- &lt;a href=&quot;https://dev.mysql.com/downloads/repo/yum/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://dev.mysql.com/downloads/repo/yum/&lt;/a&gt;

2. Installing MySQL on Linux Using the MySQL Yum Repository
	- &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/linux-installation-yum-repo.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/linux-installation-yum-repo.html&lt;/a&gt; 

3. Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법
	- &lt;a href=&quot;/database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux.html&lt;/a&gt; 	 


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}  	</description>
            <pubDate>Mon, 04 Sep 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud-database-mysql-57-install-on-rocky-linux.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud-database-mysql-57-install-on-rocky-linux.html</guid>
            
            <category>database</category>
            
            <category>mysql</category>
            
            <category>install</category>
            
            <category>rocky_linux</category>
            
            
        </item>
        
        <item>
            <title>Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법</title>
            <description>## 개요
록키 리눅스(Rocky Linux)는 기본 데이터베이스가 MariaDB인데, 상황에 따라 MySQL이 필요한 경우가 있습니다. 이번에는 그 중에서 MySQL 8.0 최신 버전을 설치하는 방법을 정리해보겠습니다.

## 서버 준비
우선 Rocky Linux 서버를 준비합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-01.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### Rocky Linux 소개
록키 리눅스에 대한 간략한 소개는 아래 문서에서 확인할 수 있습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/compute/ncloud-compute-server-rocky-linux-guide.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt; Ncloud에서 제공하는 록키 리눅스(Rocky Linux) 서버 소개&lt;/a&gt;
&quot; %}

## 패키지 업데이트
우선 패키지 업데이트를 해보겠습니다.

``` bash
~# dnf -y upgrade-minimal
```
{% include note.html title=&quot;dnf&quot; content=&quot;Dandified YUM의 약자인 dnf는 기존의 yum 패키지 관리자가 갖고 있던 여러 단점들을 수정, 업그레이드해서 
Fedora 18 이후 버전에서 사용되고 있으며, Rocky Linux도 마찬가지로 dnf를 기본 패키지 관리자로 사용하고 있습니다. 물론 호환성을 위해서 yum 명령어도 사용할 수 있습니다.
&quot; %}

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-02.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL Community 최신 패키지 확인
MySQL Community Yum(Dnf) 최신 패키지는 아래 주소에서 확인할 수 있습니다.  
Rocky Linux는 CentOS 8 기반으로 만들어졌으므로 아래 다운로드 페이지에서 Red Hat Enterprise Linux 8 기반의 mysql80-community-release-el8-{버전}.noarch.rpm 리파지토리 버전을 확인합니다.  
**2023-09-04** 기준으로는 [**mysql80-community-release-el8-8.noarch.rpm**] 인것을 확인할 수 있습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;https://dev.mysql.com/downloads/repo/yum/&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt; https://dev.mysql.com/downloads/repo/yum/&lt;/a&gt;
&quot; %}

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-03.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


## MySQL Community 패키지 설치
위에서 확인한 MySQL 8.0의 최신 Repository 설치 패키지는 [**mysql80-community-release-el8-8.noarch.rpm**] 입니다.

``` bash
~# dnf -y install https://dev.mysql.com/get/mysql80-community-release-el8-8.noarch.rpm
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-04.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


## MySQL 8.0 버전 리포지토리 활성화

### 버전 활성화 정보 초기화

``` bash
~# dnf module reset mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-05.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


### 기본 MySQL 버전 비활성화

``` bash
~# dnf module disable mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-06.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}


### MySQL 8.0 버전 확인
설치된 MySQL Community 패키지에 포함된 MySQL 버전을 확인해보겠습니다.  
mysql80-community-release-el8-{버전}.noarch.rpm 버전부터는 8.0 버전만 있고, 5.7 버전은 포함되어 있지 않습니다.

``` bash
~# dnf repolist all | grep mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-07.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 8.0 설치
MySQL 8.0 서버를 설치합니다.

``` bash
~# dnf -y install mysql-community-server
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-08.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 초기화
아래 명령어로 기본 데이터베이스 생성 등의 초기화 작업을 진행합니다. 다만 여기서는 초기화 할 때 --initialize-insecure 옵션으로 비밀번호는 설정하지 않고 아래쪽 MySQL 보안 설정 단계에서 [**mysql_secure_installation**] 명령으로 설정하도록 하겠습니다.

``` bash
~# mysqld --initialize-insecure --user=mysql
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-09.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 데몬 시작
초기화를 마쳤으면 MySQL 데몬을 시작합니다.

``` bash
~# systemctl start mysqld
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-10.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 보안 설정
[**mysql_secure_installation**]은 MySQL의 기본 보안을 설정하는 명령으로, 설정되는 항목은 다음과 같습니다.

- root 계정 패스워드 설정
- 원격 호스트에서 root 계정 접속 차단
- 익명 계정 삭제
- 테스트 DB 등 삭제

``` bash
~# mysql_secure_installation
```

- 비밀번호를 설정할 때 비밀번호 유효성 검사 플러그인을 사용할 것인지 선택할 수 있는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-11.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 비밀번호 정책 수준 선택
제공되는 비밀번호 정책 수준은 [**LOW**], [**MEDIUM**], [**STRONG**]의 3가지가 있습니다.
- LOW: 8자 이상
- MEDIUM: 8자 이상, 숫자-대소문자-특수문자 포함
- STRONG: 8자 이상, 숫자-대소문자-특수문자 포함, dictionary file에 포함된 단어 사용 불가

여기서는 1을 입력해서 MEDIUM을 선택하겠습니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-12.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

- 패스워드를 입력하면 패스워드의 복잡성 강도를 점수로 측정해주는데 이번 테스트에서는 100점을 받았습니다.  
그리고, 방금 입력했던 패스워드를 그대로 사용할 것인지 확인하는데 [**Y**]를 입력합니다.  
(혹시 입력했던 비밀번호를 변경하고 싶을 경우는 [**N**]를 입력합니다.)

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-13.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 익명 계정 삭제
다음으로 Anonymous Users 즉, 익명 계정들을 삭제할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-14.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 원격 호스트에서 root 계정 접속 차단
다음은 로컬이 아닌 원격에서 root 계정 로그인을 차단할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-15.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 테스트 DB 등 삭제
테스트 DB 등을 삭제할 것인지 묻는데 여기서도 [**Y**]를 입력합니다.
{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-16.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

### 설정 저장
마지막으로 지금까지 선택한 설정을 모두 적용할 것인지 묻는데 [**Y**]를 입력합니다.

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-17.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## MySQL 접속
위에서 설정했던 비번으로 접속해보면 [**8.0.34 MySQL Community Server**]인 것을 확인할 수 있습니다.

``` bash
~# mysql -u root -p
```

{% include image.html file=&quot;database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux-18.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Rocky Linux 서버에 MySQL 8.0 최신 버전 설치하는 방법에 대한 가이드&quot; caption=&quot;&quot; %}

## 참고 URL
1. MySQL Yum Repository 다운로드 페이지
	- &lt;a href=&quot;https://dev.mysql.com/downloads/repo/yum/&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://dev.mysql.com/downloads/repo/yum/&lt;/a&gt;

2. Installing MySQL on Linux Using the MySQL Yum Repository
	- &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/linux-installation-yum-repo.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://dev.mysql.com/doc/refman/8.0/en/linux-installation-yum-repo.html&lt;/a&gt;  

3. Rocky Linux 서버에 MySQL 5.7 설치하는 방법
	- &lt;a href=&quot;/database/ncloud-database-mysql-57-install-on-rocky-linux.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/database/ncloud-database-mysql-57-install-on-rocky-linux.html&lt;/a&gt;      


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}  	</description>
            <pubDate>Mon, 04 Sep 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud-database-mysql-8-latest-version-install-on-rocky-linux.html</guid>
            
            <category>database</category>
            
            <category>mysql</category>
            
            <category>install</category>
            
            <category>rocky_linux</category>
            
            
        </item>
        
        <item>
            <title>VPC환경에서 Cloud DB for MySQL 생성하기</title>
            <description>## 개요
Ncloud(네이버 클라우드)의 **Cloud DB for MySQL** 서비스는 MySQL 데이터베이스를 쉽고 간편하게 구축하고 관리할 수 있고 자동 Fail-Over, 자동백업, 네이버 서비스에서 검증된 최적화된 설정 등을 제공해주는 완전 관리형 클라우드 데이터베이스 서비스입니다.  

여기서는 VPC환경에서 **Cloud DB for MySQL** 서비스를 생성하는 과정을 정리해보겠습니다.


## 특징
- 기본 10GB 데이터 스토리지를 제공하며, 10GB 단위로 6,000GB까지 자동으로 용량이 증가합니다. 
- 하나의 마스터 DB마다 최대 10대의 슬레이브 DB를 생성할 수 있습니다.
- Load Balancer 상품을 통해 슬레이브 DB 서버들을 읽기 전용 복제본으로 사용함으로써 데이터베이스의 읽기 부하를 분산 시킬 수 있습니다.
- 매일 1회 고객이 원하는 시간에 DB를 자동으로 백업하며, 백업한 데이터를 최대 30일까지 보관할 수 있습니다.
- VPC 환경에서는 멀티 존으로 구성해 높은 안정성을 보장받을 수 있습니다.
- Cloud DB for MySQL 서비스는 완전 관리형 상품으로 사용자는 DB서버의 운영체제에 접근할 수 없습니다.

## DB 접속 방법 3가지
1. Private 도메인을 이용해 접속하는 방법
2. SSL VPN을 이용해 접속하는 방법
3. Public 도메인을 이용해 접속하는 방법

아래에서는 VPC환경에서 Private 도메인을 이용해 접속하는 방법을 설명하도록 하겠습니다.  
만약 네이버 클라우드 외부 환경에서  Cloud DB for MySQL로 접속하려면 Public 도메인을 사용해야 합니다. 하지만, DB 보안을 위해 특수한 상황인 아닌한 Private 도메인에서 생성하는 것을 권장합니다.

## VPC-Subnet 생성
이미 생성된 VPC와 Subnet이 있다면 이 단계는 건너띄고 다음 단계로 이동하시면 됩니다.

### VPC 생성
VPC환경에서 작업할 것이므로 우선 VPC를 생성합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-02.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### Subnet 생성
Subnet은 Cloud DB for MySQL을 위한 Private Subnet과 DB 접속 테스트 Server용 Public Subnet을 각각 생성합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-03.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### Cloud DB for MySQL을 위한 Private Subnet

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-04.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### 테스트용 Server를 위한 Public Subnet
{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-05.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

## 테스트 Server 생성
DB 서버 접속을 테스트 하기 위한 Server를 생성합니다. 여기서는 Rocky Linux 8.8 서버를 생성했습니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-06.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

## DB 서버 생성
[Database] - [Cloud DB for MySQL]에서 [DB Server 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-07.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### DB 서버 엔진 버전
DB 엔진 버전은 MySQL 최신 버전 중 네이버에서 안정성이 검증된 버전인 8.0.x 버전과 5.7.x 버전을 제공합니다. (기본값 8.0.32)

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-08.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### DB 서버 이름과 DB 서비스 이름
- DB Server 이름은 고객이 DB 서버를 구분하기 위한 명칭으로, 사용자가 입력한 이름 뒤에 001, 002와 같이 숫자를 붙여 서버를 구분하게 됩니다.
- 예를 들어 DB 서버 이름을 mydb라고 입력하면 생성되는 DB 서버 이름은 mydb-001, mydb-002와 같습니다.
- DB 서비스 이름은 역할별 DB 서버를 구분하기 위한 이름입니다.
- 일반적으로 하나의 액티브 마스터 DB, 스탠바이 마스터 DB, 다수의 슬레이브 DB로 구성되는 DB 서버군을 말하며, 동일한 데이터를 갖고 있는 DB 서버들을 하나의 DB 서비스라 말합니다.
- 예를 들어 &quot;쇼핑 메인 DB&quot;, &quot;게임 유저 DB&quot;와 같은 식으로 DB 서비스의 역할을 구분하기 위해 사용합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-09.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

{% include callout_v2.html type=&quot;info&quot; level=&quot;1&quot; content=&quot;Cloud DB를 위한 ACG는 자동 생성됩니다(예: cloud-mysql-*)&quot; %}

### DB 서버 설정
DB 이름과 계정. 비번, 접속 포트 등을 설정합니다.  
HOST(IP) 설정에는 전체 허용을 뜻하는 [**%**]를 입력하고, 대신에 `접근 제한은 방화벽인 ACG에서 설정`하겠습니다.  
ACG 외에 추가로 접근 제한을 하고 싶은 경우에는 접근을 허용할 IP대역을 입력합니다. 
- 테스트용 서버의 Subnet 대역을 모두 허용하려면 [10.0.0.%]를 입력
- 만약 특정 서버 1대만 허용하려고 할 경우에는 앞에서 생성한 테스트 서버 IP처럼 [10.0.0.7]을 입력

{% include warning.html title=&quot;접속포트 설정&quot; content=&quot;DB 접속포트는 한번 설정하면 이후에 변경할 수 없으니 신중하게 설정하셔야 합니다.&quot; %}

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-10.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}


## ACG 설정
Cloud DB for MySQL을 생성할 때 자동 생성된 ACG [cloud-mysql-*]을 선택하고 ACG 설정을 클릭합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-11.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

Inbound 설정에 테스트용 Server의 Subnet 대역인 [**10.0.0.0/24**]를 접근소스에 입력합니다.  
또는 특정 서버 1대만 허용하려고 할 경우에는 앞에서 생성한 테스트 서버 IP처럼 [**10.0.0.7**]을 입력합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-12.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}



## MySQL Client 설치
DB 접속 테스트를 위해 생성한 Rocky Linux 8.8 서버에서 MySQL 8.0 Client를 설치합니다.

``` bash
# mysql 8.0
# {version-number} 확인 : https://dev.mysql.com/downloads/repo/yum/
# dnf -y install https://dev.mysql.com/get/mysql80-community-release-el8-{version-number}.noarch.rpm
~# dnf -y install https://dev.mysql.com/get/mysql80-community-release-el8-8.noarch.rpm
~# dnf module reset mysql
~# dnf module disable mysql
~# dnf repolist all | grep mysql
~# dnf -y install mysql-community-server
~# mysqld --initialize-insecure --user=mysql
~# systemctl start mysqld
~# mysql_secure_installation
```

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-13.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}


## DB 서버 접속
Cloud DB for MySQL에 접속하기 위한 주소인 [**Private 도메인**]을 확인 합니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-14.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

테스트용 Server에서 Cloud DB for MySQL로 접속하는 방법은 다음과 같습니다.

``` bash
~# mysql -u [user_id] -p -h [Private 도메인명]
```
&lt;br /&gt;
DB에 접속해보면 처음 Cloud DB for MySQL 생성할 때 입력한 테이터베이스 [**testdb**]를 확인할 수 있습니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-15.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

## DB 서버 상세보기
[**DB 관리**] - [**DB 서버 상세보기**] 메뉴에서는 [**Process list**], [**Variables**], [**Status**], [**Database 관리**], [**DB Config 관리**], [**DB User 관리**], [**Backup 설정 관리**], [**DB Server Logs**] 등을 확인할 수 있습니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-16.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 
Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

### Database 관리
[**Database 관리**] 메뉴에서는 Cloud DB 서버의 Database를 생성하거나 삭제할 수 있습니다. **추가, 삭제 작업은 한번에 10개까지 가능하고, 최대 1,000개까지 생성 및 조회할 수 있습니다**.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-17.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

- 콘솔이 아닌 터미널 환경에서 직접 Database를 생성하려면 다음과 같은 Stored Procedure를 사용해야 합니다.

``` bash
mysql&gt; CALL sys.ncp_create_db(&apos;생성할 DB명[필수]&apos;,&apos;Character Set[선택]&apos;,&apos;Collation[선택]&apos;);

--예제
--character set, collation 은 mysql 서버 default 설정으로 지정
mysql&gt; CALL sys.ncp_create_db(&apos;testdb&apos;,&apos;&apos;,&apos;&apos;);
```

### DB User 관리
DB 서버를 이용하다보면 여러 계정이 필요하게 됩니다. 이때 계정을 추가하기 위해 [DB 서버 상세보기] - [DB User 관리] 메뉴를 클릭합니다. 

USER_ID, HOST, DB 권한, 암호를 입력하고 DB User 추가 버튼을 클릭합니다.  
- 사용자가 변경한 DB 계정은 DB 서비스 전체에 적용됩니다.
- USER_ID + HOST(IP) 단위로 계정 추가 및 권한 관리를 합니다.
- DB 권한에서 DDL 권한은 CRUD 권한을 포함합니다.
- 콘솔에서 허용하지 않는 문자로 DB User를 생성한 경우는 콘솔에서 수정, 삭제가 불가능합니다.  
   DB 서버에 직접 접속 후 변경해 주세요. 
- 최대 1000개까지 계정을 추가 및 조회 할 수 있습니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-18.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}

#### DB 계정 가져오기
DB Server에 생성된 계정 정보 가져오기를 수행하면 DB Server 에서 사용자가 직접 생성한 DB 계정 정보를 Console 에서 확인 및 삭제 할 수 있습니다.

{% include image.html file=&quot;database/ncloud-database-cloud-db-for-mysql-guide-19.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud(네이버 클라우드) VPC환경에서 Cloud DB for MySQL 생성하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1. Cloud DB for MySQL 기본 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/database-database-5-6&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/database-database-5-6&lt;/a&gt;

2. Cloud DB 서버 외부 접근 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/database-database-5-10&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/database-database-5-10&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}  
</description>
            <pubDate>Fri, 01 Sep 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/database/ncloud_database_cloud_db_for_mysql_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/database/ncloud_database_cloud_db_for_mysql_guide.html</guid>
            
            <category>database</category>
            
            <category>mysql</category>
            
            <category>clouddb</category>
            
            <category>vpc</category>
            
            
        </item>
        
        <item>
            <title>로드밸런서(Load Balancer) 인증서 교체하는 방법</title>
            <description>## 개요
Ncloud (네이버 클라우드) 로드밸런서(Load Balancer)에는 HTTPS 서비스가 필요할 때 로드밸런서에 인증서를 추가 하여 사용 할 수 있습니다.  
이때 인증서 만료, 멀티도메인 인증서로 교체 등의 여러가지 이유로 로드밸런서에 있는 기존의 인증서를 새로운 인증서로 교체해야 하는 경우가 있는데 VPC, Classic 환경별로 인증서를 교체하는 방법을 정리해보겠습니다.


## 테스트 인증서 준비
인증서 교체 테스트를 위한 테스트용 인증서 2개를 미리 준비했습니다.

- test1: 현재 적용중인 인증서
- test2:  새로 교체할 인증서

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

## VPC 환경
우선 VPC 환경에서 로드밸런서 인증서를 교체하는 방법을 정리해보겠습니다.  

인증서를 변경 할 로드밸런서를 선택한 후 [리스너 설정 변경] 클릭 합니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-02.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- 현재 테스트용 &apos;test1&apos; 인증서가 적용되어 있는 리스너를 선택 한 후 [인증서 변경]을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-03.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- [**default 인증서 선택**] 항목에서 교체할 인증서인 test2를 선택한 후 [**변경**] 버튼을 클릭합니다.


{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-04.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- 인증서 변경 팝업에서 [**변경**] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-05.png&quot; width=&quot;485&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- 그런 후에 다시 [**리스너 설정 변경**] 화면으로 돌아오면 아래와 같이 인증서가 test2로 변경된 것을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-06.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

## Classic 환경
다음으로는 Classic 환경에서 로드밸런서 인증서를 교체하는 방법을 정리해보겠습니다.  
인증서를 변경할 로드밸런서를 선택 후 [로드밸런서 설정 변경]을 클릭 합니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-07.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- [**SSL Certificate**] 항목을 보면 LB에 적용 되어있는 인증서가 **test1**임을 확인 할 수가 있습니다.  
이제 새로운 인증서를 적용 하기 위해 [**삭제**] 버튼을 클릭해 기존에 설정 해두었던 로드밸런서 설정을 삭제 합니다. 

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-08.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- 기존 설정을 삭제하고 나면 [**SSL Certificate**] 항목에 아래와 같이 인증서 정보가 사라진 것을 확인할 수 있습니다.  
다음으로 기존과 동일한 설정(로드밸런서 포트가 443)을 입력하고 [**추가**] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-09.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- [**추가**] 버튼을 클릭하면 [**SSL Certificate 입력**] 팝업이 나타나는데 여기서 [**SSL Certificate 선택**] 옵션에서 **test2**를 선택하고 [**확인**] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-10.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}

- 그러면 아래와 같이 기존에 설정되어 있던 &apos;tes1&apos; 인등서가 &apos;test2&apos; 인증서로 변경 되어 있는 것을 확인 할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-load-balancer-certificate-change-11.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) 로드밸런서(Load Balancer) 인증서 교체하는 방법&quot; caption=&quot;&quot; %}



## 참고 URL
1. VPC 환경에서 Application Load Balancer 생성하기
	- &lt;a href=&quot;/networking/ncloud_networking_load_balancer_application_lb.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/networking/ncloud_networking_load_balancer_application_lb.html&lt;/a&gt;

2. Ncloud Classic 환경에서 Load Balancer 생성하기
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/loadbalancer-classiclb-classic&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/loadbalancer-classiclb-classic&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}</description>
            <pubDate>Wed, 30 Aug 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/networking/ncloud-networking-load-balancer-certificate-change.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/networking/ncloud-networking-load-balancer-certificate-change.html</guid>
            
            <category>vpc</category>
            
            <category>classic</category>
            
            <category>load_balancer</category>
            
            
        </item>
        
        <item>
            <title>Proxy Protocol을 이용해 Client IP 확인하기 | Rocky Linux</title>
            <description>## 개요
Ncloud Load Balancer는 HTTP, HTTPS, TCP, SSL 이렇게 4가지의 프로토콜을 지원합니다.  
그런데, Load Balancer를 사용하면서 Client IP를 확인하려고 할 때 http, https 통신의 경우 X-Forwarded-For 헤더값이 지원되기에 Client IP를 확인할 수 있지만, 
TCP 통신의 경우 X-Forwarded-For 헤더를 사용할 수 없기에 Client IP를 확인하기 위해서는 Proxy Protocol 옵션을 활성화 시켜야 합니다.

여기서는 **Ncloud Network Proxy Load Balancer**의 TCP 프로토콜을 사용하면서 `Proxy Protocol 옵션을 활성화`시켜 **Rocky Linux 서버에서 Client IP를 기록**하는 방법을 소개하겠습니다.

## 테스트 환경
- VPC 환경
- Rocky Linux 8.6
- Apache 2.4.6
- Network Proxy Load Balancer
- Protocol/Port: TCP/80


## Rocky Linux 서버 설치
서버를 생성하고 Apache 웹서버와 개발용 추가 모듈이 포함된 **httpd-devel 패키지**를 설치하고 간단한 웹페이지를 만들어 접속해 보겠습니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/compute/ncloud_compute_server_vpc_create.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;VPC 환경에서 서버 생성하는 방법&lt;/a&gt;
&quot; %}

```bash
~# dnf -y install httpd httpd-devel
```

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-33.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-34.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## Target Group 설정 
우선 Load Balancer를 생성하기 전에 Load Balancer에서 사용할 Target Group을 [**Load Balancer**] - [**Target Group**]에서 생성합니다.

- **Target Group 생성**  
Target Group의 이름를 입력하고 Target 유형은 [**VPC Server**]를 선택, 다음으로 VPC 대역을 선택합니다.  
그리고, `프로토콜은 PROXY_TCP를 선택`하고, 포트는 80포트를 사용하겠습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-03.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Health Check 설정**  
Health Check 할 프로토콜은 TCP를 선택합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-04.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Target 추가**  
앞에서 생성했던 서버를 선택하고 [**적용 Target**]쪽으로 이동시킵니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-35.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **설정 확인**  
설정 정보를 최종 확인하고 이상이 없으면 Target Group을 생성합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-36.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- 생성된 Target Group를 확인할 수 있습니다.
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-37.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## Network Proxy Load Balancer 생성
[Load Balancer]에서 [로드밸런서 생성] 버튼을 클릭하고  [네트워크 프록시 로드밸런서]를 선택합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **로드밸런서 설정**  
필요한 로드밸런서 설정을 선택하는데, 그 중에서 서브넷은 혹시 생성되어 있지 않으면 [서브넷 생성] 버튼을 클릭해 로드밸런서 전용 서브넷을 생성한 후에 다시 돌아옵니다. 여기서는 [10.0.4.0/24] 대역으로 설정했습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **리스너 설정**  
리스너는 TCP 프로토콜에 80 포트를 선택하고 추가합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-10.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Target Group 선택**  
Target Group는 위쪽에서 생성한 [Proxy-Protocol-TG] 을 선택합니다. 선택하면 해당 Target Group 설정 내용을 바로 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-38.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **설정 확인**  
선택한 설정을 최종 확인하고 이상이 없으면 [로드밸런서 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-39.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **생성 확인**  
생성된 로드밸런서의 정보를 확인합니다. 특히 접속 정보와 서브넷은 이후 테스트에 사용되므로 꼭 기억하거나 메모해 두는 것이 좋습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-40.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## ACG 설정
로드밸런서 → 서버 접속이 가능하도록 서버 ACG에 규칙을 추가합니다.  
서버에 적용된 ACG의 규칙 설정 화면에서 프로토콜은 TCP,  접근소스는 로드밸런서 IP 대역인 10.0.4.0/24, 포트는 80을 입력하고 추가합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-32.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## 로드밸런서 접속 테스트
위에서 생성된 로드밸런서 접속 주소로 접속을 해보면 아래와 같은 화면을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-41.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Apache 접속 로그 확인**  
Apache 접속 로그 파일은 아래의 위치에 존재하고, 원래는 네이버 클라우드 (Ncloud)의 상품 중 하나인 **Cloud Log Analytics**에서 로그를 수집해서 확인해아야 하지만, 
Rocky Linux는 아직 Cloud Log Analytics Agent를 지원하지 않아 서버에서 직접 로그를 확인해보았습니다.

- Rocky Linux Apache 로그파일 위치 : /var/log/httpd/access_log

Apache 접속 로그를 확인해보면 위에서 설정했던 **Load Balancer의 IP 대역 (10.0.4.xx)**이 기록된 것을 확인할 수 있습니다.  

다음에는 로드밸런서 IP가 아닌 실제 Client IP가 기록되도록 설정을 변경해 보겠습니다.

``` bash
~# cat /var/log/httpd/access_log
```
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-42.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}


## Proxy Protocol 설정
이제 실제 Client IP가 기록되도록 Proxy Protocol을 설정해보겠습니다.  
[Load Balancer] - [Target Group]에서 위에서 생성했던 Target Group를 선택하고 [TargetGroup 설정] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-43.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

Target Group 설정 화면에서 [ProxyProtocol] 옵션을 체크하고 확인 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-18.png&quot; width=&quot;680&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

위에서 정상적으로 접속이 되었던 로드밸런서 주소로 접속하면 [Bad Request] 메시지가 뜨는 것을 확인할 수 있습니다.  
다음으로는 서버 설정을 변경해야 합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-44.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## Apache 모듈 설치
Proxy Protocol을 사용할 때 필요한 Apache 모듈을 Rocky Linux 서버에 설치하겠습니다.

- **mod_myfixip 모듈 다운로드**  
아래 명령어로 mod_myfixip.c 파일을 다운로드 받습니다. 정상적으로 다운로드가 완료되면 **&apos;mod_myfixip.c&apos; saved** 라는 메시지를 확인할 수 있습니다.

```bash
# Apache 2.4
~# wget --no-check-certificate https://raw.githubusercontent.com/ggrandes/apache24-modules/master/mod_myfixip.c

# Apache 2.2
# wget --no-check-certificate https://raw.githubusercontent.com/ggrandes/apache22-modules/master/mod_myfixip.c
```

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-45.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **모듈 설치**  
이어서 /{아파치가 설치된 경로}/bin/apxs -c -i mod_myfixip.c 명령어로 모듈을 설치합니다.

```bash
~# /usr/bin/apxs -c -i mod_myfixip.c
```
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-46.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **httpd.conf 설정 변경**  
모듈 설치가 완료된 후에 httpd.conf 파일을 열어서 제일 아래쪽에 아래 코드를 추가합니다.  
RewriteIPAllow 항목에는 로드밸런서 IP 대역 (ex: 192.168.0.0/16, 10.31.0.0/16 등)을 입력합니다.  
여기서는 위에서 설정했던 로드밸런서 IP 대역인 `10.0.4.0/24`를 입력했습니다. 

``` bash
~# vim /etc/httpd/conf/httpd.conf
```
``` apache
LoadModule myfixip_module modules/mod_myfixip.so

&lt;IfModule mod_myfixip.c&gt;
  RewriteIPResetHeader off
  RewriteIPAllow 10.0.4.0/24
&lt;/IfModule&gt;
```

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-47.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Apache 재시작**  
설정을 마친 후에 Apache를 재시작합니다.

``` bash
~# systemctl restart httpd
```
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-48.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}


## 최종 접속 테스트
모든 설정을 모두 마친 후에 서버에 접속해봅니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-41.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## 최종 접속 로그 확인
Apache 접속 로그를 다시 확인해보면 이번에는 로드밸런서 IP가 아닌 Client IP가 기록된 것을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-49.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## 참고 URL

1. Proxy Protocol 설정하기
  - &lt;a href=&quot;https://guide.ncloud-docs.com/docs/loadbalancer-targetgroup-vpc#proxy-protocol-%EC%84%A4%EC%A0%95&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/loadbalancer-targetgroup-vpc#proxy-protocol-%EC%84%A4%EC%A0%95&lt;/a&gt;

2. Ubuntu 서버에서 Proxy Protocol을 이용해 Client IP 확인하기
  - &lt;a href=&quot;/networking/ncloud-networking-proxy-protocol-client-ip-logging-ubuntu.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-ubuntu.html&lt;/a&gt;

3. CentOS 서버에서 Proxy Protocol을 이용해 Client IP 확인하기
  - &lt;a href=&quot;/networking/ncloud-networking-proxy-protocol-client-ip-logging-centos.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-centos.html&lt;/a&gt;  


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}</description>
            <pubDate>Wed, 23 Aug 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-rocky-linux.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-rocky-linux.html</guid>
            
            <category>vpc</category>
            
            <category>load_balancer</category>
            
            <category>proxy</category>
            
            <category>rocky_linux</category>
            
            
        </item>
        
        <item>
            <title>Proxy Protocol을 이용해 Client IP 확인하기 | Ubuntu</title>
            <description>## 개요
Ncloud Load Balancer는 HTTP, HTTPS, TCP, SSL 이렇게 4가지의 프로토콜을 지원합니다.  
그런데, Load Balancer를 사용하면서 Client IP를 확인하려고 할 때 http, https 통신의 경우 X-Forwarded-For 헤더값이 지원되기에 Client IP를 확인할 수 있지만, 
TCP 통신의 경우 X-Forwarded-For 헤더를 사용할 수 없기에 Client IP를 확인하기 위해서는 Proxy Protocol 옵션을 활성화 시켜야 합니다.

여기서는 **Ncloud Network Proxy Load Balancer**의 TCP 프로토콜을 사용하면서 `Proxy Protocol 옵션을 활성화`시켜 **Ubuntu 서버에서 Client IP를 기록**하는 방법을 소개하겠습니다.

## 테스트 환경
- VPC 환경
- Ubuntu 18.04
- Apache 2.4.6
- Network Proxy Load Balancer
- Protocol/Port: TCP/80


## Ubuntu 서버 설치
서버를 생성하고 Apache 웹서버와 개발용 추가 모듈이 포함된 **apache2-dev 패키지**를 설치하고 간단한 웹페이지를 만들어 접속해 보았습니다.  

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/compute/ncloud_compute_server_vpc_create.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;VPC 환경에서 서버 생성하는 방법&lt;/a&gt;
&quot; %}

``` bash
~# apt-get update
~# apt-get -y install apache2 apache2-dev
```
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}


## Target Group 설정 
우선 Load Balancer를 생성하기 전에 Load Balancer에서 사용할 Target Group을 [Load Balancer] - [Target Group]에서 생성합니다.

- **Target Group 생성**  
Target Group의 이름를 입력하고 Target 유형은 [VPC Server]를 선택, 다음으로 VPC 대역을 선택합니다.  
그리고, `프로토콜은 PROXY_TCP를 선택`하고, 포트는 80포트를 사용하겠습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-03.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Health Check 설정**  
Health Check 할 프로토콜은 TCP를 선택합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-04.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Target 추가**  
앞에서 생성했던 서버 2대를 선택하고 [적용 Target]쪽으로 이동시킵니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-05.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **설정 확인**  
설정 정보를 최종 확인하고 이상이 없으면 Target Group을 생성합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-06.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

생성된 Target Group를 확인할 수 있습니다.
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-07.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## Network Proxy Load Balancer 생성
[Load Balancer]에서 [로드밸런서 생성] 버튼을 클릭하고  [네트워크 프록시 로드밸런서]를 선택합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **로드밸런서 설정**  
필요한 로드밸런서 설정을 선택하는데, 그 중에서 서브넷은 혹시 생성되어 있지 않으면 [서브넷 생성] 버튼을 클릭해 로드밸런서 전용 서브넷을 생성한 후에 다시 돌아옵니다. 여기서는 [10.0.4.0/24] 대역으로 설정했습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **리스너 설정**  
리스너는 TCP 프로토콜에 80 포트를 선택하고 추가합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-10.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Target Group 선택**  
Target Group는 위쪽에서 생성한 [Proxy-Protocol-TG] 을 선택합니다. 선택하면 해당 Target Group 설정 내용을 바로 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-11.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **설정 확인**  
선택한 설정을 최종 확인하고 이상이 없으면 [로드밸런서 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-12.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **생성 확인**  
생성된 로드밸런서의 정보를 확인합니다. 특히 접속 정보와 서브넷은 이후 테스트에 사용되므로 꼭 기억하거나 메모해 두는 것이 좋습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## ACG 설정
로드밸런서 → 서버 접속이 가능하도록 서버 ACG에 규칙을 추가합니다.  
서버에 적용된 ACG의 규칙 설정 화면에서 프로토콜은 TCP,  접근소스는 로드밸런서 IP 대역인 10.0.4.0/24, 포트는 80을 입력하고 추가합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-32.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## 로드밸런서 접속 테스트
위에서 생성된 로드밸런서 접속 주소로 접속을 해보면 아래와 같은 화면을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-15.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Apache 접속 로그 확인**  
Apache 접속 로그 파일은 아래의 위치에 존재하지만, 저희는 네이버 클라우드 (Ncloud)의 상품 중 하나인 **Cloud Log Analytics**에서 로그를 수집해서 확인해보겠습니다. 
- Ubuntu Apache 로그파일 위치 : /var/log/apache2/access.log

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/analytics/ncloud_analytics_cloud_log_analytics_guide.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;Cloud Log Analytics 설정 가이드&lt;/a&gt;
&quot; %}

Cloud Log Analytics에서 수집한 로그를 확인해보면 위에서 설정했던 **Load Balancer의 IP 대역 (10.0.4.xx)**이 기록된 것을 확인할 수 있습니다.  

다음으로는 로드밸런서 IP가 아닌 실제 Client IP가 기록되도록 설정을 변경해 보겠습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-16-2.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}


## Proxy Protocol 설정
이제 실제 Client IP가 기록되도록 Proxy Protocol을 설정해보겠습니다.  
[Load Balancer] - [Target Group]에서 위에서 생성했던 Target Group를 선택하고 [TargetGroup 설정] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-17.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

Target Group 설정 화면에서 [ProxyProtocol] 옵션을 체크하고 확인 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-18.png&quot; width=&quot;680&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

위에서 정상적으로 접속이 되었던 로드밸런서 주소로 접속하면 [Bad Request] 메시지가 뜨는 것을 확인할 수 있습니다.  
다음으로는 서버 설정을 변경해야 합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-19.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## Apache 모듈 설치
Proxy Protocol을 사용할 때 필요한 Apache 모듈을 Ubuntu 서버에 설치하겠습니다.

- **mod_myfixip 모듈 다운로드**  
아래 명령어로 mod_myfixip.c 파일을 다운로드 받습니다. 정상적으로 다운로드가 완료되면 **&apos;mod_myfixip.c&apos; saved** 라는 메시지를 확인할 수 있습니다.

```bash
~# wget --no-check-certificate https://raw.githubusercontent.com/ggrandes/apache24-modules/master/mod_myfixip.c
```

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-24.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **모듈 설치**  
이어서 apxs2 -c -i mod_myfixip.c 명령어로 모듈을 설치합니다.

```bash
~# apxs2 -c -i mod_myfixip.c
```

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-25.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **myfixip.load 파일 생성**  
mod_myfixip 모듈을 로드하기 위한 파일을 생성하고, LoadModule 관련 코드를 추가합니다.

``` bash
~# vi /etc/apache2/mods-available/myfixip.load
```
``` apache
LoadModule myfixip_module /usr/lib/apache2/modules/mod_myfixip.so
```

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-26.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **myfixip.conf 파일 생성**  
mod_myfixip 모듈 환경 설정 파일을 생성하고 모듈 관련 코드를 추가합니다.  
RewriteIPAllow 항목에는 로드밸런서 IP 대역 (ex: 192.168.0.0/16, 10.31.0.0/16 등)을 입력합니다.  
여기서는 위에서 설정했던 로드밸런서 IP 대역인 `10.0.4.0/24`를 입력했습니다. 

``` bash
~# vi /etc/apache2/mods-available/myfixip.conf
```
``` apache
&lt;IfModule mod_myfixip.c&gt;
  RewriteIPResetHeader off
  RewriteIPAllow 10.0.4.0/24
&lt;/IfModule&gt;
```
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-27.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **모듈 설치, Apache 재시작**  
다음 명령으로 myfixip 모듈을 설치하고 Apache를 재시작합니다.

``` bash
~# a2enmod myfixip
~# systemctl restart apache2
```
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-28.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}


## 최종 접속 테스트
모든 설정을 모두 마친 후에 서버에 접속해봅니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-15.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## 최종 접속 로그 확인
접속 로그를 다시 확인해보면 이번에는 로드밸런서 IP가 아닌 Client IP가 기록된 것을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-29-2.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## 참고URL

1. Ncloud Proxy Protocol 설정하기 가이드
  - &lt;a href=&quot;https://guide.ncloud-docs.com/docs/loadbalancer-targetgroup-vpc#proxy-protocol-%EC%84%A4%EC%A0%95&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/loadbalancer-targetgroup-vpc#proxy-protocol-%EC%84%A4%EC%A0%95&lt;/a&gt;

2. CentOS 서버에서 Proxy Protocol을 이용해 Client IP 확인하기
  - &lt;a href=&quot;/networking/ncloud-networking-proxy-protocol-client-ip-logging-centos.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-centos.html&lt;/a&gt;

3. Rocky Linux 서버에서 Proxy Protocol을 이용해 Client IP 확인하기
  - &lt;a href=&quot;/networking/ncloud-networking-proxy-protocol-client-ip-logging-rocky-linux.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-rocky-linux.html&lt;/a&gt;    


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}</description>
            <pubDate>Tue, 22 Aug 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-ubuntu.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-ubuntu.html</guid>
            
            <category>vpc</category>
            
            <category>load_balancer</category>
            
            <category>proxy</category>
            
            
        </item>
        
        <item>
            <title>Proxy Protocol을 이용해 Client IP 확인하기 | CentOS</title>
            <description>## 개요
Ncloud Load Balancer는 HTTP, HTTPS, TCP, SSL 이렇게 4가지의 프로토콜을 지원합니다.  
그런데, Load Balancer를 사용하면서 Client IP를 확인하려고 할 때 http, https 통신의 경우 X-Forwarded-For 헤더값이 지원되기에 Client IP를 확인할 수 있지만, 
TCP 통신의 경우 X-Forwarded-For 헤더를 사용할 수 없기에 Client IP를 확인하기 위해서는 Proxy Protocol 옵션을 활성화 시켜야 합니다.

여기서는 **Ncloud Network Proxy Load Balancer**의 TCP 프로토콜을 사용하면서 `Proxy Protocol 옵션을 활성화`시켜 **CentOS 서버에서 Client IP를 기록**하는 방법을 소개하겠습니다.

## 테스트 환경
- VPC 환경
- CentOS 7.8
- Apache 2.4.6
- Network Proxy Load Balancer
- Protocol/Port: TCP/80


## CentOS 서버 설치
서버를 생성하고 Apache 웹서버와 개발용 추가 모듈이 포함된 **httpd-devel 패키지**를 설치하고 간단한 웹페이지를 만들어 접속해 보았습니다.  

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/compute/ncloud_compute_server_vpc_create.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;VPC 환경에서 서버 생성하는 방법&lt;/a&gt;
&quot; %}

```bash
~# yum -y install httpd httpd-devel
```
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## Target Group 설정 
우선 Load Balancer를 생성하기 전에 Load Balancer에서 사용할 Target Group을 [Load Balancer] - [Target Group]에서 생성합니다.

- **Target Group 생성**  
Target Group의 이름를 입력하고 Target 유형은 [VPC Server]를 선택, 다음으로 VPC 대역을 선택합니다.  
그리고, `프로토콜은 PROXY_TCP를 선택`하고, 포트는 80포트를 사용하겠습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-03.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Health Check 설정**  
Health Check 할 프로토콜은 TCP를 선택합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-04.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Target 추가**  
앞에서 생성했던 서버 2대를 선택하고 [적용 Target]쪽으로 이동시킵니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-05.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **설정 확인**  
설정 정보를 최종 확인하고 이상이 없으면 Target Group을 생성합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-06.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

생성된 Target Group를 확인할 수 있습니다.
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-07.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## Network Proxy Load Balancer 생성
[Load Balancer]에서 [로드밸런서 생성] 버튼을 클릭하고  [네트워크 프록시 로드밸런서]를 선택합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-08.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **로드밸런서 설정**  
필요한 로드밸런서 설정을 선택하는데, 그 중에서 서브넷은 혹시 생성되어 있지 않으면 [서브넷 생성] 버튼을 클릭해 로드밸런서 전용 서브넷을 생성한 후에 다시 돌아옵니다. 여기서는 [10.0.4.0/24] 대역으로 설정했습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-09.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **리스너 설정**  
리스너는 TCP 프로토콜에 80 포트를 선택하고 추가합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-10.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Target Group 선택  
Target Group는 위쪽에서 생성한 [Proxy-Protocol-TG] 을 선택합니다. 선택하면 해당 Target Group 설정 내용을 바로 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-11.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **설정 확인**  
선택한 설정을 최종 확인하고 이상이 없으면 [로드밸런서 생성] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-12.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **생성 확인**  
생성된 로드밸런서의 정보를 확인합니다. 특히 접속 정보와 서브넷은 이후 테스트에 사용되므로 꼭 기억하거나 메모해 두는 것이 좋습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-13.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## ACG 설정
로드밸런서 → 서버 접속이 가능하도록 서버 ACG에 규칙을 추가합니다.  
서버에 적용된 ACG의 규칙 설정 화면에서 프로토콜은 TCP,  접근소스는 로드밸런서 IP 대역인 10.0.4.0/24, 포트는 80을 입력하고 추가합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-32.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## 로드밸런서 접속 테스트
위에서 생성된 로드밸런서 접속 주소로 접속을 해보면 아래와 같은 화면을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-14.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Apache 접속 로그 확인**  
Apache 접속 로그 파일은 아래의 위치에 존재하지만, 저희는 네이버 클라우드 (Ncloud)의 상품 중 하나인 **Cloud Log Analytics**에서 로그를 수집해서 확인해보겠습니다. 
- CentOS Apache 로그파일 위치 : /var/log/httpd/access_log

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/analytics/ncloud_analytics_cloud_log_analytics_guide.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;Cloud Log Analytics 설정 가이드&lt;/a&gt;
&quot; %}

Cloud Log Analytics에서 수집한 로그를 확인해보면 위에서 설정했던 **Load Balancer의 IP 대역 (10.0.4.xx)**이 기록된 것을 확인할 수 있습니다.  

다음에는 로드밸런서 IP가 아닌 실제 Client IP가 기록되도록 설정을 변경해 보겠습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-16-1.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}


## Proxy Protocol 설정
이제 실제 Client IP가 기록되도록 Proxy Protocol을 설정해보겠습니다.  
[Load Balancer] - [Target Group]에서 위에서 생성했던 Target Group를 선택하고 [TargetGroup 설정] 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-17.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

Target Group 설정 화면에서 [ProxyProtocol] 옵션을 체크하고 확인 버튼을 클릭합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-18.png&quot; width=&quot;680&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

위에서 정상적으로 접속이 되었던 로드밸런서 주소로 접속하면 [Bad Request] 메시지가 뜨는 것을 확인할 수 있습니다.  
다음으로는 서버 설정을 변경해야 합니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-19.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## Apache 모듈 설치
Proxy Protocol을 사용할 때 필요한 Apache 모듈을 CentOS 서버에 설치하겠습니다.

- **mod_myfixip 모듈 다운로드**  
아래 명령어로 mod_myfixip.c 파일을 다운로드 받습니다. 정상적으로 다운로드가 완료되면 **&apos;mod_myfixip.c&apos; saved** 라는 메시지를 확인할 수 있습니다.

```bash
~# wget --no-check-certificate https://raw.githubusercontent.com/ggrandes/apache24-modules/master/mod_myfixip.c
```

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-20.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **모듈 설치**  
이어서 /{아파치가 설치된 경로}/bin/apxs -c -i mod_myfixip.c 명령어로 모듈을 설치합니다.

```bash
~# /usr/bin/apxs -c -i mod_myfixip.c
```
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-21.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **httpd.conf 설정 변경**  
모듈 설치가 완료된 후에 httpd.conf 파일을 열어서 제일 아래쪽에 아래 코드를 추가합니다.  
RewriteIPAllow 항목에는 로드밸런서 IP 대역 (ex: 192.168.0.0/16, 10.31.0.0/16 등)을 입력합니다.  
여기서는 위에서 설정했던 로드밸런서 IP 대역인 `10.0.4.0/24`를 입력했습니다. 

``` bash
~# vi /etc/httpd/conf/httpd.conf
```
``` apache
LoadModule myfixip_module modules/mod_myfixip.so

&lt;IfModule mod_myfixip.c&gt;
  RewriteIPResetHeader off
  RewriteIPAllow 10.0.4.0/24
&lt;/IfModule&gt;
```

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-22.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

- **Apache 재시작**  
설정을 마친 후에 Apache를 재시작합니다.

``` bash
~# systemctl restart httpd
```
{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-23.png&quot; width=&quot;840&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}


## 최종 접속 테스트
모든 설정을 모두 마친 후에 서버에 접속해봅니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-14.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## 최종 접속 로그 확인
접속 로그를 다시 확인해보면 이번에는 로드밸런서 IP가 아닌 Client IP가 기록된 것을 확인할 수 있습니다.

{% include image.html file=&quot;networking/ncloud-networking-proxy-protocol-client-ip-logging-29-1.png&quot; width=&quot;845&quot; alt=&quot;Ncloud Network Proxy Load Balancer에서 
Proxy Protocol을 이용해 클라이언트 IP 주소를 확인하는 방법&quot; caption=&quot;&quot; %}

## 참고 URL

1. Ncloud Proxy Protocol 설정하기 가이드
  - &lt;a href=&quot;https://guide.ncloud-docs.com/docs/loadbalancer-targetgroup-vpc#proxy-protocol-%EC%84%A4%EC%A0%95&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/loadbalancer-targetgroup-vpc#proxy-protocol-%EC%84%A4%EC%A0%95&lt;/a&gt;

2. Ubuntu 서버에서 Proxy Protocol을 이용해 Client IP 확인하기
  - &lt;a href=&quot;/networking/ncloud-networking-proxy-protocol-client-ip-logging-ubuntu.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-ubuntu.html&lt;/a&gt;

3. Rocky Linux 서버에서 Proxy Protocol을 이용해 Client IP 확인하기
  - &lt;a href=&quot;/networking/ncloud-networking-proxy-protocol-client-ip-logging-rocky-linux.html&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-rocky-linux.html&lt;/a&gt;  


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}</description>
            <pubDate>Tue, 22 Aug 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-centos.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/networking/ncloud-networking-proxy-protocol-client-ip-logging-centos.html</guid>
            
            <category>vpc</category>
            
            <category>load_balancer</category>
            
            <category>proxy</category>
            
            
        </item>
        
        <item>
            <title>X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP 기록하기</title>
            <description>## 개요
X-Forwarded-For (XFF) 는 HTTP Header 중 하나로 Load Balancer(로드밸런서)나 Proxy Server를 통해 웹서버에 접속하는 Client의 IP 주소를 식별하는 표준 헤더입니다.  
웹서버나 WAS 앞쪽에 Load Balancer 혹은 Proxy Server 등이 위치하게 된다면 서버 접근 로그에는 Client IP가 아닌 Load Balancer 혹은 Proxy Server의 IP 주소가 기록됩니다. 
이때 웹 어플리케이션에서 X-Forwarded-For 헤더를 이용하면 Client IP를 서버 접근 로그에 남길 수 있습니다.  

여기서는 Load Balancer와 연동된 CentOS와 Ubuntu, 그리고 Rocky Linux의 Apache 웹서버 환경에서 X-Forwarded-For 를 이용하여 Apache access_log에 Clinet의 IP를 저장하는 과정을 살펴보겠습니다.


## 테스트 환경
테스트는 CentOS, Ubuntu,  Rocky Linux OS가 각각 설치된 서버를 Load Balancer와 연동한 후 Cloud Log Analytics에서 Apache access_log를  수집해 IP 주소를 확인하는 방식으로 진행하겠습니다.

### Network 환경
- VPC 대역 : 10.0.0.0/16
- Subnet 대역 (Server) : 10.0.**0**.0/24
- Subnet 대역 (Load Balancer) : 10.0.**4**.0/24

### Server 환경
- xff-test-centos : CentOS 7.8
- xff-test-ubuntu : Ubuntu 20.04
- xff-test-rocky : Rocky Linux 8.6


### 테스트 서버
위 서버 환경에서 정리한 대로 CentOS, Ubuntu, Rocky Linux 이렇게 3대의 서버를 준비했습니다. VPC 환경에서 서버 생성하는 방법은 아래 문서를 참고하시면 됩니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/compute/ncloud_compute_server_vpc_create.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;VPC 환경에서 서버 생성하는 방법&lt;/a&gt;
&quot; %}

{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-01.png&quot; width=&quot;845&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

로드밸런서도 마찬가지로 준비하고, 서버와 연동까지 완료했습니다. VPC 환경에서 로드밸런서를 생성하는 방법은 아래 문서를 참고하시면 됩니다.

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/networking/ncloud_networking_load_balancer_application_lb.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;VPC 환경에서 Application Load Balancer 생성하는 방법&lt;/a&gt;
&quot; %}

- 로드밸런서 상세 정보에서 [**10.0.4.0/24**]로 표시되는 서브넷 정보를 기억했다가 아래쪽에서 테스트할 때 확인해보겠습니다.
{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

## 설정 전 테스트
우선, **X-Forwarded-For (XFF)** 설정을 하기 전에 어떻게 기록이 남는지 확인해보겠습니다.  
아래와 같이 Load Balancer 주소로 접속해서 3대의 서버에 각각 접근하도록 합니다.  
위에서 소개한 Application Load Balancer 생성하는 방법을 그대로 따라하면 아래와 같은 메시지를 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-03.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-04.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-05.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

### Apache 접속 로그 확인
Apache 접속 로그 파일은 아래의 위치에 존재하지만, 저희는 네이버 클라우드 (Ncloud)의 상품 중 하나인 **Cloud Log Analytics**에서 로그를 수집해서 확인해보겠습니다. 
- CentOS : /var/log/httpd/access_log
- Ubuntu : /var/log/apache2/access.log
- Rocky Linux : /var/log/httpd/access_log

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
&amp;#8259; &lt;a href=&apos;/analytics/ncloud_analytics_cloud_log_analytics_guide.html&apos; target=&apos;_blank&apos; style=&apos;word-break:break-all;&apos;&gt;Cloud Log Analytics 설정 가이드&lt;/a&gt;
&quot; %}


Cloud Log Analytics에서 수집한 로그를 확인해보면 위에서 설정했던 **Load Balancer의 IP 대역 (10.0.4.xx)**이 기록된 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-06.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

- Rocky Linux는 아직 Cloud Log Analytics Agent를 지원하지 않아 서버에서 직접 로그를 확인해보았습니다.
{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-07.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

## CentOS 설정
이제 실제 Client IP가 기록 되도록 설정을 변경해보겠습니다.  
우선 CentOS에서는 **httpd.conf** 파일만 수정하면 됩니다.

``` bash
~# vim /etc/httpd/conf/httpd.conf
```

httpd.conf 파일 [**log_config_module**] 설정에 있는 LogFormat 항목에서 **%h** 를 **%{X-Forwarded-For}i** 로 수정합니다.

### httpd.conf 수정 전
``` apache   
LogFormat &quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %b \&quot;%{Referer}i\&quot; \&quot;%{User-Agent}i\&quot;&quot; combined
```
{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-08.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

### httpd.conf 수정 후  
```apache
LogFormat &quot;%{X-Forwarded-For}i %l %u %t \&quot;%r\&quot; %&gt;s %b \&quot;%{Referer}i\&quot; \&quot;%{User-Agent}i\&quot;&quot; combined
```
{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-09.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

### Apache 재시작
httpd.conf 파일 수정 후에 Apache를 재시작합니다. 로그 테스트는 Ubuntu까지 설정을 마친 후에 진행하겠습니다.

``` bash
~# systemctl restart httpd
```

## Rocky Linux 설정
Rocky Linux는 CentOS와 마찬가지로 **/etc/httpd/conf/httpd.conf** 파일에 있는 로그 관련 설정을 변경해주면 완료됩니다.

{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-10.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

## Ubuntu 설정
Ubuntu에서는 apache2.conf 파일을 수정하기 전에 **remoteip 모듈**을 사용하도록 설정해줘야 합니다.

### remoteip 설정
아래 명령어를 실행하면 remoteip 모듈이 활성화 됩니다.

``` bash
~# a2enmod remoteip
```
{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-11.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

### remoteip.load 수정
다음으로 remoteip.load 파일을 수정해서 아래쪽에 [**RemoteIPHeader X-FORWARDED-FOR**]을 추가 합니다.

``` bash
~# vim /etc/apache2/mods-enabled/remoteip.load
```

- remoteip.load 수정 전

``` apache
LoadModule remoteip_module /usr/lib/apache2/modules/mod_remoteip.so
```
- remoteip.load 수정 후

``` apache
LoadModule remoteip_module /usr/lib/apache2/modules/mod_remoteip.so
RemoteIPHeader X-FORWARDED-FOR
```
{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-12.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

### apache2.conf 수정
다음으로 **apache2.conf** 파일을 수정합니다.

``` bash
~# vim /etc/apache2/apache2.conf
```

apache2.conf LogFormat 부분에서 **%h** 를 **%a** 로 변경합니다. 

- apache2.conf 수정 전

``` apache
LogFormat &quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %O \&quot;%{Referer}i\&quot; \&quot;%{User-Agent}i\&quot;&quot; combined  
```
{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-13.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

- apache2.conf 수정 후

``` apache
LogFormat &quot;%a %l %u %t \&quot;%r\&quot; %&gt;s %O \&quot;%{Referer}i\&quot; \&quot;%{User-Agent}i\&quot;&quot; combined  
```
{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-14.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

### Apache 재시작
``` bash
~# systemctl restart apache2
```

## 설정 후 테스트
위와 같이  CentOS, Ubuntu, Rocky Linux 3대 서버에서 설정을 모두 마친 후에 로드 밸런서 URL로 접속합니다.  
이후에 Cloud Log Analytics에서 로그를 확인해보면 아래와 같이 로드밸런서 IP가 아닌 실제 접속한 Client의 IP가 기록된 것을 확인할 수 있습니다.

{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-15.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}

- Rocky Linux는 아직 Cloud Log Analytics Agent를 지원하지 않아 서버에서 직접 로그를 확인해보았습니다.
{% include image.html file=&quot;compute/ncloud-server-x-forwarded-for-client-ip-logging-guide-16.png&quot; width=&quot;840&quot; sub-class=&quot;docimage-no-top-bottom&quot; alt=&quot;Ncloud에서 X-Forwarded-For를 이용해 Proxy, Load Balancer 환경에서 Client IP를 Apache access_log에 기록하는 방법&quot; caption=&quot;&quot; %}


## 참고 URL
1.  X-Forwarded-For 안내
	- &lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/HTTP/Headers/X-Forwarded-For&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://developer.mozilla.org/ko/docs/Web/HTTP/Headers/X-Forwarded-For&lt;/a&gt;

## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}</description>
            <pubDate>Mon, 21 Aug 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/compute/ncloud_compute_server_x_forwarded_for_client_ip_logging_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/compute/ncloud_compute_server_x_forwarded_for_client_ip_logging_guide.html</guid>
            
            <category>proxy</category>
            
            <category>load_balancer</category>
            
            <category>log</category>
            
            
        </item>
        
        <item>
            <title>Ncloud API Key 접근 제한 설정하는 방법</title>
            <description>## 개요
Ncloud(네이버 클라우드)를 이용하다보면 여러 가지 정보를 조회하거나 서버를 생성하는 등의 작업을 위해 API를 활용하게 되는 경우가 많습니다. 그런데 이때 사용하는 **API Key를 접근 제한 없이 사용하게 되면 외부에 유출되거나 했을 때 심각한 보안 문제를 일으키게 되므로** 사전에 API Key에 대한 권한을 설정하거나 접근 제한을 설정해서 사용하는 것이 권장됩니다.  

여기서는 API Key를 최소 권한으로 생성하고, 접근 경로를 제한 하는 등의 방법들을 정리해보겠습니다.

## 서브 계정 생성
API Key 보안과 관련해서 가장 중요한 원칙은 메인 계정이 아닌 최소 권한을 가진 서브 계정(Sub Account)에서 API Key를 생성하는 것입니다.  

{% include warning.html title=&quot;&quot; content=&quot;
메인 계정은 최대 권한을 가지기 때문에 메인 계정으로 생성한 API도 메인 계정과 동일한 최대 권한을 가지게 됩니다. 그러므로 메인 계정으로 API Key를 생성하게 되면 이 Key가 유출되었을 때 심각한 문제가 생기기 때문에 반드시 서브 계정에서 API Key를 생성해야 합니다.
&quot; %}

{% include callout-v2.html type=&quot;info&quot; level=&quot;2&quot; content=&quot;
서브 계정(Sub Account)을 생성하는 방법은 아래 문서를 참고하시기 바랍니다.&lt;br /&gt;&lt;br /&gt;
&amp;#8259; &lt;a href=&apos;/management/ncloud_management_sub_account_guide.html&apos; target=&apos;_blank&apos;&gt;Ncloud 서브 계정 (Sub Account) 생성 가이드&lt;/a&gt;
&quot; %}

&lt;br /&gt;
- 테스트를 위해 아래와 같이 서브 계정을 준비하고, 계정을 클릭해서 서브 계정 세부 정보 화면으로 이동합니다.
{% include image.html file=&quot;management/ncloud-management-sub-account-07.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## 계정 권한 설정
서브 계정의 권한은 최소로 설정해야 합니다.  
예를 들어 Object Storage만 접근하는지, VPC Server 관련된 기능만 사용할 것인지, VPC Server 관련된 기능 중에서도 조회 기능만 사용할 것인지, Server 생성 등을 포함한 모든 기능을 사용할 것인지 등의 사용에 필요한 권한을 모두 정리해서 최소한의 권한으로 설정하는 것이 안전합니다.  

우선, 서브 계정 세부 정보 화면에서 아래쪽에 있는 [**정책**] 탭에 있는 [**개별 권한 추가**] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-08.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

정책 추가 화면에서는 네이버 클라우드에서 기본으로 제공하는 [관리형 정책]과 사용자가 직접 정의하는 [사용자 정의 정책]이 있습니다.  
우선 [관리형 정책]에서 필요한 정책을 선택하고 [추가] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-24.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- 정책이 워낙 많기 때문에 가능하면 위쪽의 검색 기능을 이용해서 정책을 찾는 것을 추천합니다.  
여기서는 테스트를 위해 Function으로 검색해서 [NCP_VPC_CLOUD_FUNCTIONS_MANAGER (VPC 기반 Cloud Functions 서비스 내 모든 기능을 이용할 수 있는 권한)]을 선택했습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-api-gateway-access-control-guide-01.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) Sub Account(서브 계정)를 이용해 API Key 접근 제한 설정하는 방법&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;management/ncloud-management-sub-account-api-gateway-access-control-guide-02.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) Sub Account(서브 계정)를 이용해 API Key 접근 제한 설정하는 방법&quot; caption=&quot;&quot; %}

## API Gateway 접근 권한 설정
우선, [서브 계정 세부 정보] 화면에서 [수정] 메뉴 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-api-gateway-access-control-guide-03.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) Sub Account(서브 계정)를 이용해 API Key 접근 제한 설정하는 방법&quot; caption=&quot;&quot; %}

- [**서브 계정 정보**] 수정 화면에서 [**접근 권한**]에 있는 [**API Gateway 접근**]을 체크합니다. 그리고, 되도록이면 [**지정된 Source에서만 접근 가능**] 옵션을 선택하고, 지정된 IP 등을 추가하는 것을 권장합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-12.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- 위 화면에서 [**추가**] 버튼을 클릭하면 아래와 같이 [**접근 가능 Source 지정**] 팝업이 나타나는데, IP를 입력하거나 VPC Server를 선택하면 됩니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-13.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- [**VPC Server**]의 경우 IP 주소가 아닌 아래 화면처럼 VPC Server 리스트에서 직접 선택해야 접근 가능합니다.
{% include image.html file=&quot;management/ncloud-management-sub-account-api-gateway-access-control-guide-04.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud(네이버 클라우드) Sub Account(서브 계정)를 이용해 API Key 접근 제한 설정하는 방법&quot; caption=&quot;&quot; %}

### API Access Key 추가
위에서 [**API Gateway 접근**] 권한을 추가하면 계정 정보 화면에 아래와 같이 [**Access Key**] 탭이 나타나고 [**추가**] 버튼을 클릭하면 [**Access Key**]와 [**Secret Key**]를 생성할 수 있습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-14.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}


## 접근 제한 테스트
그러면 위에서 설정했던 접근 제한 설정이 제대로 작동하는지 테스트 해보겠습니다.

### IP 제한
위에서 설정한 [**접근 가능 Source 지정**] 항목에 IP를 설정하지 않거나, 지정되지 않은 IP에서 접근할 경우 아래의 예시와 같은 오류 메시지가 반환됩니다.

- 호출 API: getProductList

``` xml
&lt;Message&gt;
  &lt;error&gt;
      &lt;errorCode&gt;230&lt;/errorCode&gt;
      &lt;message&gt;Forbidden&lt;/message&gt;
      &lt;details&gt;IP not allowed for authentication.&lt;/details&gt;
  &lt;/error&gt;
&lt;/Message&gt;
```

### 계정 권한 제한
계정에 올바른 권한이 설정되지 않았을 경우 아래와 같은 오류 메시지가 반환됩니다.

- 호출 API: createServerInstances

``` xml
&lt;responseError&gt;
  &lt;returnCode&gt;802&lt;/returnCode&gt;
  &lt;returnMessage&gt;You do not have authority about action : [VPCServer:Change/createServerInstance].&lt;/returnMessage&gt;
&lt;/responseError&gt;
```

- 호출 API: getDemandCostList

``` xml
&lt;responseError&gt;
  &lt;returnCode&gt;2210&lt;/returnCode&gt;
  &lt;returnMessage&gt;You do not have authority about action : [NCP_FINANCE_MANAGER].&lt;/returnMessage&gt;
&lt;/responseError&gt;
```


## 주요 API 최소 권한

&lt;div&gt;
  &lt;table class=&quot;simple_table&quot;&gt;
    &lt;thead&gt;
      &lt;tr&gt;        
        &lt;th&gt;API&lt;/th&gt;
        &lt;th&gt;설명&lt;/th&gt;
        &lt;th&gt;Classic/VPC&lt;/th&gt;
        &lt;th&gt;최소 권한&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;      
        &lt;tr&gt;
          &lt;td&gt;getProductList&lt;/td&gt;
          &lt;td&gt;Ncloud 상품 리스트 조회&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;없음&lt;/td&gt;
        &lt;/tr&gt; 
         &lt;tr&gt;
          &lt;td&gt;getDemandCostList&lt;/td&gt;
          &lt;td&gt;청구 비용 리스트 조회&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;NCP_FINANCE_MANAGER&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td rowspan=&quot;2&quot;&gt;getServerInstanceList&lt;/td&gt;
          &lt;td rowspan=&quot;2&quot;&gt;서버 인스턴스(VM) 리스트 조회&lt;/td&gt;  
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_SERVER_VIEWER&lt;/td&gt;        
        &lt;/tr&gt;  
        &lt;tr&gt;          
          &lt;td&gt;Classic&lt;/td&gt;
          &lt;td&gt;NCP_SERVER_&lt;strong&gt;OBSERVER&lt;/strong&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td rowspan=&quot;2&quot;&gt;createServerInstances&lt;/td&gt;
          &lt;td rowspan=&quot;2&quot;&gt;서버 인스턴스(VM) 생성&lt;/td&gt;
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_SERVER_MANAGER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;Classic&lt;/td&gt;
          &lt;td&gt;NCP_SERVER_MANAGER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td rowspan=&quot;2&quot;&gt;Get Action List&lt;/td&gt;
          &lt;td rowspan=&quot;2&quot;&gt;CloudFunction 액션 리스트 조회&lt;/td&gt;
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_CLOUD_FUNCTIONS_VIEWER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;Classic&lt;/td&gt;
          &lt;td&gt;NCP_CLOUD_FUNCTIONS_&lt;strong&gt;MANAGER&lt;/strong&gt;&lt;/td&gt;
        &lt;/tr&gt;    
        &lt;tr&gt;
          &lt;td rowspan=&quot;2&quot;&gt;Post Action&lt;/td&gt;
          &lt;td rowspan=&quot;2&quot;&gt;CloudFunction 액션 실행&lt;/td&gt;
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_CLOUD_FUNCTIONS_MANAGER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;Classic&lt;/td&gt;
          &lt;td&gt;NCP_CLOUD_FUNCTIONS_MANAGER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;ListBuckets&lt;/td&gt;
          &lt;td&gt;ObjectStorage 버킷 리스트 조회&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;NCP_OBJECT_STORAGE_VIEWER&lt;/td&gt;
        &lt;/tr&gt; 
        &lt;tr&gt;
          &lt;td&gt;createAutoScalingGroup&lt;/td&gt;
          &lt;td&gt;Auto Scaling Group 생성&lt;/td&gt;
          &lt;td&gt;VPC&lt;/td&gt;
          &lt;td&gt;NCP_VPC_AUTOSCALING_MANAGER&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;SMS API&lt;/td&gt;
          &lt;td&gt;Simple &amp; Easy Notification Service 내&lt;br /&gt;SMS 발신번호 등록 기능을 제외한&lt;br /&gt;모든 기능&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;NCP_SENS_MANAGER&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;geoLocation&lt;/td&gt;
          &lt;td&gt;지정한 IP의 위치 정보 조회&lt;/td&gt;
          &lt;td&gt;공통&lt;/td&gt;
          &lt;td&gt;NCP_GEOLOCATION_MANAGER&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/div&gt;

## 참고 URL
1.  Ncloud Sub Account 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/ko/subaccount-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/ko/subaccount-overview&lt;/a&gt;

2.  Ncloud API 사용 가이드
	- &lt;a href=&quot;https://api.ncloud-docs.com/docs/api-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://api.ncloud-docs.com/docs/api-overview&lt;/a&gt;  


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}
</description>
            <pubDate>Mon, 14 Aug 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/management/ncloud-management-sub-account-api-gateway-access-control-guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/management/ncloud-management-sub-account-api-gateway-access-control-guide.html</guid>
            
            <category>account</category>
            
            <category>api</category>
            
            
        </item>
        
        <item>
            <title>Ncloud 서브 계정 (Sub Account) 생성 가이드</title>
            <description>## 개요
Sub Account(서브 계정)는 네이버 클라우드의 서비스 자원을 여러 사용자가 동시에 이용, 관리해야 할 때 필요한 만큼만 권한을 부여해서 사용할 수 있게 해주는 서비스입니다.  
Sub Account를 사용하면 사내 담당부서나 담당자별로 지정된 자원에만 접근하도록 하거나, 협력사에게 일부 접근권한을 부여해야 할 때 효과적입니다.

## 특징
네이버 클라우드의 Sub Account는 다음과 같은 특징이 있습니다.

- 별도의 로그인 페이지를 이용하여 접속
- 대시보드에서 서브 계정 수, 그룹 수, 정책 수, 접속 페이지 설정을 확인할 수 있음
- 그룹, 정책, 역할을 생성해 상세한 권한 설정을 할 수 있음
- Access Key를 별도로 생성해서 사용할 수 있음


## 주요 권한

- 네이버 클라우드 메인 계정과 동일한 접근 권한  
	**NCP_ADMINISTRATOR** 정책을 부여하시면 메인 계정과 동일하게 네이버클라우드플랫폼 내 포털, 콘솔을 접근할 수 있습니다

- 네이버 클라우드 콘솔 내 모든 상품/서비스 접근 권한  
	**NCP_INFRA_MANAGER** 정책을 부여하시면 메인 계정과 동일하게 콘솔 내 모든 상품/서비스에 접근할 수 있습니다.

- 네이버 클라우드 콘솔 내 각 상품/서비스별 접근 권한  
	**NCP_상품/서비스명_MANAGER/VIEWER** 정책을 부여하시면 해당 상품/서비스에 접근할 수 있습니다.

- 네이버 클라우드 포털 내 마이페이지 &quot;이용관리&quot; 메뉴 접근 권한  
	**NCP_FINANCE_MANAGER** 정책을 부여하시면 포털 마이페이지 내 &quot;서비스 이용내역/현황, 프로모션 내역, 청구 내역 추세&quot; 메뉴에 접근할 수 있습니다.


## Sub Account 서비스
[**Sub Account**] 서비스는 [**콘솔**] - [**Services**] - [**Management &amp; Governance**] - [**Sub Account**]에 위치하고 있습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-26.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

좀 더 쉽게 찾는 방법은 [**콘솔**] - [**Services**]에서 [**검색**] 기능을 이용하면 됩니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-27.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## 서브 계정 생성
[**Sub Account**] - [**Sub Accounts**]에서 [**서브 계정 생성**] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncp_manage_sub_account_01.jpg&quot; width=&quot;770&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

서브 계정 생성 화면에서는 로그인 아이디, 이름, 이메일 주소를 우선 입력합니다.  

다음으로 접근 유형으로 [Console 접근]과 [API 접근]을 모두 허용할 것인지, 하나만 허용할 것인지 선택하고, 
Conosole 접근의 경우에 지정한 IP대역에서만 접근하게 할 것인지, 모두 허용할 것인지도 선택합니다.  

휴대폰 문자인증 또는 이메일 인증 등의 2차 인증을 적용할 것인지도 선택합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-02.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

### 비밀번호 설정

마지막으로 로그인 비밀번호는 [**자동 생성**] 또는 [**직접 입력**] 중에서 선택할 수 있으며, 해당 서브 계정으로 로그인 시에 비밀번호를 변경하도록 할 것인지 선택할 수 있습니다.

#### 자동 생성
{% include image.html file=&quot;management/ncloud-management-sub-account-03.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- `자동 생성된 비밀번호는 이 화면에서만 확인 가능하므로 반드시 별도 저장해야 합니다.`
{% include image.html file=&quot;management/ncloud-management-sub-account-05.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

#### 직접 입력
직접 입력하는 비밀번호는 영문자, 숫자, 특수 문자를 조합하여 8자~16자 이내로 입력하면 됩니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-04.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-bottom&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

{% include image.html file=&quot;management/ncloud-management-sub-account-06.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}


## 계정 정책 추가
생성된 서브 계정을 클릭하면 서브 계정 상세 설정 화면으로 이동합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-07.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

서브 계정 상세 화면에서는 정책, 그룹, Access Key 등을 추가하고 관리할 수 있습니다.  우선 아래쪽에 있는 [**정책**] 탭에서 [**개별 권한 추가**] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-08.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

정책 추가 화면에서는 네이버 클라우드에서 기본으로 제공하는 [관리형 정책]과 사용자가 직접 정의하는 [사용자 정의 정책]이 있습니다.  
우선 [관리형 정책]에서 필요한 정책을 선택하고 [추가] 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-24.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

정책이 워낙 많기 때문에 가능하면 위쪽의 검색 기능을 이용해서 정책을 찾는 것을 추천합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-25.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

여기서는 네이버 클라우드의 플랫폼 내 모든 상품을 이용할 수 있는 권한인 [**NCP_INFRA_MANAGER**] 선택했고, 아래와 같이 추가된 것을 확인할 수 있습니다. 

{% include image.html file=&quot;management/ncloud-management-sub-account-09.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## 접속 환경 설정
네이버 클라우드 서브 계정은 별도의 로그인 페이지가 존재하는데, 
[**Sub Account**] - [**Dashboard**]에서 서브 계정으로 접속하기 위한 페이지 주소를 입력할 수 있습니다.  

우선 서브 계정 로그인 페이지 접속 접속키를 입력합니다. 입력한 접속키를 바탕으로 로그인 페이지 URL이 결정됩니다.  

추천되는 접속키의 형태는 다음과 같습니다.
- 회사명 + &amp;alpha; (ex: mycompany, samplecomsub)
- 서비스명 + &amp;alpha; (ex: mygame, testservicesub)
- 회사명 + 서비스명 + &amp;alpha; (ex: mycompanygame, mycomsamplegamesub)

{% include callout-v2.html type=&quot;warning&quot; level=&quot;2&quot; content=&quot;접속키는 영어 소문자와 숫자를 이용해서 3~20자로 구성해야 합니다.&quot; %}

{% include image.html file=&quot;management/ncloud-management-sub-account-20.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

서브 계정 로그인 페이지 URL은 [**주소 복사**] 버튼을 클릭하면 복사할 수 있습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-21.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

다음으로 [**미사용 세션 만료 설정**]에서 [**변경**] 버튼을 클릭하면 로그인된 서브 계정이 아무 활동없이 미사용일 경우 지정한 시간 기준으로 자동 로그아웃이 되도록 설정할 수 있습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-22.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

[**비밀번호 만료 설정**]에서 [**변경**] 버튼을 클릭해서 비밀번호 만료를 활성화할 경우 지정된 만료일을 초과했을 때 비밀번호를 변경해야만 접속 할 수 있습니다. 
활성화 하지 않았을 경우에는 90일이 지난 후에 비밀번호 변경 안내 팝업만 나타납니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-23.png&quot; width=&quot;845&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## 접속 - 로그인
위에서 설정한 접속 페이지 [ **https://www.ncloud.com/nsa/\*\*\*\*\*\***] 에 접속하면 아래와 같이 서브 계정 로그인 화면을 확인할 수 있습니다.  

{% include image.html file=&quot;management/ncloud-management-sub-account-10.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}


## API Key 설정
서브 계정에서 API Access Key를 사용해야 할 경우 먼저 API GateWay 접근 권한을 부여하고, 서브 계정 상세 화면 [Access Key]탭에서 [추가] 버튼을 클릭해 생성할 수 있습니다. 

### API Gateway 접근 권한 설정
우선, 서브 계정 리스트에서 해당 계정을 클릭해서 [**서브 계정 세부 정보**] 화면으로 이동합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-07.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- [**서브 계정 세부 정보**] 화면에서 [**수정**] 메뉴 버튼을 클릭합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-11.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- [**서브 계정 정보**] 수정 화면에서 [**접근 권한**]에 있는 [**API Gateway 접근**]을 체크합니다. 그리고, 되도록이면 [**지정된 Source에서만 접근 가능**] 옵션을 선택하고, 지정된 IP 등을 추가하는 것을 권장합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-12.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

- 위 화면에서 [**추가**] 버튼을 클릭하면 아래와 같이 [**접근 가능 Source 지정**] 팝업이 나타나는데, IP를 입력하거나 VPC Server를 선택하면 됩니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-13.png&quot; width=&quot;685&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

### API Access Key 추가
위에서 [**API Gateway 접근**] 권한을 추가하면 계정 정보 화면에 아래와 같이 [**Access Key**] 탭이 나타나고 [**추가**] 버튼을 클릭하면 [**Access Key**]와 [**Secret Key**]를 생성할 수 있습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-14.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## 계정 그룹 설정
여러 개의 서브 계정을 묶어서 하나의 그룹으로 구성하면 해당 그룹의 서브 계정에 동일한 정책을 동시에 적용할 수 있습니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-15.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

## 사용자 정의 정책 생성
서브 계정 정책에는 네이버 클라우드에서 기본으로 제공하는 [관리형 정책] 외에도 사용자가 직접 설정하는 [사용자 정의 정책]도 사용할 수 있습니다. 
[Sub Account] - [Plicies]에서 [정책 생성] 버튼을 클릭합니다. 

{% include image.html file=&quot;management/ncloud-management-sub-account-28.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

### VPC 환경에서 정책 생성
정책 이름을 입력하고, VPC를 선택 후, 어떤 서비스 상품에 적용할 것인지 선택합니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-16.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

다음으로 Actions 항목에서는 읽기 권한인 View 또는 수정 권한인 Change를 선택하면 아래쪽에 리소스별로 상세한 권한 설정을 할 수 있는 화면이 나타납니다. 
모든 설정을 마치고, 아래쪽 [적용대상 추가] 버튼을 클릭하면 됩니다. 

{% include image.html file=&quot;management/ncloud-management-sub-account-17.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

### Classic 환경에서 정책 생성
Classic 환경에서는 리소스별 상세 권한은 설정할 수 없고, View 또는 Change를 선택한 후에 [적용대상 추가] 버튼을 클릭하면 모든 권한이 추가됩니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-18.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}

아래와 같이 선택한 서비스 상품에 대해 모든 리전, 모든 리소스에 선택한 권한이 지정됩니다.

{% include image.html file=&quot;management/ncloud-management-sub-account-19.png&quot; width=&quot;845&quot; sub-class=&quot;docimage-no-top&quot; alt=&quot;Ncloud (네이버 클라우드) Sub Account (서브 계정) 생성 가이드&quot; caption=&quot;&quot; %}


## 참고 URL
1.  Sub Account 사용 가이드
	- &lt;a href=&quot;https://guide.ncloud-docs.com/docs/ko/subaccount-overview&quot; target=&quot;_blank&quot; style=&quot;word-break:break-all;&quot;&gt;https://guide.ncloud-docs.com/docs/ko/subaccount-overview&lt;/a&gt;


## 문서 업데이트 내역
{% include doc-history.html width=&quot;50%&quot; %}
</description>
            <pubDate>Mon, 07 Aug 2023 00:00:00 +0900</pubDate>
            <link>https://docs.3rdeyesys.com/management/ncloud_management_sub_account_guide.html</link>
            <guid isPermaLink="true">https://docs.3rdeyesys.com/management/ncloud_management_sub_account_guide.html</guid>
            
            <category>account</category>
            
            <category>api</category>
            
            
        </item>
        
    </channel>
</rss>
